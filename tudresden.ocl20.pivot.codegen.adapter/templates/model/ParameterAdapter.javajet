<%@ jet package="tudresden.ocl20.pivot.codegen.adapter.templates.model" class="ParameterAdapter" imports="org.eclipse.emf.codegen.ecore.genmodel.* tudresden.ocl20.pivot.codegen.adapter.PivotAdapterGeneratorUtil "%>
<%GenClass genClass = (GenClass)argument;
GenPackage genPackage = genClass.getGenPackage();
GenModel genModel = genPackage.getGenModel();
String modelName = PivotAdapterGeneratorUtil.startWithCapitalLetter(genModel.getModelName());
String adapterClass = PivotAdapterGeneratorUtil.getAdapterClassName(genModel, "Parameter");
String adapteeClass = PivotAdapterGeneratorUtil.getPivotModelAttributeName(genModel, "Parameter");
String adapteeName = PivotAdapterGeneratorUtil.getDSLElementName(adapteeClass);
String implementThis = PivotAdapterGeneratorUtil.getImplementThis();%>
package <%=PivotAdapterGeneratorUtil.getAdapterPackage(genModel)%>;

<%genModel.addImport("org.apache.log4j.Logger");
genModel.addImport("tudresden.ocl20.pivot.pivotmodel.Operation");
genModel.addImport("tudresden.ocl20.pivot.pivotmodel.Parameter");
genModel.addImport("tudresden.ocl20.pivot.pivotmodel.Type");
genModel.addImport("tudresden.ocl20.pivot.pivotmodel.base.AbstractParameter");
genModel.addImport(PivotAdapterGeneratorUtil.getPackageNameFor(genClass) + adapteeClass);
genModel.markImportLocation(stringBuffer);%>

/**
 * An implementation of the Pivot Model {@link Parameter} concept for <%=modelName%>.
 *
 * @generated
 */
public class <%=adapterClass%> extends AbstractParameter implements Parameter {

	/**
	 * Logger for this class
	 */
	private static final Logger logger = Logger.getLogger(<%=adapterClass%>.class);

	// the adapted <%=modelName%> <%=adapteeClass%>
	private <%=adapteeClass%> <%=adapteeName%>;

	/**
	 * Creates a new <code><%=adapterClass%></code> instance.
	 *
	 * @param <%=adapteeName%> the {@link <%=adapteeClass%>} that is adopted by this class
	 *
	 * @generated
	 */
	public <%=adapterClass%>(<%=adapteeClass%> <%=adapteeName%>) {
		
		if (logger.isDebugEnabled()) {
			logger.debug("<%=adapterClass%>(<%=adapteeName%>=" + <%=adapteeName%> + ") - enter"); //$NON-NLS-1$ //$NON-NLS-2$
		}

		// initialize adapted parameter
		this.<%=adapteeName%> = <%=adapteeName%>;

		if (logger.isDebugEnabled()) {
			logger.debug("<%=adapterClass%>() - exit"); //$NON-NLS-1$
		}
	}

	/**
	 * @see tudresden.ocl20.pivot.pivotmodel.base.AbstractParameter#getName()
	 *
	 * @generated
	 */
	@Override
	public String getName() {
		<%=implementThis%>
		return null;
	}

	/**
	 * @see tudresden.ocl20.pivot.pivotmodel.base.AbstractParameter#getOperation()
	 *
	 * @generated
	 */
	@Override
	public Operation getOperation() {
		<%=implementThis%>
		return null;
	}

	/**
	 * @see tudresden.ocl20.pivot.pivotmodel.base.AbstractParameter#getType()
	 *
	 * @generated
	 */
	@Override
	public Type getType() {
		<%=implementThis%>
		return null;
	}

	/**
	 * @see tudresden.ocl20.pivot.pivotmodel.impl.ParameterImpl#isMultiple()
	 *
	 * @generated
	 */
	@Override
	public boolean isMultiple() {
		<%=implementThis%>
		return false;
	}

	/**
	 * @see tudresden.ocl20.pivot.pivotmodel.impl.ParameterImpl#isOrdered()
	 *
	 * @generated
	 */
	@Override
	public boolean isOrdered() {
		<%=implementThis%>
		return false;
	}

	/**
	 * @see tudresden.ocl20.pivot.pivotmodel.impl.ParameterImpl#isUnique()
	 *
	 * @generated
	 */
	@Override
	public boolean isUnique() {
		<%=implementThis%>
		return false;
	}

}
<%genModel.emitSortedImports();%>