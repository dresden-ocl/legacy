/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * This file is part of SableCC.                             *
 * See the file "LICENSE" for copyright information and the  *
 * terms and conditions for copying, distribution and        *
 * modification of SableCC.                                  *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

/*
 * Enhanced by Ansgar Konermann to support generation of
 * attribute evaluation skeletons for L-attributed grammars.
 * Enhancements (c) 2004, 2005 Ansgar Konermann
 * Contact: <konermann@itikko.net>
 */

Macro:Production
/* This file was generated by SableCC (http://www.sablecc.org/). */

package $0$;

public abstract class $1$ extends Node
{
}

$

/**
 * @param 1     Analysis package name, including trailing dot.
 */
Macro:HiddenAlternative0
/* This file was generated by SableCC (http://www.sablecc.org/). */

package $0$;

import $1$.*;

public final class $2$ extends $3$
{
    public $2$()
    {
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw) {
        throw new RuntimeException("Switch not supported.");
    }
    public Object apply(SwitchWithReturn sw, Object param) throws AttrEvalException {
        throw new RuntimeException("Switch not supported.");
    }


    void removeChild(Node child)
    {
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "";
    }
}

$

/**
 * @param 1     Analysis package name, including trailing dot.
 */
Macro:HiddenAlternative1
/* This file was generated by SableCC (http://www.sablecc.org/). */

package $0$;

import $1$.*;

public final class $2$ extends $3$
{
    private $4$ _$5$_;

    public $2$()
    {
    }

    public $2$(
        $4$ _$5$_)
    {
        set$4$(_$5$_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw) {
        throw new RuntimeException("Switch not supported.");
    }
    public Object apply(SwitchWithReturn sw, Object param) throws AttrEvalException {
        throw new RuntimeException("Switch not supported.");
    }


    public $4$ get$4$()
    {
        return _$5$_;
    }

    public void set$4$($4$ node)
    {
        if(_$5$_ != null)
        {
            _$5$_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _$5$_ = node;
    }

    void removeChild(Node child)
    {
        if(_$5$_ == child)
        {
            _$5$_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_$5$_);
    }
}

$


/**
 * @param 1     Analysis package name, including trailing dot.
 */
Macro:HiddenAlternative2
/* This file was generated by SableCC (http://www.sablecc.org/). */

package $0$;

import $1$.*;

public final class $2$ extends $3$
{
    private $3$ _$6$_;
    private $4$ _$5$_;

    public $2$()
    {
    }

    public $2$(
        $3$ _$6$_,
        $4$ _$5$_)
    {
        set$3$(_$6$_);
        set$4$(_$5$_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw) {
        throw new RuntimeException("Switch not supported.");
    }
    public Object apply(SwitchWithReturn sw, Object param) throws AttrEvalException {
        throw new RuntimeException("Switch not supported.");
    }

    public $3$ get$3$() {
        return _$6$_;
    }

    public void set$3$($3$ node) {
        if(_$6$_ != null) {
            _$6$_.parent(null);
        }

        if(node != null) {
            if(node.parent() != null) {
                node.parent().removeChild(node);
            }
            node.parent(this);
        }

        _$6$_ = node;
    }

    public $4$ get$4$() {
        return _$5$_;
    }

    public void set$4$($4$ node)
    {
        if(_$5$_ != null)
        {
            _$5$_.parent(null);
        }

        if(node != null) {
            if(node.parent() != null) {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _$5$_ = node;
    }

    void removeChild(Node child) {
        if(_$6$_ == child)
        {
            _$6$_ = null;
        }

        if(_$5$_ == child)
        {
            _$5$_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_$6$_) +
            toString(_$5$_);
    }
}

$

