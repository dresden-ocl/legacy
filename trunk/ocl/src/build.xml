<?xml version="1.0"?>

<!-- $Id: build.xml,v 1.3 2001/02/09 21:05:22 vg103 Exp $ -->
<!-- Authored by Dan Shields <daniel@pointrelease.com>                     -->
<!-- Derived from the starting point build.xml, but heavily reworked       -->

<!--                 dresden-ocl build file                                -->
<!-- process this file with ant (http://jakarta.apache.org)                -->

<project name="dresden-ocl" default="default" basedir=".">

<!-- ********************************************************************* -->
<!-- DEFAULT PROJECT PROPERTIES:                                           -->

  <!-- <property name="build.compiler" value="classic" /> -->
  <!-- external packages -->
  <property name="ext.dir" value="${basedir}/../ext" />
  <property name="xerces.jar" value="${ext.dir}/xerces.jar" />
  <property name="junit.jar"  value="${ext.dir}/junit.jar"  />
  <property name="test.jar"  value="${basedir}/test.jar"  />

  <property name="local.class.path" 
    value="${java.class.path}:${basedir}:${xerces.jar}:${junit.jar}" 
    />
  <!-- directory structure -->
  <property name="src.dir" value="${basedir}/." />
  <property name="build.dir" value="${basedir}/." />
  <property name="jars.dir"  value="${basedir}/jars"  />
  <property name="api.dir"   value="${basedir}/api"   />

  <!-- various file pattern lists for the jars -->
  <property name="prefix"            value="tudresden/ocl"/>
  <property name="lib.files"         value="${prefix}/lib/*.class,${prefix}/injection/lib/*.class"/>
  <property name="argo.files"        value="${lib.files},${prefix}/*.class,${prefix}/*.gif,${prefix}/normalize/*.class,${prefix}/check/*.class,${prefix}/check/bootstrap/*.class,${prefix}/check/bootstrap/constraints.txt,${prefix}/check/types/*.class,${prefix}/codegen/*.class,${prefix}/parser/*.class,${prefix}/parser/analysis/*.class,${prefix}/parser/node/*.class,${prefix}/parser/lexer/*.class,${prefix}/parser/lexer/lexer.dat,${prefix}/parser/parser/*.class,${prefix}/parser/parser/parser.dat"/>
  <property name="dresden-ocl.files" value="${argo.files},${prefix}/check/types/xmifacade/*.class,${prefix}/check/types/testfacade/*.class,${prefix}/injection/*.class,${prefix}/test/royloy/*.java,${prefix}/test/royloy/*.class"/>
  <property name="royloy.files"      value="${prefix}/test/royloy/*.java,${prefix}/test/royloy/oclexpressions,${prefix}/test/TestInjection.*"/>


  <!-- package names for javadoc -->
  <property name="root.pkg"      value="tudresden.ocl" />
  <property name="package.names" value="${root.pkg}, ${root.pkg}.parser, ${root.pkg}.parser.node, ${root.pkg}.parser.analysis, ${root.pkg}.parser.lexer, ${root.pkg}.parser.parser, ${root.pkg}.normalize, ${root.pkg}.check, ${root.pkg}.check.types, ${root.pkg}.check.types.testfacade, ${root.pkg}.check.types.xmifacade, ${root.pkg}.codegen, ${root.pkg}.injection, ${root.pkg}.injection.lib, ${root.pkg}.injection.reverseeng, ${root.pkg}.lib, ${root.pkg}.lib.test, ${root.pkg}.test " />

  <!-- ******************************************************************* -->
  <!-- INITIALIZATION:                                                     -->

  <target name="init">
    <!-- <available file="${test.jar}" property="test.present"/> -->
  </target>

  <!-- ******************************************************************* -->
  <!-- CONSOLE MESSAGES:                                                   -->

  <target name="help">
    <echo message=""/>
    <echo message="In order to build dresden-ocl, you should run ant with one target"/>
    <echo message=""/>
    <echo message="The available targets are :"/>
    <echo message="  - documentation : to create the documentation with javadoc"/>
    <echo message="  - compile       : to compile the application classes only"/>
    <echo message="  - build         : to compile the application classes, create the documentation," />
    <echo message="                    and create the jar archives"/>
    <echo message="  - buildTest     : to build (as above) and run the tests"/>
    <echo message="  - check         : to compile and run the tests"/>
    <echo message="  - clean         : to clean up the .class and .jar files"/>
    <echo message="  - cleanall      : to clean up all files generated during building"/>
    <echo message="  - help          : to display this message"/>
    <echo message=""/>
    <echo message="You can also change the values of some properties using the ant -D flag"/>
    <echo message="For example if you want to use the jikes compiler, you should run :"/>
    <echo message="         ant -Dbuild.compiler=jikes compile"/>
    <echo message=""/>
    <echo message="local.class.path=${local.class.path}"/>
    <echo message=""/>
    <echo message=""/>
  </target>

  <target name="buildStarted">
  <echo message="VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV" />
  <echo message="              BUILD STARTED             " />
  <echo message="VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV" />
  </target>
  <target name="buildCompleted">
  <echo message="AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" />
  <echo message="             BUILD COMPLETED            " />
  <echo message="AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA" />
  </target>
  
  <!-- ******************************************************************* -->
  <!-- COMPILATION:                                                        -->

  <!-- A complete rebuild consists of 4 phases:
     - prepare: prepares the workspace for building in a freshly unpacked
                directory
     - clean:   removes all object (.class) files which are built in the
                compile phase (next)
     - compile: compiles all java classes
     - jar:     packs all built class files into appropriate jars
    -->
  <target name="prepare" depends="init">
    <mkdir dir="${build.dir}"/>
    <mkdir dir="${jars.dir}"/>
    <mkdir dir="${api.dir}"/>
  </target>
  <target name="clean" depends="prepare">
    <delete file="TestOclCompile.java"/>
    <delete >
      <fileset dir="${build.dir}" includes="**/*.class" />
    </delete>
    <delete >
      <fileset dir="${jars.dir}" includes="**/*.jar" />
    </delete>
  </target>
  <target name="_compile" depends="prepare">
    <javac srcdir="${src.dir}"
           destdir="${build.dir}"
           classpath="${local.class.path}"
           deprecation="on"
           debug="on"
           optimize="on" />
  </target>
  <target name="jar" depends="_compile">
    <!-- build these jars: dresden-ocl-lib.jar,ocl-argo.jar,dresden-ocl.jar,royloy.jar -->
    <jar jarfile="${jars.dir}/dresden-ocl-lib.jar" basedir="${build.dir}"
         includes="${lib.files}" />

    <jar jarfile="${jars.dir}/ocl-argo.jar" basedir="${build.dir}"
         includes="${argo.files}" />

    <jar jarfile="${jars.dir}/dresden-ocl.jar" basedir="${build.dir}"
         includes="${dresden-ocl.files}" />

    <jar jarfile="${jars.dir}/royloy.jar" basedir="${build.dir}"
         includes="${royloy.files}" />
  </target>

  <target name="compileAll" depends="clean,prepare,_compile,jar"/>

  <!-- ******************************************************************* -->
  <!-- TESTS:                                                              -->

  <!-- 1. testinjection -->
  <target name="_test1">
    <!-- TODO -->
  </target>

  <!-- check: runs all 'must have' tests -->
  <target name="check" depends="_test1" />

  <!-- ******************************************************************* -->
  <!-- DOCUMENTATION:                                                      -->

  <target name="cleandocs" >
    <delete >
      <fileset dir="${api.dir}" includes="**/*.html" />
    </delete>
  </target>

  <target name="documentation" depends="cleandocs,prepare">
    <javadoc classpath="${local.class.path}"
             author="true"
             private="true"
             windowtitle="Dresden OCL Toolkit"
             doctitle="Dresden OCL Toolkit"
             link="http://java.sun.com/products/jdk/1.2/docs/api/"
             splitindex="true"
             sourcepath="${basedir}"
             packagenames="${package.names}"
             destdir="${api.dir}" />
  </target>

  <!-- ******************************************************************* -->
  <!-- MAIN TARGETS:                                                       -->

  <target name="default" depends="help"/>

  <target name="compile" depends="compileAll"/>
  <target name="build" depends="buildStarted,compileAll,documentation,buildCompleted"/>
  <target name="buildTest" depends="build,check"/>
  <target name="cleanall" depends="clean,cleandocs"/>

</project>

