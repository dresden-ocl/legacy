<?xml version="1.0"?>

<!--
dresden-ocl build file

Process this file with ant (http://jakarta.apache.org).

Authored by Dan Shields <daniel@pointrelease.com>.
Derived from first version by Luc Maisonobe <Luc.Maisonobe@cnes.fr>,
but heavily reworked.
New version by Ralf Wiebicke.
Enhancements by Steffen Zschaler.
-->

<project name="dresden-ocl" default="all" basedir=".">

  <property name="src.dir"   value="${basedir}" />
  <property name="build.dir" value="${basedir}/build" />
  <property name="docs.dir"  value="${basedir}/api"   />

  <property name="xerces.jar" value="${src.dir}/xerces.jar" />
  <property name="junit.jar"  value="${src.dir}/junit.jar"  />

  <property file="local.properties" />

  <property name="example.dir" value="${build.dir}/example.test" />
  <property name="royloy.dir"  value="${build.dir}/royloy.test" />


  <target name="info">
    <echo message="Target info is obsolete, use ant -projecthelp instead." />
  </target>

  <target name="prepare">
    <echo message="JDK ${java.version} found, make sure, it is at least 1.3." />
    <echo message="${ant.version} found, make sure it is at least 1.4." />
    <echo message="Compiler is ${build.compiler}, dependency check is ${build.depend}" />
  </target>


  <target name="sablecc"
          description="Generates the OCL parser using SableCC."
          depends="prepare"
  >
    <uptodate property="sablecc.notRequired"
              targetfile="${src.dir}/tudresden/ocl/parser/parser/parser.dat" >
      <srcfiles dir="${src.dir}" includes="sablecc.jar"/>
      <srcfiles dir="${src.dir}" includes="ocl.grammar" />
    </uptodate>
    <antcall target="sablecc-internal" />
  </target>

  <target name="sablecc-internal"
          unless="sablecc.notRequired">
    <java classname="org.sablecc.sablecc.SableCC"
          taskname="sablecc"
          fork="yes"
          failonerror="yes"
    >
      <classpath>
        <pathelement location="sablecc.jar" />
      </classpath>
      <arg value="-d" />
      <arg value="${src.dir}" />
      <arg value="${src.dir}/ocl.grammar" />
    </java>
  </target>


  <target name="compile"
          description="Compiles all java files into the source directory."
          depends="sablecc">
    <javac srcdir= "${src.dir}"
           destdir="${src.dir}"
           deprecation="on"
           debug="on"
           depend="${build.depend}"
           optimize="off">
      <include name="tudresden/**" />
      <classpath>
        <pathelement location="${xerces.jar}" />
        <pathelement location="${junit.jar}" />
      </classpath>
    </javac>
  </target>

  <target name="test"
          description="Runs all tests."
          depends="test.junit, test.example, test.royloy, test.dresden-ocl-injector"
  />

  <target name="test.junit"
          description="Runs JUnit tests."
          depends="compile,build.dir">
    <java classname="junit.textui.TestRunner"
          taskname="junit"
          fork="yes"
          failonerror="yes"
    >
          <!-- does not work without fork, don't know why -->
      <classpath>
        <pathelement location="${src.dir}" />
        <pathelement location="${xerces.jar}" />
        <pathelement location="${junit.jar}" />
      </classpath>
      <arg value="tudresden.ocl.test.TestAll" />
      <sysproperty key="tudresden.ocl.test.tempdir" value="${build.dir}"/>
    </java>
  </target>


  <target name="build.dir" depends="prepare">
    <mkdir dir="${build.dir}"/>
  </target>


  <target name="jar.dresden-ocl-lib"
          description="Compiles and jars the OCL Runtime Library."
          depends="build.dir">
    <mkdir dir="${build.dir}/dresden-ocl-lib" />

    <copy todir="${build.dir}/dresden-ocl-lib" >
      <fileset dir="${src.dir}">
        <include name="tudresden/ocl/lib/*.java" />
        <include name="tudresden/ocl/injection/lib/*.java" />
        <include name="tudresden/ocl/injection/ocl/lib/*.java" />
        <include name="COPYING" />
      </fileset>
    </copy>

    <javac srcdir= "${build.dir}/dresden-ocl-lib"
           destdir="${build.dir}/dresden-ocl-lib"
           deprecation="on"
           debug="on"
           depend="${build.depend}"
           optimize="on">
    </javac>

    <jar jarfile="${build.dir}/dresden-ocl-lib.jar"
         basedir="${build.dir}/dresden-ocl-lib"
         excludes="**/*.java"
    />
  </target>


  <target name="jar.ocl-argo"
          description="Compiles and jars the OCL for Argo/UML package."
          depends="sablecc,build.dir">

    <mkdir dir="${build.dir}/ocl-argo" />

    <copy todir="${build.dir}/ocl-argo" >
      <fileset dir="${src.dir}">
        <include name="tudresden/ocl/*.java" />
        <exclude name="tudresden/ocl/ConstraintEvaluation.java" />
        <exclude name="tudresden/ocl/SQLTestApp.java" />
        <exclude name="tudresden/ocl/DocCheck.java" />
        <exclude name="tudresden/ocl/ConstraintApplet.java" />
        <exclude name="tudresden/ocl/ASTViewer.java" />
        <exclude name="tudresden/ocl/ASTApplet.java" />
        <include name="tudresden/ocl/images/*.gif" />
        <include name="tudresden/ocl/images/SUNIMAGELICENSE" />
        <include name="tudresden/ocl/check/bootstrap/constraints.txt" />
        <include name="tudresden/ocl/parser/lexer/lexer.dat" />
        <include name="tudresden/ocl/parser/parser/parser.dat" />
        <include name="tudresden/ocl/lib/*.java" />
        <include name="tudresden/ocl/injection/lib/*.java" />
        <include name="tudresden/ocl/normalize/*.java" />
        <include name="tudresden/ocl/check/*.java" />
        <include name="tudresden/ocl/check/bootstrap/*.java" />
        <include name="tudresden/ocl/check/types/*.java" />
        <include name="tudresden/ocl/codegen/*.java" />
        <include name="tudresden/ocl/parser/*.java" />
        <include name="tudresden/ocl/parser/analysis/*.java" />
        <include name="tudresden/ocl/parser/node/*.java" />
        <include name="tudresden/ocl/parser/lexer/*.java" />
        <include name="tudresden/ocl/parser/parser/*.java" />
        <include name="tudresden/ocl/gui/*.java" />
        <include name="tudresden/ocl/gui/events/*.java" />
        <include name="COPYING" />
      </fileset>
    </copy>

    <javac srcdir= "${build.dir}/ocl-argo"
           destdir="${build.dir}/ocl-argo"
           deprecation="on"
           debug="on"
           depend="${build.depend}"
           optimize="on" >
    </javac>

    <jar jarfile="${build.dir}/ocl-argo.jar"
         basedir="${build.dir}/ocl-argo"
         excludes="**/*.java"
    />
  </target>


  <target name="jar.dresden-ocl-injector"
          description="Compiles and jars the OCL for Java package."
          depends="sablecc,build.dir">
    <mkdir dir="${build.dir}/dresden-ocl-injector" />

    <copy todir="${build.dir}/dresden-ocl-injector" >
      <fileset dir="${src.dir}">
        <include name="tudresden/ocl/*.java" />
        <exclude name="tudresden/ocl/ConstraintEvaluation.java" />
        <exclude name="tudresden/ocl/SQLTestApp.java" />
        <exclude name="tudresden/ocl/DocCheck.java" />
        <exclude name="tudresden/ocl/ConstraintApplet.java" />
        <exclude name="tudresden/ocl/ASTViewer.java" />
        <exclude name="tudresden/ocl/ASTApplet.java" />
        <include name="tudresden/ocl/parser/*.java" />
        <include name="tudresden/ocl/parser/analysis/*.java" />
        <include name="tudresden/ocl/parser/node/*.java" />
        <include name="tudresden/ocl/parser/lexer/*.java" />
        <include name="tudresden/ocl/parser/lexer/lexer.dat" />
        <include name="tudresden/ocl/parser/parser/*.java" />
        <include name="tudresden/ocl/parser/parser/parser.dat" />
        <include name="tudresden/ocl/lib/*.java" />
        <include name="tudresden/ocl/injection/lib/*.java" />
        <include name="tudresden/ocl/injection/ocl/lib/*.java" />
        <include name="tudresden/ocl/normalize/*.java" />
        <include name="tudresden/ocl/check/*.java" />
        <include name="tudresden/ocl/check/types/*.java" />
        <include name="tudresden/ocl/check/bootstrap/*.java" />
        <include name="tudresden/ocl/check/bootstrap/constraints.txt" />
        <include name="tudresden/ocl/codegen/*.java" />
        <include name="tudresden/ocl/injection/*.java" />
        <include name="tudresden/ocl/injection/ocl/*.java" />
        <include name="COPYING" />
      </fileset>
    </copy>

    <javac srcdir= "${build.dir}/dresden-ocl-injector"
           destdir="${build.dir}/dresden-ocl-injector"
           deprecation="on"
           debug="on"
           depend="${build.depend}"
           optimize="on" >
    </javac>

    <jar jarfile="${build.dir}/dresden-ocl-injector.jar"
         basedir="${build.dir}/dresden-ocl-injector"
         excludes="**/*.java"
         manifest="${src.dir}/injector.manifest"
    />
  </target>


  <target name="jar.dresden-injector"
          depends="build.dir">
    <echo message="EXPERIMENTAL: Compiles and jars the Java Injection package. This is without OCL." />

    <mkdir dir="${build.dir}/dresden-injector" />

    <copy todir="${build.dir}/dresden-injector" >
      <fileset dir="${src.dir}">
        <include name="tudresden/ocl/injection/*.java" />
        <include name="tudresden/ocl/injection/lib/*.java" />
        <include name="tudresden/ocl/check/OclTypeException.java" />
        <include name="tudresden/ocl/parser/OclParserException.java" />
        <include name="tudresden/ocl/OclException.java" />
        <include name="COPYING" />
      </fileset>
    </copy>

    <javac srcdir= "${build.dir}/dresden-injector"
           destdir="${build.dir}/dresden-injector"
           deprecation="on"
           debug="on"
           depend="${build.depend}"
           optimize="on" >
    </javac>

    <jar jarfile="${build.dir}/dresden-injector.jar"
         basedir="${build.dir}/dresden-injector"
         excludes="**/*.java"
    />
  </target>


  <target name="jar.dresden-ocl-demo"
          description="Compiles and jars the OCL Demo Applet."
          depends="sablecc,build.dir">

    <mkdir dir="${build.dir}/dresden-ocl-demo" />

    <copy todir="${build.dir}/dresden-ocl-demo" >
      <fileset dir="${src.dir}">
        <include name="tudresden/ocl/images/*.gif" />
        <include name="tudresden/ocl/images/SUNIMAGELICENSE" />
        <include name="tudresden/ocl/check/bootstrap/constraints.txt" />
        <include name="tudresden/ocl/parser/lexer/lexer.dat" />
        <include name="tudresden/ocl/parser/parser/parser.dat" />
        <include name="tudresden/ocl/test/royloy/*.java" />
        <include name="tudresden/ocl/*.java" />
        <include name="tudresden/ocl/lib/*.java" />
        <include name="tudresden/ocl/injection/lib/*.java" />
        <include name="tudresden/ocl/injection/ocl/lib/*.java" />
        <include name="tudresden/ocl/normalize/*.java" />
        <include name="tudresden/ocl/check/*.java" />
        <include name="tudresden/ocl/check/bootstrap/*.java" />
        <include name="tudresden/ocl/check/types/*.java" />
        <include name="tudresden/ocl/codegen/*.java" />
        <include name="tudresden/ocl/parser/*.java" />
        <include name="tudresden/ocl/parser/analysis/*.java" />
        <include name="tudresden/ocl/parser/node/*.java" />
        <include name="tudresden/ocl/parser/lexer/*.java" />
        <include name="tudresden/ocl/parser/parser/*.java" />
        <include name="tudresden/ocl/gui/*.java" />
        <include name="tudresden/ocl/gui/events/*.java" />
        <include name="tudresden/ocl/check/types/xmifacade/*.java" />
        <include name="tudresden/ocl/check/types/testfacade/*.java" />
        <include name="tudresden/ocl/injection/*.java" />
        <include name="tudresden/ocl/injection/ocl/*.java" />
        <include name="tudresden/ocl/codegen/decl/*.java" />
        <include name="tudresden/ocl/sql/*.java" />
        <include name="COPYING" />
      </fileset>
    </copy>

    <javac srcdir= "${build.dir}/dresden-ocl-demo"
           destdir="${build.dir}/dresden-ocl-demo"
           deprecation="on"
           debug="on"
           depend="${build.depend}"
           optimize="on" >
      <classpath>
        <pathelement location="${xerces.jar}" />
      </classpath>
    </javac>

    <jar jarfile="${build.dir}/dresden-ocl-demo.jar"
         basedir="${build.dir}/dresden-ocl-demo"
         manifest="${src.dir}/demo.manifest">
      <include name="**/*.class" />
      <include name="**/*.dat" />
      <include name="**/*.gif" />
      <include name="tudresden/ocl/check/bootstrap/constraints.txt" />
      <include name="tudresden/ocl/test/royloy/*.java" />
    </jar>
  </target>


  <target name="jar.royloy"
          description="Compiles and jars the example code for dresden-ocl-injector.jar."
          depends="build.dir,jar.dresden-ocl-lib">

    <mkdir dir="${build.dir}/royloy" />

    <copy todir="${build.dir}/royloy" >
      <fileset dir="${src.dir}">
        <include name="tudresden/ocl/test/royloy/*.java" />
        <include name="tudresden/ocl/test/royloy/oclexpressions" />
        <include name="tudresden/ocl/test/TestInjection.java" />
        <include name="tudresden/ocl/test/TestInjectionRoyloy.java" />
        <include name="COPYING" />
      </fileset>
    </copy>

    <javac srcdir= "${build.dir}/royloy"
           destdir="${build.dir}/royloy"
           deprecation="on"
           debug="on"
           depend="${build.depend}"
           optimize="on" >
      <classpath>
        <pathelement location="${build.dir}/dresden-ocl-lib.jar" />
      </classpath>
    </javac>

    <jar jarfile="${build.dir}/royloy.jar"
         basedir="${build.dir}/royloy"
    />
  </target>

  <target name="jar.dresden-ocl-sql"
          description="Compiles and jars the OCL2SQL application."
          depends="sablecc,build.dir">

    <mkdir dir="${build.dir}/dresden-ocl-sql" />

    <copy todir="${build.dir}/dresden-ocl-sql" >
      <fileset dir="${src.dir}">
        <include name="tudresden/ocl/images/*.gif" />
        <include name="tudresden/ocl/images/SUNIMAGELICENSE" />
        <include name="tudresden/ocl/check/bootstrap/constraints.txt" />
        <include name="tudresden/ocl/parser/lexer/lexer.dat" />
        <include name="tudresden/ocl/parser/parser/parser.dat" />
        <include name="tudresden/ocl/codegen/decl/OCL2SQL4SQL92.xml" />
        <include name="tudresden/ocl/codegen/decl/OCL2SQL4Oracle.xml" />
        <include name="tudresden/ocl/codegen/decl/MappingRules.dtd" />
        <include name="tudresden/ocl/*.java" />
        <include name="tudresden/ocl/lib/*.java" />
        <include name="tudresden/ocl/normalize/*.java" />
        <include name="tudresden/ocl/check/*.java" />
        <include name="tudresden/ocl/check/bootstrap/*.java" />
        <include name="tudresden/ocl/check/types/*.java" />
        <include name="tudresden/ocl/check/types/xmifacade/*.java" />
        <include name="tudresden/ocl/check/types/testfacade/*.java" />
        <include name="tudresden/ocl/codegen/*.java" />
        <include name="tudresden/ocl/codegen/decl/*.java" />
        <include name="tudresden/ocl/parser/*.java" />
        <include name="tudresden/ocl/parser/analysis/*.java" />
        <include name="tudresden/ocl/parser/node/*.java" />
        <include name="tudresden/ocl/parser/lexer/*.java" />
        <include name="tudresden/ocl/parser/parser/*.java" />
        <include name="tudresden/ocl/gui/*.java" />
        <include name="tudresden/ocl/gui/events/*.java" />
        <include name="tudresden/ocl/sql/*.java" />
        <include name="tudresden/ocl/injection/*.java" />
        <include name="tudresden/ocl/injection/ocl/*.java" />
        <include name="tudresden/ocl/injection/lib/*.java" />
        <include name="tudresden/ocl/injection/ocl/lib/*.java" />
        <include name="COPYING" />
      </fileset>
    </copy>

    <javac srcdir= "${build.dir}/dresden-ocl-sql"
           destdir="${build.dir}/dresden-ocl-sql"
           deprecation="on"
           debug="on"
           depend="${build.depend}"
           optimize="on" >
      <classpath>
        <pathelement location="${xerces.jar}" />
      </classpath>
    </javac>

    <jar jarfile="${build.dir}/dresden-ocl-sql.jar"
         basedir="${build.dir}/dresden-ocl-sql"
         manifest="${src.dir}/sql.manifest">
      <include name="**/*.class" />
      <include name="**/*.dat" />
      <include name="**/*.gif" />
      <include name="**/*.xml" />
      <include name="**/*.dtd" />
      <include name="tudresden/ocl/check/bootstrap/constraints.txt" />
    </jar>
  </target>

  <target name="jar.dresden-ocl-reverseeng"
          description="Compiles and jars the ReverseEng application."
          depends="sablecc,build.dir">

    <mkdir dir="${build.dir}/dresden-ocl-reverseeng" />

    <copy todir="${build.dir}/dresden-ocl-reverseeng" >
      <fileset dir="${src.dir}">
        <include name="tudresden/ocl/check/OclTypeException.java" />
        <include name="tudresden/ocl/OclException.java" />
        <include name="tudresden/ocl/parser/OclParserException.java" />
        <include name="tudresden/ocl/injection/*.java" />
        <include name="tudresden/ocl/injection/lib/*.java" />
        <include name="tudresden/ocl/injection/reverseeng/**/*.java" />
        <exclude name="tudresden/ocl/injection/reverseeng/test/*" />
        <include name="tudresden/ocl/injection/reverseeng/**/*.gif" />
        <include name="tudresden/ocl/injection/reverseeng/**/*.form" />
        <include name="tudresden/ocl/injection/reverseeng/**/*.testmodified" />
        <include name="COPYING" />
      </fileset>
    </copy>

    <javac srcdir= "${build.dir}/dresden-ocl-reverseeng"
           destdir="${build.dir}/dresden-ocl-reverseeng"
           deprecation="on"
           debug="off"
           depend="${build.depend}"
           optimize="on" >
    </javac>

    <jar jarfile="${build.dir}/dresden-ocl-reverseeng.jar"
         basedir="${build.dir}/dresden-ocl-reverseeng"
         manifest="${src.dir}/reveng.manifest">
      <include name="**/*.class" />
      <include name="**/*.gif" />
    </jar>
  </target>

  <target name="jar"
          description="Builds all jar files."
          depends="jar.dresden-ocl-lib,
                   jar.ocl-argo,
                   jar.dresden-ocl-injector,
                   jar.dresden-ocl-demo,
                   jar.dresden-ocl-sql,
                   jar.royloy,
                   jar.dresden-injector,
                   jar.dresden-ocl-reverseeng"
  />


  <target name="clean"
          description="Deletes all generated files except API documentation.">
    <delete file="TestOclCompile.java"/>
    <delete file="TestOclCompile*.class"/>
    <delete dir="${build.dir}"/>
    <delete>
      <fileset dir="${src.dir}/tudresden" includes="**/*.class" />
      <fileset dir="${src.dir}/tudresden/ocl/parser/analysis" includes="*.java"/>
      <fileset dir="${src.dir}/tudresden/ocl/parser/lexer"    includes="*.java,lexer.dat"/>
      <fileset dir="${src.dir}/tudresden/ocl/parser/parser"   includes="*.java,parser.dat"/>
      <fileset dir="${src.dir}/tudresden/ocl/parser/node"     includes="*.java"/>
    </delete>
  </target>


  <target name="docs"
          description="Builds Javadoc API documentation."
          depends="sablecc">
    <echo message="BEWARE: Requires JDK 1.2.2 or higher, since previous versions do not allow multiple -link or -linkoffline arguments!" />

    <delete dir="${docs.dir}" />
    <mkdir  dir="${docs.dir}" />

    <javadoc
      packagenames="
             tudresden.ocl,
             tudresden.ocl.parser,
             tudresden.ocl.parser.analysis,
             tudresden.ocl.parser.lexer,
             tudresden.ocl.parser.parser,
             tudresden.ocl.parser.node,
             tudresden.ocl.normalize,
             tudresden.ocl.check,
             tudresden.ocl.check.types,
             tudresden.ocl.check.types.testfacade,
             tudresden.ocl.check.types.xmifacade,
             tudresden.ocl.codegen,
             tudresden.ocl.codegen.decl,
             tudresden.ocl.injection,
             tudresden.ocl.injection.lib,
             tudresden.ocl.injection.ocl,
             tudresden.ocl.injection.ocl.lib,
             tudresden.ocl.injection.test,
             tudresden.ocl.injection.reverseeng,
             tudresden.ocl.injection.reverseeng.propertypages,
             tudresden.ocl.injection.reverseeng.propertypages.events,
             tudresden.ocl.lib,
             tudresden.ocl.lib.test,
             tudresden.ocl.test,
             tudresden.ocl.sql,
             tudresden.ocl.test.sql
             "
        sourcepath="${src.dir}"
        destdir="${docs.dir}"
        maxmemory="60m"
        private="on"
        author="on"
        windowtitle="Dresden OCL Toolkit"
        doctitle=   "Dresden OCL Toolkit"
        header=  "&lt;b&gt;Dresden OCL Toolkit&lt;/b&gt;"
        footer=  "&lt;b&gt;Dresden OCL Toolkit&lt;/b&gt;"
        splitindex="on"
        bottom='
&lt;small&gt;
&lt;a href="http://sourceforge.net/bugs/?group_id=5840" target="_top"&gt;Submit a bug&lt;/a&gt;&lt;br&gt;
Developed at the &lt;a href="http://www.inf.tu-dresden.de/welcome.html" target="_top"&gt;Dresden University of Technology&lt;/a&gt;.&lt;br&gt;
This software is published under the &lt;a href="http://www.gnu.org/copyleft/lesser.html" target="_top"&gt;GNU Lesser General Public License&lt;/a&gt;.
&lt;/small&gt;'
        >
      <link offline="on" packagelistLoc="package-list/jdk/"    href="http://java.sun.com/products/jdk/1.2/docs/api/" />
      <link offline="on" packagelistLoc="package-list/xerces/" href="http://xml.apache.org/apiDocs/"  />
      <link offline="on" packagelistLoc="package-list/junit/"  href="http://www.junit.org/junit/javadoc/" />
      <classpath>
        <pathelement location="${xerces.jar}" />
        <pathelement location="${junit.jar}" />
      </classpath>
    </javadoc>

  </target>


  <target name="test.dresden-ocl-injector"
          description="Runs a test suite for dresden-ocl-injector.jar and royloy.jar."
          depends="jar.dresden-ocl-injector,jar.royloy,compile">
    <!-- dependency from compile is to have the Sort and Diff class compiled only -->
    <mkdir  dir="${build.dir}/testweb" />
    <copy file="${build.dir}/dresden-ocl-injector.jar" todir="${build.dir}/testweb" />
    <delete dir="${build.dir}/testweb/tudresden" />
    <unjar src="${build.dir}/royloy.jar" dest="${build.dir}/testweb" />
    <javac classpath="${build.dir}/dresden-ocl-injector.jar" srcdir= "${build.dir}/testweb" destdir="${build.dir}/testweb" />
    <java classname="tudresden.ocl.test.TestInjectionRoyloy"
          output="${build.dir}/dresden-ocl-injector.jar.emptytestoutput"
          failonerror="yes"
    >
      <classpath>
        <pathelement location="${build.dir}/testweb" />
        <pathelement location="${build.dir}/dresden-ocl-injector.jar" />
      </classpath>
    </java>
    <java classname="tudresden.ocl.test.Empty" taskname="isempty" failonerror="yes">
      <classpath><pathelement location="${src.dir}/" /></classpath>
      <arg value="${build.dir}/dresden-ocl-injector.jar.emptytestoutput" />
    </java>
    <exec executable="java"
        dir="${build.dir}/testweb/"
        failonerror="true"
    >
      <arg value="-jar" />
      <arg value="dresden-ocl-injector.jar" />
      <arg value="-r" />
      <arg value="tudresden.ocl.test.royloy" />
      <arg value="--modify" />
      <arg value="tudresden/ocl/test/royloy/*.java" />
    </exec>
    <javac classpath="${build.dir}/dresden-ocl-injector.jar" srcdir= "${build.dir}/testweb" destdir="${build.dir}/testweb" />
    <java classname="tudresden.ocl.test.TestInjectionRoyloy"
          output="${build.dir}/dresden-ocl-injector.jar.testoutput"
          failonerror="yes"
    >
      <classpath>
        <pathelement location="${build.dir}/testweb" />
        <pathelement location="${build.dir}/dresden-ocl-injector.jar" />
      </classpath>
    </java>
    <java classname="tudresden.ocl.test.Sort" taskname="sort" failonerror="yes">
      <classpath><pathelement location="${src.dir}/" /></classpath>
      <arg value="${build.dir}/dresden-ocl-injector.jar.testoutput" />
    </java>
    <antcall target="util.diff">
      <param name="expected" value=  "${src.dir}/dresden-ocl-injector.jar.testoutput" />
      <param name="actual"   value="${build.dir}/dresden-ocl-injector.jar.testoutput" />
    </antcall>
    <exec executable="java"
        dir="${build.dir}/testweb/"
        failonerror="true"
    >
      <arg value="-jar" />
      <arg value="dresden-ocl-injector.jar" />
      <arg value="--clean" />
      <arg value="--modify" />
      <arg value="tudresden/ocl/test/royloy/*.java" />
    </exec>
    <javac classpath="${build.dir}/dresden-ocl-injector.jar" srcdir= "${build.dir}/testweb" destdir="${build.dir}/testweb" />
  </target>




  <target name="util.diff">
    <echo taskname="diff" message="expect: ${expected}" />
    <echo taskname="diff" message="actual: ${actual}"   />
    <java classname="tudresden.ocl.test.Diff"
          taskname="diff"
          failonerror="yes"
    >
      <classpath>
        <pathelement location="${src.dir}/" />
        <pathelement location="${src.dir}/junit.jar" />
      </classpath>
      <arg value="${expected}" />
      <arg value="${actual}" />
    </java>
    <echo taskname="diff" message="ok." />
  </target>



  <target name="test.example.inject"
          depends="compile,build.dir,jar.dresden-ocl-lib,jar.dresden-ocl-injector"
  >
    <!-- dependency from compile is to have the Diff class compiled only -->
    <delete dir="${example.dir}"/>
    <copy todir="${example.dir}">
      <fileset dir="${src.dir}" >
        <include name="tudresden/ocl/injection/test/Example.java" />
        <include name="tudresden/ocl/injection/test/Interface.java" />
        <include name="tudresden/ocl/injection/test/AbstractImplementation.java" />
        <include name="tudresden/ocl/injection/test/Implementation.java" />
      </fileset>
    </copy>
    <javac srcdir="${example.dir}" destdir="${example.dir}" deprecation="on" debug="on" optimize="off">
      <classpath><pathelement location="${build.dir}/dresden-ocl-lib.jar" /></classpath>
    </javac>
    <echo taskname="inject" message="Injecting ${example.dir}/tudresden/ocl/injection/test/Example.java" />
    <java classname="tudresden.ocl.injection.ocl.Main" failonerror="yes">
      <classpath>
        <pathelement location="${build.dir}/dresden-ocl-injector.jar" />
        <pathelement location="${example.dir}" />
      </classpath>
      <arg value="--constraint-file" />
      <arg value="${src.dir}/tudresden/ocl/injection/test/Example.ocl" />
      <arg value="--reflection-model" />
      <arg value="tudresden.ocl.injection.test" />
      <arg value="--name-adapter" />
      <arg value="argo" />
      <arg value="--trace-types" />
      <arg value="--modify" />
      <arg value="${example.dir}/tudresden/ocl/injection/test/Example.java" />
    </java>
    <javac srcdir="${example.dir}" destdir="${example.dir}" deprecation="on" debug="on" optimize="off">
      <classpath><pathelement location="${build.dir}/dresden-ocl-lib.jar" /></classpath>
    </javac>
    <antcall target="util.diff">
      <param name="expected" value=    "${src.dir}/tudresden/ocl/injection/test/Example.java.injected" />
      <param name="actual"   value="${example.dir}/tudresden/ocl/injection/test/Example.java" />
    </antcall>
  </target>

  <target name="test.example.run"
          depends="test.example.inject,jar.dresden-ocl-lib"
  >
    <echo taskname="run" message="Running ${example.dir}/tudresden/ocl/injection/test/Example.java" />
    <java classname="tudresden.ocl.injection.test.Example"
          output="${example.dir}/example.testoutput"
          failonerror="yes"
    >
      <classpath>
        <pathelement location="${example.dir}" />
        <pathelement location="${build.dir}/dresden-ocl-lib.jar" />
      </classpath>
      <sysproperty
        key="tudresden.ocl.injection.lib.TypeTracer.log"
        value="${example.dir}/tudresden/ocl/injection/test/Example.ocltypetrace"
      />
    </java>
    <java classname="tudresden.ocl.test.Sort" taskname="sort" failonerror="yes">
      <classpath><pathelement location="${src.dir}/" /></classpath>
      <arg value="${example.dir}/example.testoutput" />
    </java>
    <antcall target="util.diff">
      <param name="expected" value=    "${src.dir}/example.testoutput" />
      <param name="actual"   value="${example.dir}/example.testoutput" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=    "${src.dir}/tudresden/ocl/injection/test/Example.ocltypetrace" />
      <param name="actual"   value="${example.dir}/tudresden/ocl/injection/test/Example.ocltypetrace" />
    </antcall>
  </target>

  <target name="test.example.clean"
          depends="test.example.run,jar.dresden-ocl-injector"
  >
    <echo taskname="clean" message="Cleaning ${example.dir}/tudresden/ocl/injection/test/Example.java" />
    <java classname="tudresden.ocl.injection.ocl.Main" failonerror="yes">
      <classpath>
        <pathelement location="${build.dir}/dresden-ocl-injector.jar" />
      </classpath>
      <arg value="--clean" />
      <arg value="--modify" />
      <arg value="${example.dir}/tudresden/ocl/injection/test/Example.java" />
    </java>
    <javac srcdir= "${example.dir}" destdir="${example.dir}" deprecation="on" debug="on" optimize="off">
      <classpath><pathelement location="${build.dir}/dresden-ocl-lib.jar" /></classpath>
    </javac>
    <antcall target="util.diff">
      <param name="expected" value=    "${src.dir}/tudresden/ocl/injection/test/Example.java" />
      <param name="actual"   value="${example.dir}/tudresden/ocl/injection/test/Example.java" />
    </antcall>
  </target>

  <target name="test.example"
          description="Tests the injector tool using Example.java"
          depends="test.example.clean"
  />



  <target name="test.royloy.inject"
          depends="compile,build.dir,jar.dresden-ocl-lib,jar.dresden-ocl-injector"
  >
    <!-- dependency from compile is to have the Diff class compiled only -->
    <delete dir="${royloy.dir}"/>
    <copy todir="${royloy.dir}">
      <fileset dir="${src.dir}" >
        <include name="tudresden/ocl/test/royloy/*.java" />
        <include name="tudresden/ocl/test/TestInjection.java" />
        <include name="tudresden/ocl/test/TestInjectionRoyloy.java" />
      </fileset>
    </copy>
    <javac srcdir="${royloy.dir}" destdir="${royloy.dir}" deprecation="on" debug="on" optimize="off">
      <classpath><pathelement location="${build.dir}/dresden-ocl-lib.jar" /></classpath>
    </javac>
    <echo taskname="inject" message="Injecting ${royloy.dir}/tudresden/ocl/test/royloy/*.java" />
    <java classname="tudresden.ocl.injection.ocl.Main" failonerror="yes">
      <classpath>
        <pathelement location="${build.dir}/dresden-ocl-injector.jar" />
        <pathelement location="${royloy.dir}" />
      </classpath>
      <arg value="--constraint-file" />
      <arg value="${src.dir}/tudresden/ocl/test/royloy/oclexpressions" />
      <arg value="--reflection-model" />
      <arg value="tudresden.ocl.test.royloy" />
      <arg value="--violation-macro" />
      <arg value="tudresden.ocl.test.TestInjectionRoyloy.theInstance.onViolation" />
      <arg value="--trace-types" />
      <arg value="--modcount-hash" />
      <arg value="--modify" />
      <arg value="${royloy.dir}/tudresden/ocl/test/royloy/*.java" />
    </java>
    <javac srcdir="${royloy.dir}" destdir="${royloy.dir}" deprecation="on" debug="on" optimize="off">
      <classpath><pathelement location="${build.dir}/dresden-ocl-lib.jar" /></classpath>
    </javac>
  </target>

  <target name="test.royloy.run"
          depends="test.royloy.inject,jar.dresden-ocl-lib"
  >
    <echo taskname="run" message="Running ${royloy.dir}/tudresden/ocl/test/TestInjectionRoyloy.java" />
    <java classname="tudresden.ocl.test.TestInjectionRoyloy" failonerror="yes">
      <classpath>
        <pathelement location="${build.dir}/dresden-ocl-lib.jar" />
        <pathelement location="${royloy.dir}" />
      </classpath>
      <arg value="strict" />
      <sysproperty
        key="tudresden.ocl.injection.lib.TypeTracer.log"
        value="${royloy.dir}/tudresden/ocl/test/royloy/royloy.ocltypetrace" />
    </java>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/royloy.ocltypetrace" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/royloy.ocltypetrace" />
    </antcall>
  </target>

  <target name="test.royloy.clean"
          depends="test.royloy.run,jar.dresden-ocl-injector"
  >
    <echo taskname="clean" message="Cleaning ${royloy.dir}/tudresden/ocl/test/royloy/*.java" />
    <java classname="tudresden.ocl.injection.ocl.Main" failonerror="yes">
      <classpath>
        <pathelement location="${build.dir}/dresden-ocl-injector.jar" />
      </classpath>
      <arg value="--clean" />
      <arg value="--modify" />
      <arg value="${royloy.dir}/tudresden/ocl/test/royloy/*.java" />
    </java>
    <javac srcdir="${royloy.dir}" destdir="${royloy.dir}" deprecation="on" debug="on" optimize="off">
      <classpath><pathelement location="${build.dir}/dresden-ocl-lib.jar" /></classpath>
    </javac>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/Bank.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/Bank.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/Burning.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/Burning.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/Company.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/Company.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/Customer.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/Customer.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/CustomerCard.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/CustomerCard.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/Date.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/Date.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/Day.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/Day.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/DayType.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/DayType.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/Earning.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/Earning.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/LoyaltyAccount.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/LoyaltyAccount.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/LoyaltyProgram.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/LoyaltyProgram.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/Membership.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/Membership.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/Person.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/Person.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/ProgramPartner.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/ProgramPartner.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/RLFrame.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/RLFrame.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/RLObject.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/RLObject.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/Service.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/Service.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/ServiceLevel.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/ServiceLevel.java" />
    </antcall>
    <antcall target="util.diff">
      <param name="expected" value=   "${src.dir}/tudresden/ocl/test/royloy/Transaction.java" />
      <param name="actual"   value="${royloy.dir}/tudresden/ocl/test/royloy/Transaction.java" />
    </antcall>
  </target>

  <target name="test.royloy"
          description="Tests the injector tool using royloy/*.java"
          depends="test.royloy.clean"
  />



  <target name="all"
          description="Does everything: compile, test, jar and docs."
          depends="compile, test, jar, docs"
  />
</project>
