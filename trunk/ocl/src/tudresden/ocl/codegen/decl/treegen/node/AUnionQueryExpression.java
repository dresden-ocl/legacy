/* This file was generated by SableCC (http://www.sablecc.org/). */

package tudresden.ocl.codegen.decl.treegen.node;

import java.util.*;
import tudresden.ocl.codegen.decl.treegen.analysis.*;

public final class AUnionQueryExpression extends PQueryExpression
{
    private TAll _all_;
    private final LinkedList _queryExpression_ = new TypedLinkedList(new QueryExpression_Cast());

    public AUnionQueryExpression()
    {
    }

    public AUnionQueryExpression(
        TAll _all_,
        List _queryExpression_)
    {
        setAll(_all_);

        {
            this._queryExpression_.clear();
            this._queryExpression_.addAll(_queryExpression_);
        }

    }

    public AUnionQueryExpression(
        TAll _all_,
        XPQueryExpression _queryExpression_)
    {
        setAll(_all_);

        if(_queryExpression_ != null)
        {
            while(_queryExpression_ instanceof X1PQueryExpression)
            {
                this._queryExpression_.addFirst(((X1PQueryExpression) _queryExpression_).getPQueryExpression());
                _queryExpression_ = ((X1PQueryExpression) _queryExpression_).getXPQueryExpression();
            }
            this._queryExpression_.addFirst(((X2PQueryExpression) _queryExpression_).getPQueryExpression());
        }

    }
    public Object clone()
    {
        return new AUnionQueryExpression(
            (TAll) cloneNode(_all_),
            cloneList(_queryExpression_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAUnionQueryExpression(this);
    }

    public TAll getAll()
    {
        return _all_;
    }

    public void setAll(TAll node)
    {
        if(_all_ != null)
        {
            _all_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _all_ = node;
    }

    public LinkedList getQueryExpression()
    {
        return _queryExpression_;
    }

    public void setQueryExpression(List list)
    {
        _queryExpression_.clear();
        _queryExpression_.addAll(list);
    }

    public String toString()
    {
        return ""
            + toString(_all_)
            + toString(_queryExpression_);
    }

    void removeChild(Node child)
    {
        if(_all_ == child)
        {
            _all_ = null;
            return;
        }

        if(_queryExpression_.remove(child))
        {
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_all_ == oldChild)
        {
            setAll((TAll) newChild);
            return;
        }

        for(ListIterator i = _queryExpression_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

    }

    private class QueryExpression_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PQueryExpression node = (PQueryExpression) o;

            if((node.parent() != null) &&
                (node.parent() != AUnionQueryExpression.this))
            {
                node.parent().removeChild(node);
            }

            if((node.parent() == null) ||
                (node.parent() != AUnionQueryExpression.this))
            {
                node.parent(AUnionQueryExpression.this);
            }

            return node;
        }
    }
}
