/* This file was generated by SableCC (http://www.sablecc.org/). */

package tudresden.ocl.codegen.decl.treegen.node;

import java.util.*;
import tudresden.ocl.codegen.decl.treegen.analysis.*;

public final class AColumn extends PColumn
{
    private TIdentifier _tableQualifier_;
    private TIdentifier _columnName_;
    private TIdentifier _asClause_;

    public AColumn()
    {
    }

    public AColumn(
        TIdentifier _tableQualifier_,
        TIdentifier _columnName_,
        TIdentifier _asClause_)
    {
        setTableQualifier(_tableQualifier_);

        setColumnName(_columnName_);

        setAsClause(_asClause_);

    }
    public Object clone()
    {
        return new AColumn(
            (TIdentifier) cloneNode(_tableQualifier_),
            (TIdentifier) cloneNode(_columnName_),
            (TIdentifier) cloneNode(_asClause_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAColumn(this);
    }

    public TIdentifier getTableQualifier()
    {
        return _tableQualifier_;
    }

    public void setTableQualifier(TIdentifier node)
    {
        if(_tableQualifier_ != null)
        {
            _tableQualifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _tableQualifier_ = node;
    }

    public TIdentifier getColumnName()
    {
        return _columnName_;
    }

    public void setColumnName(TIdentifier node)
    {
        if(_columnName_ != null)
        {
            _columnName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _columnName_ = node;
    }

    public TIdentifier getAsClause()
    {
        return _asClause_;
    }

    public void setAsClause(TIdentifier node)
    {
        if(_asClause_ != null)
        {
            _asClause_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _asClause_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_tableQualifier_)
            + toString(_columnName_)
            + toString(_asClause_);
    }

    void removeChild(Node child)
    {
        if(_tableQualifier_ == child)
        {
            _tableQualifier_ = null;
            return;
        }

        if(_columnName_ == child)
        {
            _columnName_ = null;
            return;
        }

        if(_asClause_ == child)
        {
            _asClause_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_tableQualifier_ == oldChild)
        {
            setTableQualifier((TIdentifier) newChild);
            return;
        }

        if(_columnName_ == oldChild)
        {
            setColumnName((TIdentifier) newChild);
            return;
        }

        if(_asClause_ == oldChild)
        {
            setAsClause((TIdentifier) newChild);
            return;
        }

    }
}
