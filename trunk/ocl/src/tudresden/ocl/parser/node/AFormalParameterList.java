/* This file was generated by SableCC (http://www.sable.mcgill.ca/sablecc/). */

package tudresden.ocl.parser.node;

import java.util.*;
import tudresden.ocl.parser.analysis.*;

public final class AFormalParameterList extends PFormalParameterList
{
    private PFormalParameter _formalParameter_;
    private final LinkedList _formalParameterListTail_ = new TypedLinkedList(new FormalParameterListTail_Cast());

    public AFormalParameterList()
    {
    }

    public AFormalParameterList(
        PFormalParameter _formalParameter_,
        List _formalParameterListTail_)
    {
        setFormalParameter(_formalParameter_);

        {
            Object temp[] = _formalParameterListTail_.toArray();
            for(int i = 0; i < temp.length; i++)
            {
                this._formalParameterListTail_.add(temp[i]);
            }
        }

    }

    public AFormalParameterList(
        PFormalParameter _formalParameter_,
        XPFormalParameterListTail _formalParameterListTail_)
    {
        setFormalParameter(_formalParameter_);

        if(_formalParameterListTail_ != null)
        {
            while(_formalParameterListTail_ instanceof X1PFormalParameterListTail)
            {
                this._formalParameterListTail_.addFirst(((X1PFormalParameterListTail) _formalParameterListTail_).getPFormalParameterListTail());
                _formalParameterListTail_ = ((X1PFormalParameterListTail) _formalParameterListTail_).getXPFormalParameterListTail();
            }
            this._formalParameterListTail_.addFirst(((X2PFormalParameterListTail) _formalParameterListTail_).getPFormalParameterListTail());
        }

    }
    public Object clone()
    {
        return new AFormalParameterList(
            (PFormalParameter) cloneNode(_formalParameter_),
            cloneList(_formalParameterListTail_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFormalParameterList(this);
    }

    public PFormalParameter getFormalParameter()
    {
        return _formalParameter_;
    }

    public void setFormalParameter(PFormalParameter node)
    {
        if(_formalParameter_ != null)
        {
            _formalParameter_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _formalParameter_ = node;
    }

    public LinkedList getFormalParameterListTail()
    {
        return _formalParameterListTail_;
    }

    public void setFormalParameterListTail(List list)
    {
        Object temp[] = list.toArray();
        for(int i = 0; i < temp.length; i++)
        {
            _formalParameterListTail_.add(temp[i]);
        }
    }

    public String toString()
    {
        return ""
            + toString(_formalParameter_)
            + toString(_formalParameterListTail_);
    }

    void removeChild(Node child)
    {
        if(_formalParameter_ == child)
        {
            _formalParameter_ = null;
            return;
        }

        if(_formalParameterListTail_.remove(child))
        {
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_formalParameter_ == oldChild)
        {
            setFormalParameter((PFormalParameter) newChild);
            return;
        }

        for(ListIterator i = _formalParameterListTail_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

    }

    private class FormalParameterListTail_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PFormalParameterListTail node = (PFormalParameterListTail) o;

            if((node.parent() != null) &&
                (node.parent() != AFormalParameterList.this))
            {
                node.parent().removeChild(node);
            }

            if((node.parent() == null) ||
                (node.parent() != AFormalParameterList.this))
            {
                node.parent(AFormalParameterList.this);
            }

            return node;
        }
    }
}

