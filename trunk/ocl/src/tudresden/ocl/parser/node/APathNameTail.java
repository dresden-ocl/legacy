/* This file was generated by SableCC (http://www.sable.mcgill.ca/sablecc/). */

package tudresden.ocl.parser.node;

import java.util.*;
import tudresden.ocl.parser.analysis.*;

public final class APathNameTail extends PPathNameTail
{
    private TDcolon _dcolon_;
    private PPathNameEnd _pathNameEnd_;

    public APathNameTail()
    {
    }

    public APathNameTail(
        TDcolon _dcolon_,
        PPathNameEnd _pathNameEnd_)
    {
        setDcolon(_dcolon_);

        setPathNameEnd(_pathNameEnd_);

    }
    public Object clone()
    {
        return new APathNameTail(
            (TDcolon) cloneNode(_dcolon_),
            (PPathNameEnd) cloneNode(_pathNameEnd_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPathNameTail(this);
    }

    public TDcolon getDcolon()
    {
        return _dcolon_;
    }

    public void setDcolon(TDcolon node)
    {
        if(_dcolon_ != null)
        {
            _dcolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _dcolon_ = node;
    }

    public PPathNameEnd getPathNameEnd()
    {
        return _pathNameEnd_;
    }

    public void setPathNameEnd(PPathNameEnd node)
    {
        if(_pathNameEnd_ != null)
        {
            _pathNameEnd_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pathNameEnd_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_dcolon_)
            + toString(_pathNameEnd_);
    }

    void removeChild(Node child)
    {
        if(_dcolon_ == child)
        {
            _dcolon_ = null;
            return;
        }

        if(_pathNameEnd_ == child)
        {
            _pathNameEnd_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_dcolon_ == oldChild)
        {
            setDcolon((TDcolon) newChild);
            return;
        }

        if(_pathNameEnd_ == oldChild)
        {
            setPathNameEnd((PPathNameEnd) newChild);
            return;
        }

    }
}

