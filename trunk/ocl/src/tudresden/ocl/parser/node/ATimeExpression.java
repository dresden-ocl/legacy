/* This file was generated by SableCC (http://www.sable.mcgill.ca/sablecc/). */

package tudresden.ocl.parser.node;

import java.util.*;
import tudresden.ocl.parser.analysis.*;

public final class ATimeExpression extends PTimeExpression
{
    private TAt _at_;
    private TTPre _tPre_;

    public ATimeExpression()
    {
    }

    public ATimeExpression(
        TAt _at_,
        TTPre _tPre_)
    {
        setAt(_at_);

        setTPre(_tPre_);

    }
    public Object clone()
    {
        return new ATimeExpression(
            (TAt) cloneNode(_at_),
            (TTPre) cloneNode(_tPre_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseATimeExpression(this);
    }

    public TAt getAt()
    {
        return _at_;
    }

    public void setAt(TAt node)
    {
        if(_at_ != null)
        {
            _at_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _at_ = node;
    }

    public TTPre getTPre()
    {
        return _tPre_;
    }

    public void setTPre(TTPre node)
    {
        if(_tPre_ != null)
        {
            _tPre_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _tPre_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_at_)
            + toString(_tPre_);
    }

    void removeChild(Node child)
    {
        if(_at_ == child)
        {
            _at_ = null;
            return;
        }

        if(_tPre_ == child)
        {
            _tPre_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_at_ == oldChild)
        {
            setAt((TAt) newChild);
            return;
        }

        if(_tPre_ == oldChild)
        {
            setTPre((TTPre) newChild);
            return;
        }

    }
}

