/* This file was generated by SableCC (http://www.sable.mcgill.ca/sablecc/). */

package tudresden.ocl.parser.node;

import java.util.*;
import tudresden.ocl.parser.analysis.*;

public final class AOperationContext extends POperationContext
{
    private PTypeName _typeName_;
    private TDcolon _dcolon_;
    private TName _name_;
    private TLPar _lPar_;
    private PFormalParameterList _formalParameterList_;
    private TRPar _rPar_;
    private PReturnTypeDeclaration _returnTypeDeclaration_;

    public AOperationContext()
    {
    }

    public AOperationContext(
        PTypeName _typeName_,
        TDcolon _dcolon_,
        TName _name_,
        TLPar _lPar_,
        PFormalParameterList _formalParameterList_,
        TRPar _rPar_,
        PReturnTypeDeclaration _returnTypeDeclaration_)
    {
        setTypeName(_typeName_);

        setDcolon(_dcolon_);

        setName(_name_);

        setLPar(_lPar_);

        setFormalParameterList(_formalParameterList_);

        setRPar(_rPar_);

        setReturnTypeDeclaration(_returnTypeDeclaration_);

    }
    public Object clone()
    {
        return new AOperationContext(
            (PTypeName) cloneNode(_typeName_),
            (TDcolon) cloneNode(_dcolon_),
            (TName) cloneNode(_name_),
            (TLPar) cloneNode(_lPar_),
            (PFormalParameterList) cloneNode(_formalParameterList_),
            (TRPar) cloneNode(_rPar_),
            (PReturnTypeDeclaration) cloneNode(_returnTypeDeclaration_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAOperationContext(this);
    }

    public PTypeName getTypeName()
    {
        return _typeName_;
    }

    public void setTypeName(PTypeName node)
    {
        if(_typeName_ != null)
        {
            _typeName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _typeName_ = node;
    }

    public TDcolon getDcolon()
    {
        return _dcolon_;
    }

    public void setDcolon(TDcolon node)
    {
        if(_dcolon_ != null)
        {
            _dcolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _dcolon_ = node;
    }

    public TName getName()
    {
        return _name_;
    }

    public void setName(TName node)
    {
        if(_name_ != null)
        {
            _name_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _name_ = node;
    }

    public TLPar getLPar()
    {
        return _lPar_;
    }

    public void setLPar(TLPar node)
    {
        if(_lPar_ != null)
        {
            _lPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _lPar_ = node;
    }

    public PFormalParameterList getFormalParameterList()
    {
        return _formalParameterList_;
    }

    public void setFormalParameterList(PFormalParameterList node)
    {
        if(_formalParameterList_ != null)
        {
            _formalParameterList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _formalParameterList_ = node;
    }

    public TRPar getRPar()
    {
        return _rPar_;
    }

    public void setRPar(TRPar node)
    {
        if(_rPar_ != null)
        {
            _rPar_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _rPar_ = node;
    }

    public PReturnTypeDeclaration getReturnTypeDeclaration()
    {
        return _returnTypeDeclaration_;
    }

    public void setReturnTypeDeclaration(PReturnTypeDeclaration node)
    {
        if(_returnTypeDeclaration_ != null)
        {
            _returnTypeDeclaration_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _returnTypeDeclaration_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_typeName_)
            + toString(_dcolon_)
            + toString(_name_)
            + toString(_lPar_)
            + toString(_formalParameterList_)
            + toString(_rPar_)
            + toString(_returnTypeDeclaration_);
    }

    void removeChild(Node child)
    {
        if(_typeName_ == child)
        {
            _typeName_ = null;
            return;
        }

        if(_dcolon_ == child)
        {
            _dcolon_ = null;
            return;
        }

        if(_name_ == child)
        {
            _name_ = null;
            return;
        }

        if(_lPar_ == child)
        {
            _lPar_ = null;
            return;
        }

        if(_formalParameterList_ == child)
        {
            _formalParameterList_ = null;
            return;
        }

        if(_rPar_ == child)
        {
            _rPar_ = null;
            return;
        }

        if(_returnTypeDeclaration_ == child)
        {
            _returnTypeDeclaration_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_typeName_ == oldChild)
        {
            setTypeName((PTypeName) newChild);
            return;
        }

        if(_dcolon_ == oldChild)
        {
            setDcolon((TDcolon) newChild);
            return;
        }

        if(_name_ == oldChild)
        {
            setName((TName) newChild);
            return;
        }

        if(_lPar_ == oldChild)
        {
            setLPar((TLPar) newChild);
            return;
        }

        if(_formalParameterList_ == oldChild)
        {
            setFormalParameterList((PFormalParameterList) newChild);
            return;
        }

        if(_rPar_ == oldChild)
        {
            setRPar((TRPar) newChild);
            return;
        }

        if(_returnTypeDeclaration_ == oldChild)
        {
            setReturnTypeDeclaration((PReturnTypeDeclaration) newChild);
            return;
        }

    }
}
