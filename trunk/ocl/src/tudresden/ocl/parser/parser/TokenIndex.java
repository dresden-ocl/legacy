/* This file was generated by SableCC (http://www.sable.mcgill.ca/sablecc/). */

package tudresden.ocl.parser.parser;

import tudresden.ocl.parser.node.*;
import tudresden.ocl.parser.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    public void caseTDot(TDot node)
    {
        index = 0;
    }

    public void caseTArrow(TArrow node)
    {
        index = 1;
    }

    public void caseTNot(TNot node)
    {
        index = 2;
    }

    public void caseTMult(TMult node)
    {
        index = 3;
    }

    public void caseTDiv(TDiv node)
    {
        index = 4;
    }

    public void caseTPlus(TPlus node)
    {
        index = 5;
    }

    public void caseTMinus(TMinus node)
    {
        index = 6;
    }

    public void caseTContext(TContext node)
    {
        index = 7;
    }

    public void caseTEnum(TEnum node)
    {
        index = 8;
    }

    public void caseTTPre(TTPre node)
    {
        index = 9;
    }

    public void caseTTPost(TTPost node)
    {
        index = 10;
    }

    public void caseTTInv(TTInv node)
    {
        index = 11;
    }

    public void caseTEqual(TEqual node)
    {
        index = 12;
    }

    public void caseTNEqual(TNEqual node)
    {
        index = 13;
    }

    public void caseTLt(TLt node)
    {
        index = 14;
    }

    public void caseTGt(TGt node)
    {
        index = 15;
    }

    public void caseTLteq(TLteq node)
    {
        index = 16;
    }

    public void caseTGteq(TGteq node)
    {
        index = 17;
    }

    public void caseTAnd(TAnd node)
    {
        index = 18;
    }

    public void caseTOr(TOr node)
    {
        index = 19;
    }

    public void caseTXor(TXor node)
    {
        index = 20;
    }

    public void caseTImplies(TImplies node)
    {
        index = 21;
    }

    public void caseTLPar(TLPar node)
    {
        index = 22;
    }

    public void caseTRPar(TRPar node)
    {
        index = 23;
    }

    public void caseTLBracket(TLBracket node)
    {
        index = 24;
    }

    public void caseTRBracket(TRBracket node)
    {
        index = 25;
    }

    public void caseTLBrace(TLBrace node)
    {
        index = 26;
    }

    public void caseTRBrace(TRBrace node)
    {
        index = 27;
    }

    public void caseTSemicolon(TSemicolon node)
    {
        index = 28;
    }

    public void caseTDcolon(TDcolon node)
    {
        index = 29;
    }

    public void caseTColon(TColon node)
    {
        index = 30;
    }

    public void caseTComma(TComma node)
    {
        index = 31;
    }

    public void caseTChannel(TChannel node)
    {
        index = 32;
    }

    public void caseTAt(TAt node)
    {
        index = 33;
    }

    public void caseTBar(TBar node)
    {
        index = 34;
    }

    public void caseTDdot(TDdot node)
    {
        index = 35;
    }

    public void caseTApostroph(TApostroph node)
    {
        index = 36;
    }

    public void caseTTLet(TTLet node)
    {
        index = 37;
    }

    public void caseTTIn(TTIn node)
    {
        index = 38;
    }

    public void caseTTIf(TTIf node)
    {
        index = 39;
    }

    public void caseTTThen(TTThen node)
    {
        index = 40;
    }

    public void caseTTElse(TTElse node)
    {
        index = 41;
    }

    public void caseTEndif(TEndif node)
    {
        index = 42;
    }

    public void caseTTSet(TTSet node)
    {
        index = 43;
    }

    public void caseTTBag(TTBag node)
    {
        index = 44;
    }

    public void caseTTSequence(TTSequence node)
    {
        index = 45;
    }

    public void caseTTCollection(TTCollection node)
    {
        index = 46;
    }

    public void caseTBool(TBool node)
    {
        index = 47;
    }

    public void caseTSimpleTypeName(TSimpleTypeName node)
    {
        index = 48;
    }

    public void caseTName(TName node)
    {
        index = 49;
    }

    public void caseTInt(TInt node)
    {
        index = 50;
    }

    public void caseTReal(TReal node)
    {
        index = 51;
    }

    public void caseTStringLit(TStringLit node)
    {
        index = 52;
    }

    public void caseEOF(EOF node)
    {
        index = 53;
    }
}
