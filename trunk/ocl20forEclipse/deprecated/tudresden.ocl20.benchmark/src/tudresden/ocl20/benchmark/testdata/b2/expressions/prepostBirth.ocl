package tudresden::ocl20::benchmark::testdata::b2

----------------------------------------
-- Pre and Post Conditions
-- for method birth
----------------------------------------
	
context Person::birth(aName:String, aGender:Gender)
pre freshUnlinkedPerson:
	 name.isUndefined and civstat.isUndefined and
     gender.isUndefined and alive.isUndefined and
     wife.isUndefined and husband.isUndefined
     
-- custom created constraint to test 
-- the benchmark at least working
context Person::birth(aName:String, aGender:Gender)
	pre nameNotEmpty:
	 aName <> ''
	
context Person::birth(aName:String, aGender:Gender)
  post nameAssigned:
	 name=aName -- equivalent to 'aName=self.name'

context Person::birth(aName:String, aGender:Gender)
  post civstatAssigned:
	 civstat=Gender::single

context Person::birth(aName:String, aGender:Gender)
  post genderAssigned:
	 gender=aGender

context Person::birth(aName:String, aGender:Gender)
  post isAliveAssigned:
	 alive=true -- equivalent to 'alive'

-- already implemented in java
--context Person
--  def : spouse() : Person =if gender=Gender::female then husband else wife endif


------------------------------------------------------------------------
endpackage