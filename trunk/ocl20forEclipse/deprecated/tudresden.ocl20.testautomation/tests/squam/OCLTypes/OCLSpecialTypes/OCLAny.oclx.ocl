--------------------------------------------------------------------
-- exported by the SQUAM OCLEditor v0.8.0.x (OCLLib to standard OCL)
--------------------------------------------------------------------
package uml 


-- Library: OCLAny

--	A library with examples for an OCL special type: OclAny.
--  Operations for OclAny must be called for particular values and in the examples it is show for primitive values.
--	Author: Joanna Chimiak-Opoka
--	Author: Hannes MÃ¶sl
--------------------------------------------------------
-- tests (queries with boolean result)
--------------------------------------------------------
--	Testing comparison operations for OclAny on examples of instances of the primitive types.
-- 
context Model

inv tOCLAnyComparisons_1: let v1:Boolean = true in let v2: Boolean = false in v1 = v1

context Model

inv tOCLAnyComparisons_2: let v1:Boolean = true in let v2: Boolean = false in v1 <> v2

--context Model

--inv tOCLAnyComparisons_3: let v1:Boolean = true in let v2: Boolean = false in v1 <> null

context Model

inv tOCLAnyComparisons_4: let v1:Boolean = true in let v2: Boolean = false in not v1.oclIsUndefined()

context Model

inv tOCLAnyComparisons_5: let v1:Boolean = true in let v2: Boolean = false in v1 <> 1/0

context Model

inv tOCLAnyComparisons_6: let v1:Boolean = true in let v2: Boolean = false in not v1.oclIsInvalid()

--	Testing operations to check kind and type of value, on example of the Boolean type.
-- 
context Model

inv tOCLAnyCheckType4Boolean_1: let v : Boolean = true in true.oclIsTypeOf(Boolean)

context Model

inv tOCLAnyCheckType4Boolean_2: let v : Boolean = true in true.oclIsKindOf(Boolean)

--	Testing operations to check kind/type of value and additionally conversion to another type, on example of the Integer type.
-- 
context Model

inv tOCLAnyCheckType4Integer_1: let v : Integer = 1 in v.oclIsTypeOf(Integer)

context Model

inv tOCLAnyCheckType4Integer_2: let v : Integer = 1 in v.oclIsTypeOf(Integer)

context Model

inv tOCLAnyCheckType4Integer_3: let v : Integer = 1 in v.oclIsKindOf(Real)

context Model

inv tOCLAnyCheckType4Integer_4: let v : Integer = 1 in v.oclAsType(Real) = v

endpackage