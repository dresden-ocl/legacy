<%@ jet package="tudresden.ocl20.pivot.codegen.adapter.templates.model" class="PrimitiveTypeAdapter" imports="org.eclipse.emf.codegen.ecore.genmodel.* tudresden.ocl20.pivot.codegen.adapter.PivotAdapterGeneratorUtil "%>
<%GenClass genClass = (GenClass)argument;
GenPackage genPackage = genClass.getGenPackage();
GenModel genModel = genPackage.getGenModel();
String modelName = PivotAdapterGeneratorUtil.startWithCapitalLetter(genModel.getModelName());
String adapterClass = PivotAdapterGeneratorUtil.getAdapterClassName(genModel, "PrimitiveType");
String adapteeClass = PivotAdapterGeneratorUtil.getPivotModelAttributeName(genModel, "PrimitiveType");
String adapteeName = PivotAdapterGeneratorUtil.getDSLElementName(adapteeClass);
String implementThis = PivotAdapterGeneratorUtil.getImplementThis();%>
package <%=PivotAdapterGeneratorUtil.getAdapterPackage(genModel)%>;

<%genModel.addImport("org.apache.log4j.Logger");%>

<%genModel.addImport("tudresden.ocl20.pivot.pivotmodel.Namespace");%>
<%genModel.addImport("tudresden.ocl20.pivot.pivotmodel.PrimitiveType");%>
<%genModel.addImport("tudresden.ocl20.pivot.pivotmodel.PrimitiveTypeKind");%>
<%genModel.addImport("tudresden.ocl20.pivot.pivotmodel.base.AbstractPrimitiveType");%>
<%genModel.addImport(PivotAdapterGeneratorUtil.getPackageNameFor(genClass) + adapteeClass);%>
<%genModel.markImportLocation(stringBuffer);%>

/**
 * An implementation of the Pivot Model {@link PrimitiveType} concept for <%=modelName%>.
 *
 * @generated
 */
public class <%=adapterClass%> extends AbstractPrimitiveType implements PrimitiveType {

	/**
	 * Logger for this class
	 *
	 * @generated
	 */
	private static final Logger logger = Logger.getLogger(<%=adapterClass%>.class);

	/**
	 * the adapted <%=adapteeClass%> data type
	 *
	 * @generated
	 */
	private <%=adapteeClass%> <%=adapteeName%>;
	
	/**
	 * Creates a new <code><%=adapterClass%></code> instance.
	 *
	 * @param <%=adapteeName%> the {@link <%=adapteeClass%>} that is adopted by this class
	 *
	 * @generated
	 */
	public <%=adapterClass%>(<%=adapteeClass%> <%=adapteeName%>) {
	
		if (logger.isDebugEnabled()) {
			logger.debug("<%=adapterClass%>(<%=adapteeName%>=" + <%=adapteeName%> + ") - enter"); //$NON-NLS-1$ //$NON-NLS-2$
		}
	
		// initialize
		this.<%=adapteeName%> = <%=adapteeName%>;
	
		if (logger.isDebugEnabled()) {
			logger.debug("<%=adapteeClass%>() - exit"); //$NON-NLS-1$
		}
	}

	/**
	 * @see tudresden.ocl20.pivot.pivotmodel.base.AbstractPrimitiveType#getName()
	 *
	 * @generated
	 */
	@Override
	public String getName() {
		<%=implementThis%>
		return null;
	}

	/**
	 * @see tudresden.ocl20.pivot.pivotmodel.base.AbstractPrimitiveType#getNamespace()
	 *
	 * @generated
	 */
	@Override
  	public Namespace getNamespace() {
		<%=implementThis%>
		return null;
	}

	/**
	 * This method implements a type mapping from <%=adapteeClass%> types to the predefined
	 * primitive types of the Pivot Model.
	 *
	 * @generated
	 */
	@Override
	public PrimitiveTypeKind getKind() {
		<%=implementThis%>

		// switch (<%=adapteeName%>.getClassifierID()) {

		// case ...:
 			// return PrimitiveTypeKind.INTEGER;

		// case ...:
 			// return PrimitiveTypeKind.REAL;

		// case ...:
 			// return PrimitiveTypeKind.BOOLEAN;

		// case ...:
 			// return PrimitiveTypeKind.STRING;

		// default:
			// return PrimitiveTypeKind.UNKNOWN;
 		
 		//}
 		
 		return null;
 	}

}
<%genModel.emitSortedImports();%>