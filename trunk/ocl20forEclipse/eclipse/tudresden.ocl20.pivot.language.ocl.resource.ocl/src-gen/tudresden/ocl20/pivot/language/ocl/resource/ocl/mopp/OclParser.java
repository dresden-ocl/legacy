// $ANTLR 3.4

	package tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp;


import org.antlr.runtime3_4_0.BitSet;
import org.antlr.runtime3_4_0.EarlyExitException;
import org.antlr.runtime3_4_0.NoViableAltException;
import org.antlr.runtime3_4_0.RecognitionException;
import org.antlr.runtime3_4_0.RecognizerSharedState;
import org.antlr.runtime3_4_0.Token;
import org.antlr.runtime3_4_0.TokenStream;

@SuppressWarnings({"all", "warnings", "unchecked"})
public class OclParser extends OclANTLRParserBase {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "ADDITIVE_OPERATOR", "AND_OPERATOR", "BOOLEAN_LITERAL", "COLLECTION_TYPES", "EQUALITY_OPERATOR", "IMPLIES_OPERATOR", "INTEGER_0", "INTEGER_LITERAL", "IS_MARKED_PRE", "ITERATOR_NAME", "LINEBREAKS", "ML_COMMENT", "MULT_OPERATOR", "NAVIGATION_OPERATOR", "NEQUALITY_OPERATOR", "NOT_OPERATOR", "OR_OPERATOR", "QUOTED_39_39", "RELATIONAL_OPERATOR", "SIMPLE_NAME", "SL_COMMENT", "STATIC", "WHITESPACE", "XOR_OPERATOR", "'('", "')'", "','", "'..'", "':'", "'::'", "';'", "'Tuple'", "'body'", "'context'", "'def'", "'derive'", "'else'", "'endif'", "'endpackage'", "'if'", "'in'", "'init'", "'inv'", "'invalid'", "'iterate'", "'let'", "'null'", "'package'", "'post'", "'pre'", "'then'", "'{'", "'|'", "'}'"
    };

    public static final int EOF=-1;
    public static final int T__28=28;
    public static final int T__29=29;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int T__50=50;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int ADDITIVE_OPERATOR=4;
    public static final int AND_OPERATOR=5;
    public static final int BOOLEAN_LITERAL=6;
    public static final int COLLECTION_TYPES=7;
    public static final int EQUALITY_OPERATOR=8;
    public static final int IMPLIES_OPERATOR=9;
    public static final int INTEGER_0=10;
    public static final int INTEGER_LITERAL=11;
    public static final int IS_MARKED_PRE=12;
    public static final int ITERATOR_NAME=13;
    public static final int LINEBREAKS=14;
    public static final int ML_COMMENT=15;
    public static final int MULT_OPERATOR=16;
    public static final int NAVIGATION_OPERATOR=17;
    public static final int NEQUALITY_OPERATOR=18;
    public static final int NOT_OPERATOR=19;
    public static final int OR_OPERATOR=20;
    public static final int QUOTED_39_39=21;
    public static final int RELATIONAL_OPERATOR=22;
    public static final int SIMPLE_NAME=23;
    public static final int SL_COMMENT=24;
    public static final int STATIC=25;
    public static final int WHITESPACE=26;
    public static final int XOR_OPERATOR=27;

    // delegates
    public OclANTLRParserBase[] getDelegates() {
        return new OclANTLRParserBase[] {};
    }

    // delegators


    public OclParser(TokenStream input) {
        this(input, new RecognizerSharedState());
    }
    public OclParser(TokenStream input, RecognizerSharedState state) {
        super(input, state);
        this.state.initializeRuleMemo(181 + 1);
         

    }

    public String[] getTokenNames() { return OclParser.tokenNames; }
    public String getGrammarFileName() { return "Ocl.g"; }


    	private tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolverFactory tokenResolverFactory = new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTokenResolverFactory();
    	
    	/**
    	 * the index of the last token that was handled by collectHiddenTokens()
    	 */
    	private int lastPosition;
    	
    	/**
    	 * A flag that indicates whether the parser should remember all expected elements.
    	 * This flag is set to true when using the parse for code completion. Otherwise it
    	 * is set to false.
    	 */
    	private boolean rememberExpectedElements = false;
    	
    	private Object parseToIndexTypeObject;
    	private int lastTokenIndex = 0;
    	
    	/**
    	 * A list of expected elements the were collected while parsing the input stream.
    	 * This list is only filled if <code>rememberExpectedElements</code> is set to
    	 * true.
    	 */
    	private java.util.List<tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectedTerminal> expectedElements = new java.util.ArrayList<tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectedTerminal>();
    	
    	private int mismatchedTokenRecoveryTries = 0;
    	/**
    	 * A helper list to allow a lexer to pass errors to its parser
    	 */
    	protected java.util.List<org.antlr.runtime3_4_0.RecognitionException> lexerExceptions = java.util.Collections.synchronizedList(new java.util.ArrayList<org.antlr.runtime3_4_0.RecognitionException>());
    	
    	/**
    	 * Another helper list to allow a lexer to pass positions of errors to its parser
    	 */
    	protected java.util.List<Integer> lexerExceptionsPosition = java.util.Collections.synchronizedList(new java.util.ArrayList<Integer>());
    	
    	/**
    	 * A stack for incomplete objects. This stack is used filled when the parser is
    	 * used for code completion. Whenever the parser starts to read an object it is
    	 * pushed on the stack. Once the element was parser completely it is popped from
    	 * the stack.
    	 */
    	java.util.List<org.eclipse.emf.ecore.EObject> incompleteObjects = new java.util.ArrayList<org.eclipse.emf.ecore.EObject>();
    	
    	private int stopIncludingHiddenTokens;
    	private int stopExcludingHiddenTokens;
    	private int tokenIndexOfLastCompleteElement;
    	
    	private int expectedElementsIndexOfLastCompleteElement;
    	
    	/**
    	 * The offset indicating the cursor position when the parser is used for code
    	 * completion by calling parseToExpectedElements().
    	 */
    	private int cursorOffset;
    	
    	/**
    	 * The offset of the first hidden token of the last expected element. This offset
    	 * is used to discard expected elements, which are not needed for code completion.
    	 */
    	private int lastStartIncludingHidden;
    	
    	protected void addErrorToResource(final String errorMessage, final int column, final int line, final int startIndex, final int stopIndex) {
    		postParseCommands.add(new tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclCommand<tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTextResource>() {
    			public boolean execute(tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for code completion
    					return true;
    				}
    				resource.addProblem(new tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclProblem() {
    					public tudresden.ocl20.pivot.language.ocl.resource.ocl.OclEProblemSeverity getSeverity() {
    						return tudresden.ocl20.pivot.language.ocl.resource.ocl.OclEProblemSeverity.ERROR;
    					}
    					public tudresden.ocl20.pivot.language.ocl.resource.ocl.OclEProblemType getType() {
    						return tudresden.ocl20.pivot.language.ocl.resource.ocl.OclEProblemType.SYNTAX_ERROR;
    					}
    					public String getMessage() {
    						return errorMessage;
    					}
    					public java.util.Collection<tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclQuickFix> getQuickFixes() {
    						return null;
    					}
    				}, column, line, startIndex, stopIndex);
    				return true;
    			}
    		});
    	}
    	
    	public void addExpectedElement(org.eclipse.emf.ecore.EClass eClass, int[] ids) {
    		if (!this.rememberExpectedElements) {
    			return;
    		}
    		int terminalID = ids[0];
    		int followSetID = ids[1];
    		tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclExpectedElement terminal = tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclFollowSetProvider.TERMINALS[terminalID];
    		tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContainedFeature[] containmentFeatures = new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContainedFeature[ids.length - 2];
    		for (int i = 2; i < ids.length; i++) {
    			containmentFeatures[i - 2] = tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclFollowSetProvider.LINKS[ids[i]];
    		}
    		tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclContainmentTrace containmentTrace = new tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclContainmentTrace(eClass, containmentFeatures);
    		org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    		tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectedTerminal expectedElement = new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectedTerminal(container, terminal, followSetID, containmentTrace);
    		setPosition(expectedElement, input.index());
    		int startIncludingHiddenTokens = expectedElement.getStartIncludingHiddenTokens();
    		if (lastStartIncludingHidden >= 0 && lastStartIncludingHidden < startIncludingHiddenTokens && cursorOffset > startIncludingHiddenTokens) {
    			// clear list of expected elements
    			this.expectedElements.clear();
    			this.expectedElementsIndexOfLastCompleteElement = 0;
    		}
    		lastStartIncludingHidden = startIncludingHiddenTokens;
    		this.expectedElements.add(expectedElement);
    	}
    	
    	protected void collectHiddenTokens(org.eclipse.emf.ecore.EObject element) {
    	}
    	
    	protected void copyLocalizationInfos(final org.eclipse.emf.ecore.EObject source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclCommand<tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTextResource>() {
    			public boolean execute(tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTextResource resource) {
    				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharStart(target, locationMap.getCharStart(source));
    				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
    				locationMap.setColumn(target, locationMap.getColumn(source));
    				locationMap.setLine(target, locationMap.getLine(source));
    				return true;
    			}
    		});
    	}
    	
    	protected void copyLocalizationInfos(final org.antlr.runtime3_4_0.CommonToken source, final org.eclipse.emf.ecore.EObject target) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclCommand<tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTextResource>() {
    			public boolean execute(tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTextResource resource) {
    				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				if (source == null) {
    					return true;
    				}
    				locationMap.setCharStart(target, source.getStartIndex());
    				locationMap.setCharEnd(target, source.getStopIndex());
    				locationMap.setColumn(target, source.getCharPositionInLine());
    				locationMap.setLine(target, source.getLine());
    				return true;
    			}
    		});
    	}
    	
    	/**
    	 * Sets the end character index and the last line for the given object in the
    	 * location map.
    	 */
    	protected void setLocalizationEnd(java.util.Collection<tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclCommand<tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTextResource>> postParseCommands , final org.eclipse.emf.ecore.EObject object, final int endChar, final int endLine) {
    		if (disableLocationMap) {
    			return;
    		}
    		postParseCommands.add(new tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclCommand<tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTextResource>() {
    			public boolean execute(tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTextResource resource) {
    				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for code completion
    					return true;
    				}
    				locationMap.setCharEnd(object, endChar);
    				locationMap.setLine(object, endLine);
    				return true;
    			}
    		});
    	}
    	
    	public tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTextParser createInstance(java.io.InputStream actualInputStream, String encoding) {
    		try {
    			if (encoding == null) {
    				return new OclParser(new org.antlr.runtime3_4_0.CommonTokenStream(new OclLexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream))));
    			} else {
    				return new OclParser(new org.antlr.runtime3_4_0.CommonTokenStream(new OclLexer(new org.antlr.runtime3_4_0.ANTLRInputStream(actualInputStream, encoding))));
    			}
    		} catch (java.io.IOException e) {
    			new tudresden.ocl20.pivot.language.ocl.resource.ocl.util.OclRuntimeUtil().logError("Error while creating parser.", e);
    			return null;
    		}
    	}
    	
    	/**
    	 * This default constructor is only used to call createInstance() on it.
    	 */
    	public OclParser() {
    		super(null);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject doParse() throws org.antlr.runtime3_4_0.RecognitionException {
    		this.lastPosition = 0;
    		// required because the lexer class can not be subclassed
    		((OclLexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
    		((OclLexer) getTokenStream().getTokenSource()).lexerExceptionsPosition = lexerExceptionsPosition;
    		Object typeObject = getTypeObject();
    		if (typeObject == null) {
    			return start();
    		} else if (typeObject instanceof org.eclipse.emf.ecore.EClass) {
    			org.eclipse.emf.ecore.EClass type = (org.eclipse.emf.ecore.EClass) typeObject;
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.SimpleNameCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.PackageDeclarationWithNamespaceCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.PackageDeclarationNestedNamespaceCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.PackageDeclarationWithoutNamespaceCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithoutNamespaceCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.OperationContextDeclarationCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.AttributeContextDeclarationCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.ClassifierContextDeclarationCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.InitValueCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_InitValueCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.DeriveValueCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.InvariantExpCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.DefinitionExpCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.DefinitionExpPropertyCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPropertyCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.DefinitionExpOperationCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.PreConditionDeclarationCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.PostConditionDeclarationCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.BodyDeclarationCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.OperationDefinitionInContextCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.OperationDefinitionInDefCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.ParameterCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_ParameterCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.ImplicitOperationCallCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.ImplicitPropertyCallCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_ImplicitPropertyCallCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.IteratorExpCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.IterateExpCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.IteratorExpVariableCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.TypePathNameSimpleCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.TypePathNameNestedCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.TupleTypeCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.CollectionTypeIdentifierCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithoutInitCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithoutInitListCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitListCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.CollectionRangeCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS();
    			}
    			if (type.getInstanceClass() == tudresden.ocl20.pivot.language.ocl.CollectionLiteralPartsOclExpCS.class) {
    				return parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsOclExpCS();
    			}
    		}
    		throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclUnexpectedContentTypeException(typeObject);
    	}
    	
    	public int getMismatchedTokenRecoveryTries() {
    		return mismatchedTokenRecoveryTries;
    	}
    	
    	public Object getMissingSymbol(org.antlr.runtime3_4_0.IntStream arg0, org.antlr.runtime3_4_0.RecognitionException arg1, int arg2, org.antlr.runtime3_4_0.BitSet arg3) {
    		mismatchedTokenRecoveryTries++;
    		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
    	}
    	
    	public Object getParseToIndexTypeObject() {
    		return parseToIndexTypeObject;
    	}
    	
    	protected Object getTypeObject() {
    		Object typeObject = getParseToIndexTypeObject();
    		if (typeObject != null) {
    			return typeObject;
    		}
    		java.util.Map<?,?> options = getOptions();
    		if (options != null) {
    			typeObject = options.get(tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclOptions.RESOURCE_CONTENT_TYPE);
    		}
    		return typeObject;
    	}
    	
    	/**
    	 * Implementation that calls {@link #doParse()} and handles the thrown
    	 * RecognitionExceptions.
    	 */
    	public tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclParseResult parse() {
    		terminateParsing = false;
    		postParseCommands = new java.util.ArrayList<tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclCommand<tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTextResource>>();
    		tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclParseResult parseResult = new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclParseResult();
    		try {
    			org.eclipse.emf.ecore.EObject result =  doParse();
    			if (lexerExceptions.isEmpty()) {
    				parseResult.setRoot(result);
    			}
    		} catch (org.antlr.runtime3_4_0.RecognitionException re) {
    			reportError(re);
    		} catch (java.lang.IllegalArgumentException iae) {
    			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
    				// can be caused if a null is set on EMF models where not allowed. this will just
    				// happen if other errors occurred before
    			} else {
    				iae.printStackTrace();
    			}
    		}
    		for (org.antlr.runtime3_4_0.RecognitionException re : lexerExceptions) {
    			reportLexicalError(re);
    		}
    		parseResult.getPostParseCommands().addAll(postParseCommands);
    		return parseResult;
    	}
    	
    	public java.util.List<tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectedTerminal> parseToExpectedElements(org.eclipse.emf.ecore.EClass type, tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTextResource dummyResource, int cursorOffset) {
    		this.rememberExpectedElements = true;
    		this.parseToIndexTypeObject = type;
    		this.cursorOffset = cursorOffset;
    		this.lastStartIncludingHidden = -1;
    		final org.antlr.runtime3_4_0.CommonTokenStream tokenStream = (org.antlr.runtime3_4_0.CommonTokenStream) getTokenStream();
    		tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclParseResult result = parse();
    		for (org.eclipse.emf.ecore.EObject incompleteObject : incompleteObjects) {
    			org.antlr.runtime3_4_0.Lexer lexer = (org.antlr.runtime3_4_0.Lexer) tokenStream.getTokenSource();
    			int endChar = lexer.getCharIndex();
    			int endLine = lexer.getLine();
    			setLocalizationEnd(result.getPostParseCommands(), incompleteObject, endChar, endLine);
    		}
    		if (result != null) {
    			org.eclipse.emf.ecore.EObject root = result.getRoot();
    			if (root != null) {
    				dummyResource.getContentsInternal().add(root);
    			}
    			for (tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclCommand<tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTextResource> command : result.getPostParseCommands()) {
    				command.execute(dummyResource);
    			}
    		}
    		// remove all expected elements that were added after the last complete element
    		expectedElements = expectedElements.subList(0, expectedElementsIndexOfLastCompleteElement + 1);
    		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
    		java.util.Set<tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectedTerminal> currentFollowSet = new java.util.LinkedHashSet<tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectedTerminal>();
    		java.util.List<tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectedTerminal> newFollowSet = new java.util.ArrayList<tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectedTerminal>();
    		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
    			tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectedTerminal expectedElementI = expectedElements.get(i);
    			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
    				currentFollowSet.add(expectedElementI);
    			} else {
    				break;
    			}
    		}
    		int followSetID = 256;
    		int i;
    		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
    			org.antlr.runtime3_4_0.CommonToken nextToken = (org.antlr.runtime3_4_0.CommonToken) tokenStream.get(i);
    			if (nextToken.getType() < 0) {
    				break;
    			}
    			if (nextToken.getChannel() == 99) {
    				// hidden tokens do not reduce the follow set
    			} else {
    				// now that we have found the next visible token the position for that expected
    				// terminals can be set
    				for (tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectedTerminal nextFollow : newFollowSet) {
    					lastTokenIndex = 0;
    					setPosition(nextFollow, i);
    				}
    				newFollowSet.clear();
    				// normal tokens do reduce the follow set - only elements that match the token are
    				// kept
    				for (tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectedTerminal nextFollow : currentFollowSet) {
    					if (nextFollow.getTerminal().getTokenNames().contains(getTokenNames()[nextToken.getType()])) {
    						// keep this one - it matches
    						java.util.Collection<tudresden.ocl20.pivot.language.ocl.resource.ocl.util.OclPair<tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclExpectedElement, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContainedFeature[]>> newFollowers = nextFollow.getTerminal().getFollowers();
    						for (tudresden.ocl20.pivot.language.ocl.resource.ocl.util.OclPair<tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclExpectedElement, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContainedFeature[]> newFollowerPair : newFollowers) {
    							tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclExpectedElement newFollower = newFollowerPair.getLeft();
    							org.eclipse.emf.ecore.EObject container = getLastIncompleteElement();
    							tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclContainmentTrace containmentTrace = new tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclContainmentTrace(null, newFollowerPair.getRight());
    							tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectedTerminal newFollowTerminal = new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectedTerminal(container, newFollower, followSetID, containmentTrace);
    							newFollowSet.add(newFollowTerminal);
    							expectedElements.add(newFollowTerminal);
    						}
    					}
    				}
    				currentFollowSet.clear();
    				currentFollowSet.addAll(newFollowSet);
    			}
    			followSetID++;
    		}
    		// after the last token in the stream we must set the position for the elements
    		// that were added during the last iteration of the loop
    		for (tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectedTerminal nextFollow : newFollowSet) {
    			lastTokenIndex = 0;
    			setPosition(nextFollow, i);
    		}
    		return this.expectedElements;
    	}
    	
    	public void setPosition(tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectedTerminal expectedElement, int tokenIndex) {
    		int currentIndex = Math.max(0, tokenIndex);
    		for (int index = lastTokenIndex; index < currentIndex; index++) {
    			if (index >= input.size()) {
    				break;
    			}
    			org.antlr.runtime3_4_0.CommonToken tokenAtIndex = (org.antlr.runtime3_4_0.CommonToken) input.get(index);
    			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			if (tokenAtIndex.getChannel() != 99 && !anonymousTokens.contains(tokenAtIndex)) {
    				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			}
    		}
    		lastTokenIndex = Math.max(0, currentIndex);
    		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
    	}
    	
    	public Object recoverFromMismatchedToken(org.antlr.runtime3_4_0.IntStream input, int ttype, org.antlr.runtime3_4_0.BitSet follow) throws org.antlr.runtime3_4_0.RecognitionException {
    		if (!rememberExpectedElements) {
    			return super.recoverFromMismatchedToken(input, ttype, follow);
    		} else {
    			return null;
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the parser into human readable messages.
    	 */
    	public void reportError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = e.getMessage();
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			String expectedTokenName = formatTokenName(mte.expecting);
    			String actualTokenName = formatTokenName(e.token.getType());
    			message = "Syntax error on token \"" + e.token.getText() + " (" + actualTokenName + ")\", \"" + expectedTokenName + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedTreeNodeException) {
    			org.antlr.runtime3_4_0.MismatchedTreeNodeException mtne = (org.antlr.runtime3_4_0.MismatchedTreeNodeException) e;
    			String expectedTokenName = formatTokenName(mtne.expecting);
    			message = "mismatched tree node: " + "xxx" + "; tokenName " + expectedTokenName;
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", check following tokens";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched token: " + e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched token: " +  e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" +  fpe.predicateText + "}?";
    		}
    		// the resource may be null if the parser is used for code completion
    		final String finalMessage = message;
    		if (e.token instanceof org.antlr.runtime3_4_0.CommonToken) {
    			final org.antlr.runtime3_4_0.CommonToken ct = (org.antlr.runtime3_4_0.CommonToken) e.token;
    			addErrorToResource(finalMessage, ct.getCharPositionInLine(), ct.getLine(), ct.getStartIndex(), ct.getStopIndex());
    		} else {
    			addErrorToResource(finalMessage, e.token.getCharPositionInLine(), e.token.getLine(), 1, 5);
    		}
    	}
    	
    	/**
    	 * Translates errors thrown by the lexer into human readable messages.
    	 */
    	public void reportLexicalError(final org.antlr.runtime3_4_0.RecognitionException e)  {
    		String message = "";
    		if (e instanceof org.antlr.runtime3_4_0.MismatchedTokenException) {
    			org.antlr.runtime3_4_0.MismatchedTokenException mte = (org.antlr.runtime3_4_0.MismatchedTokenException) e;
    			message = "Syntax error on token \"" + ((char) e.c) + "\", \"" + (char) mte.expecting + "\" expected";
    		} else if (e instanceof org.antlr.runtime3_4_0.NoViableAltException) {
    			message = "Syntax error on token \"" + ((char) e.c) + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime3_4_0.EarlyExitException) {
    			org.antlr.runtime3_4_0.EarlyExitException eee = (org.antlr.runtime3_4_0.EarlyExitException) e;
    			message = "required (...)+ loop (decision=" + eee.decisionNumber + ") did not match anything; on line " + e.line + ":" + e.charPositionInLine + " char=" + ((char) e.c) + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedSetException) {
    			org.antlr.runtime3_4_0.MismatchedSetException mse = (org.antlr.runtime3_4_0.MismatchedSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedNotSetException) {
    			org.antlr.runtime3_4_0.MismatchedNotSetException mse = (org.antlr.runtime3_4_0.MismatchedNotSetException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime3_4_0.MismatchedRangeException) {
    			org.antlr.runtime3_4_0.MismatchedRangeException mre = (org.antlr.runtime3_4_0.MismatchedRangeException) e;
    			message = "mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set '" + (char) mre.a + "'..'" + (char) mre.b + "'";
    		} else if (e instanceof org.antlr.runtime3_4_0.FailedPredicateException) {
    			org.antlr.runtime3_4_0.FailedPredicateException fpe = (org.antlr.runtime3_4_0.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" + fpe.predicateText + "}?";
    		}
    		addErrorToResource(message, e.charPositionInLine, e.line, lexerExceptionsPosition.get(lexerExceptions.indexOf(e)), lexerExceptionsPosition.get(lexerExceptions.indexOf(e)));
    	}
    	
    	private void startIncompleteElement(Object object) {
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.incompleteObjects.add((org.eclipse.emf.ecore.EObject) object);
    		}
    	}
    	
    	private void completedElement(Object object, boolean isContainment) {
    		if (isContainment && !this.incompleteObjects.isEmpty()) {
    			boolean exists = this.incompleteObjects.remove(object);
    			if (!exists) {
    			}
    		}
    		if (object instanceof org.eclipse.emf.ecore.EObject) {
    			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
    			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
    		}
    	}
    	
    	private org.eclipse.emf.ecore.EObject getLastIncompleteElement() {
    		if (incompleteObjects.isEmpty()) {
    			return null;
    		}
    		return incompleteObjects.get(incompleteObjects.size() - 1);
    	}
    	



    // $ANTLR start "start"
    // Ocl.g:598:1: start returns [ org.eclipse.emf.ecore.EObject element = null] : (c0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS |c1= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithoutNamespaceCS ) EOF ;
    public final org.eclipse.emf.ecore.EObject start() throws RecognitionException {
        org.eclipse.emf.ecore.EObject element =  null;

        int start_StartIndex = input.index();

        tudresden.ocl20.pivot.language.ocl.PackageDeclarationWithNamespaceCS c0 =null;

        tudresden.ocl20.pivot.language.ocl.PackageDeclarationWithoutNamespaceCS c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return element; }

            // Ocl.g:599:2: ( (c0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS |c1= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithoutNamespaceCS ) EOF )
            // Ocl.g:600:2: (c0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS |c1= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithoutNamespaceCS ) EOF
            {
            if ( state.backtracking==0 ) {
            		// follow set for start rule(s)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[0]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithoutNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithoutNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithoutNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[3]);
            		expectedElementsIndexOfLastCompleteElement = 0;
            	}

            // Ocl.g:608:2: (c0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS |c1= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithoutNamespaceCS )
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==51) ) {
                alt1=1;
            }
            else if ( (LA1_0==EOF||LA1_0==37) ) {
                alt1=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 1, 0, input);

                throw nvae;

            }
            switch (alt1) {
                case 1 :
                    // Ocl.g:609:3: c0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS_in_start82);
                    c0=parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; }

                    }
                    break;
                case 2 :
                    // Ocl.g:610:8: c1= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithoutNamespaceCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithoutNamespaceCS_in_start96);
                    c1=parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithoutNamespaceCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; }

                    }
                    break;

            }


            match(input,EOF,FOLLOW_EOF_in_start103); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		retrieveLayoutInformation(element, null, null, false);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 1, start_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "start"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS"
    // Ocl.g:618:1: parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS returns [tudresden.ocl20.pivot.language.ocl.SimpleNameCS element = null] : (a0= SIMPLE_NAME ) ;
    public final tudresden.ocl20.pivot.language.ocl.SimpleNameCS parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.SimpleNameCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return element; }

            // Ocl.g:621:2: ( (a0= SIMPLE_NAME ) )
            // Ocl.g:622:2: (a0= SIMPLE_NAME )
            {
            // Ocl.g:622:2: (a0= SIMPLE_NAME )
            // Ocl.g:623:3: a0= SIMPLE_NAME
            {
            a0=(Token)match(input,SIMPLE_NAME,FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS133); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createSimpleNameCS();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("SIMPLE_NAME");
            				tokenResolver.setOptions(getOptions());
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.SIMPLE_NAME_CS__SIMPLE_NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.SIMPLE_NAME_CS__SIMPLE_NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_0_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[4]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[5]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[6]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[7]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[8]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[9]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[10]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[11]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[12]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[13]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[14]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 2, parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS"
    // Ocl.g:670:1: parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS returns [tudresden.ocl20.pivot.language.ocl.PackageDeclarationWithNamespaceCS element = null] : a0= 'package' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS ) ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS ) ) )* a3= 'endpackage' ;
    public final tudresden.ocl20.pivot.language.ocl.PackageDeclarationWithNamespaceCS parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.PackageDeclarationWithNamespaceCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS_StartIndex = input.index();

        Token a0=null;
        Token a3=null;
        tudresden.ocl20.pivot.language.ocl.PackageDeclarationNestedNamespaceCS a1_0 =null;

        tudresden.ocl20.pivot.language.ocl.ContextDeclarationCS a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return element; }

            // Ocl.g:673:2: (a0= 'package' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS ) ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS ) ) )* a3= 'endpackage' )
            // Ocl.g:674:2: a0= 'package' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS ) ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS ) ) )* a3= 'endpackage'
            {
            a0=(Token)match(input,51,FOLLOW_51_in_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS169); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPackageDeclarationWithNamespaceCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_1_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[15]);
            	}

            // Ocl.g:688:2: (a1_0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS )
            // Ocl.g:689:3: a1_0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS_in_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS187);
            a1_0=parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPackageDeclarationWithNamespaceCS();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.PACKAGE_DECLARATION_WITH_NAMESPACE_CS__NESTED_NAMESPACE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_1_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[16]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[17]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[18]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[19]);
            	}

            // Ocl.g:717:2: ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS ) ) )*
            loop2:
            do {
                int alt2=2;
                int LA2_0 = input.LA(1);

                if ( (LA2_0==37) ) {
                    alt2=1;
                }


                switch (alt2) {
            	case 1 :
            	    // Ocl.g:718:3: ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS ) )
            	    {
            	    // Ocl.g:718:3: ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS ) )
            	    // Ocl.g:719:4: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS )
            	    {
            	    // Ocl.g:719:4: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS )
            	    // Ocl.g:720:5: a2_0= parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS
            	    {
            	    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS220);
            	    a2_0=parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPackageDeclarationWithNamespaceCS();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a2_0 != null) {
            	    						if (a2_0 != null) {
            	    							Object value = a2_0;
            	    							addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.PACKAGE_DECLARATION_WITH_NAMESPACE_CS__CONTEXT_DECLARATIONS, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_1_0_0_3_0_0_0, a2_0, true);
            	    						copyLocalizationInfos(a2_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[20]);
            	    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[21]);
            	    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[22]);
            	    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[23]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[24]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[25]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[26]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[27]);
            	}

            a3=(Token)match(input,42,FOLLOW_42_in_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS261); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPackageDeclarationWithNamespaceCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_1_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 3, parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS"
    // Ocl.g:773:1: parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS returns [tudresden.ocl20.pivot.language.ocl.PackageDeclarationNestedNamespaceCS element = null] : (a0= SIMPLE_NAME ) ( (a1= '::' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS ) ) )? ;
    public final tudresden.ocl20.pivot.language.ocl.PackageDeclarationNestedNamespaceCS parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.PackageDeclarationNestedNamespaceCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        tudresden.ocl20.pivot.language.ocl.PackageDeclarationNestedNamespaceCS a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return element; }

            // Ocl.g:776:2: ( (a0= SIMPLE_NAME ) ( (a1= '::' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS ) ) )? )
            // Ocl.g:777:2: (a0= SIMPLE_NAME ) ( (a1= '::' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS ) ) )?
            {
            // Ocl.g:777:2: (a0= SIMPLE_NAME )
            // Ocl.g:778:3: a0= SIMPLE_NAME
            {
            a0=(Token)match(input,SIMPLE_NAME,FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS294); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPackageDeclarationNestedNamespaceCS();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("SIMPLE_NAME");
            				tokenResolver.setOptions(getOptions());
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.PACKAGE_DECLARATION_NESTED_NAMESPACE_CS__NAMESPACE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				tudresden.ocl20.pivot.pivotmodel.Namespace proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createNamespace();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.PackageDeclarationNestedNamespaceCS, tudresden.ocl20.pivot.pivotmodel.Namespace>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPackageDeclarationNestedNamespaceCSNamespaceReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.PACKAGE_DECLARATION_NESTED_NAMESPACE_CS__NAMESPACE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.PACKAGE_DECLARATION_NESTED_NAMESPACE_CS__NAMESPACE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_2_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[28]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[29]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[30]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[31]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[32]);
            	}

            // Ocl.g:821:2: ( (a1= '::' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS ) ) )?
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==33) ) {
                alt3=1;
            }
            switch (alt3) {
                case 1 :
                    // Ocl.g:822:3: (a1= '::' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS ) )
                    {
                    // Ocl.g:822:3: (a1= '::' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS ) )
                    // Ocl.g:823:4: a1= '::' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS )
                    {
                    a1=(Token)match(input,33,FOLLOW_33_in_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS324); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPackageDeclarationNestedNamespaceCS();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_2_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationNestedNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[33]);
                    			}

                    // Ocl.g:837:4: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS )
                    // Ocl.g:838:5: a2_0= parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS_in_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS350);
                    a2_0=parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPackageDeclarationNestedNamespaceCS();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.PACKAGE_DECLARATION_NESTED_NAMESPACE_CS__NESTED_NAMESPACE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_2_0_0_1_0_0_1, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[34]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[35]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[36]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[37]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[38]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[39]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[40]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[41]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 4, parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithoutNamespaceCS"
    // Ocl.g:878:1: parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithoutNamespaceCS returns [tudresden.ocl20.pivot.language.ocl.PackageDeclarationWithoutNamespaceCS element = null] : ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS ) )* ;
    public final tudresden.ocl20.pivot.language.ocl.PackageDeclarationWithoutNamespaceCS parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithoutNamespaceCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.PackageDeclarationWithoutNamespaceCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithoutNamespaceCS_StartIndex = input.index();

        tudresden.ocl20.pivot.language.ocl.ContextDeclarationCS a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return element; }

            // Ocl.g:881:2: ( ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS ) )* )
            // Ocl.g:882:2: ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS ) )*
            {
            // Ocl.g:882:2: ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS ) )*
            loop4:
            do {
                int alt4=2;
                int LA4_0 = input.LA(1);

                if ( (LA4_0==37) ) {
                    alt4=1;
                }


                switch (alt4) {
            	case 1 :
            	    // Ocl.g:883:3: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS )
            	    {
            	    // Ocl.g:883:3: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS )
            	    // Ocl.g:884:4: a0_0= parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS
            	    {
            	    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithoutNamespaceCS415);
            	    a0_0=parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPackageDeclarationWithoutNamespaceCS();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a0_0 != null) {
            	    					if (a0_0 != null) {
            	    						Object value = a0_0;
            	    						addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.PACKAGE_DECLARATION_WITHOUT_NAMESPACE_CS__CONTEXT_DECLARATIONS, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_3_0_0_0, a0_0, true);
            	    					copyLocalizationInfos(a0_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop4;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithoutNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[42]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithoutNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[43]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithoutNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[44]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 5, parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithoutNamespaceCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithoutNamespaceCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS"
    // Ocl.g:914:1: parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS returns [tudresden.ocl20.pivot.language.ocl.OperationContextDeclarationCS element = null] : a0= 'context' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS ) ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS ) )+ ;
    public final tudresden.ocl20.pivot.language.ocl.OperationContextDeclarationCS parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OperationContextDeclarationCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS_StartIndex = input.index();

        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OperationDefinitionInContextCS a1_0 =null;

        tudresden.ocl20.pivot.language.ocl.PrePostOrBodyDeclarationCS a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return element; }

            // Ocl.g:917:2: (a0= 'context' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS ) ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS ) )+ )
            // Ocl.g:918:2: a0= 'context' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS ) ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS ) )+
            {
            a0=(Token)match(input,37,FOLLOW_37_in_parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS456); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationContextDeclarationCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_4_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[45]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[46]);
            	}

            // Ocl.g:933:2: (a1_0= parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS )
            // Ocl.g:934:3: a1_0= parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS474);
            a1_0=parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationContextDeclarationCS();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CONTEXT_DECLARATION_CS__OPERATION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_4_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[47]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[48]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[49]);
            	}

            // Ocl.g:961:2: ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS ) )+
            int cnt5=0;
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==36||(LA5_0 >= 52 && LA5_0 <= 53)) ) {
                    alt5=1;
                }


                switch (alt5) {
            	case 1 :
            	    // Ocl.g:962:3: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS )
            	    {
            	    // Ocl.g:962:3: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS )
            	    // Ocl.g:963:4: a2_0= parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS
            	    {
            	    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS501);
            	    a2_0=parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationContextDeclarationCS();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a2_0 != null) {
            	    					if (a2_0 != null) {
            	    						Object value = a2_0;
            	    						addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CONTEXT_DECLARATION_CS__PRE_POST_OR_BODY_DECLARATIONS, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_4_0_0_3, a2_0, true);
            	    					copyLocalizationInfos(a2_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt5 >= 1 ) break loop5;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(5, input);
                        throw eee;
                }
                cnt5++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[50]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[51]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[52]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[53]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[54]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[55]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[56]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 6, parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS"
    // Ocl.g:997:1: parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS returns [tudresden.ocl20.pivot.language.ocl.AttributeContextDeclarationCS element = null] : a0= 'context' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS ) a2= '::' (a3= SIMPLE_NAME ) ( (a4= ':' (a5_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )? (a6_0= parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS ) ( (a7_0= parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS ) )? ;
    public final tudresden.ocl20.pivot.language.ocl.AttributeContextDeclarationCS parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.AttributeContextDeclarationCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        tudresden.ocl20.pivot.language.ocl.TypePathNameCS a1_0 =null;

        tudresden.ocl20.pivot.language.ocl.TypeCS a5_0 =null;

        tudresden.ocl20.pivot.language.ocl.InitOrDeriveValueCS a6_0 =null;

        tudresden.ocl20.pivot.language.ocl.InitOrDeriveValueCS a7_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return element; }

            // Ocl.g:1000:2: (a0= 'context' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS ) a2= '::' (a3= SIMPLE_NAME ) ( (a4= ':' (a5_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )? (a6_0= parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS ) ( (a7_0= parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS ) )? )
            // Ocl.g:1001:2: a0= 'context' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS ) a2= '::' (a3= SIMPLE_NAME ) ( (a4= ':' (a5_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )? (a6_0= parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS ) ( (a7_0= parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS ) )?
            {
            a0=(Token)match(input,37,FOLLOW_37_in_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS542); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createAttributeContextDeclarationCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_5_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[57]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[58]);
            	}

            // Ocl.g:1016:2: (a1_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS )
            // Ocl.g:1017:3: a1_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS560);
            a1_0=parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createAttributeContextDeclarationCS();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ATTRIBUTE_CONTEXT_DECLARATION_CS__TYPE_NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_5_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[59]);
            	}

            a2=(Token)match(input,33,FOLLOW_33_in_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS578); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createAttributeContextDeclarationCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_5_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[60]);
            	}

            // Ocl.g:1056:2: (a3= SIMPLE_NAME )
            // Ocl.g:1057:3: a3= SIMPLE_NAME
            {
            a3=(Token)match(input,SIMPLE_NAME,FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS596); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createAttributeContextDeclarationCS();
            				startIncompleteElement(element);
            			}
            			if (a3 != null) {
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("SIMPLE_NAME");
            				tokenResolver.setOptions(getOptions());
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ATTRIBUTE_CONTEXT_DECLARATION_CS__PROPERTY), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				tudresden.ocl20.pivot.pivotmodel.Property proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createProperty();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.AttributeContextDeclarationCS, tudresden.ocl20.pivot.pivotmodel.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getAttributeContextDeclarationCSPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ATTRIBUTE_CONTEXT_DECLARATION_CS__PROPERTY), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ATTRIBUTE_CONTEXT_DECLARATION_CS__PROPERTY), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_5_0_0_3, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[61]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[62]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[63]);
            	}

            // Ocl.g:1098:2: ( (a4= ':' (a5_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )?
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==32) ) {
                alt6=1;
            }
            switch (alt6) {
                case 1 :
                    // Ocl.g:1099:3: (a4= ':' (a5_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) )
                    {
                    // Ocl.g:1099:3: (a4= ':' (a5_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) )
                    // Ocl.g:1100:4: a4= ':' (a5_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS )
                    {
                    a4=(Token)match(input,32,FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS626); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createAttributeContextDeclarationCS();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_5_0_0_4_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[64]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[65]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[66]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[67]);
                    			}

                    // Ocl.g:1117:4: (a5_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS )
                    // Ocl.g:1118:5: a5_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS652);
                    a5_0=parse_tudresden_ocl20_pivot_language_ocl_TypeCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createAttributeContextDeclarationCS();
                    						startIncompleteElement(element);
                    					}
                    					if (a5_0 != null) {
                    						if (a5_0 != null) {
                    							Object value = a5_0;
                    							element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ATTRIBUTE_CONTEXT_DECLARATION_CS__TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_5_0_0_4_0_0_1, a5_0, true);
                    						copyLocalizationInfos(a5_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[68]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[69]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[70]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[71]);
            	}

            // Ocl.g:1152:2: (a6_0= parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS )
            // Ocl.g:1153:3: a6_0= parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS_in_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS697);
            a6_0=parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createAttributeContextDeclarationCS();
            				startIncompleteElement(element);
            			}
            			if (a6_0 != null) {
            				if (a6_0 != null) {
            					Object value = a6_0;
            					addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.ATTRIBUTE_CONTEXT_DECLARATION_CS__INIT_OR_DERIVE_VALUE, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_5_0_0_6, a6_0, true);
            				copyLocalizationInfos(a6_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[72]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[73]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[74]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[75]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[76]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[77]);
            	}

            // Ocl.g:1183:2: ( (a7_0= parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS ) )?
            int alt7=2;
            int LA7_0 = input.LA(1);

            if ( (LA7_0==39||LA7_0==45) ) {
                alt7=1;
            }
            switch (alt7) {
                case 1 :
                    // Ocl.g:1184:3: (a7_0= parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS )
                    {
                    // Ocl.g:1184:3: (a7_0= parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS )
                    // Ocl.g:1185:4: a7_0= parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS_in_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS724);
                    a7_0=parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createAttributeContextDeclarationCS();
                    					startIncompleteElement(element);
                    				}
                    				if (a7_0 != null) {
                    					if (a7_0 != null) {
                    						Object value = a7_0;
                    						addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.ATTRIBUTE_CONTEXT_DECLARATION_CS__INIT_OR_DERIVE_VALUE, value);
                    						completedElement(value, true);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_5_0_0_7, a7_0, true);
                    					copyLocalizationInfos(a7_0, element);
                    				}
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[78]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[79]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[80]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[81]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 7, parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS"
    // Ocl.g:1216:1: parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS returns [tudresden.ocl20.pivot.language.ocl.ClassifierContextDeclarationCS element = null] : a0= 'context' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS ) )+ ;
    public final tudresden.ocl20.pivot.language.ocl.ClassifierContextDeclarationCS parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.ClassifierContextDeclarationCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS_StartIndex = input.index();

        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.TypeCS a1_0 =null;

        tudresden.ocl20.pivot.language.ocl.InvariantOrDefinitionCS a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return element; }

            // Ocl.g:1219:2: (a0= 'context' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS ) )+ )
            // Ocl.g:1220:2: a0= 'context' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS ) )+
            {
            a0=(Token)match(input,37,FOLLOW_37_in_parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS765); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createClassifierContextDeclarationCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_6_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[82]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[83]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[84]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[85]);
            	}

            // Ocl.g:1237:2: (a1_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS )
            // Ocl.g:1238:3: a1_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS783);
            a1_0=parse_tudresden_ocl20_pivot_language_ocl_TypeCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createClassifierContextDeclarationCS();
            				startIncompleteElement(element);
            			}
            			if (a1_0 != null) {
            				if (a1_0 != null) {
            					Object value = a1_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.CLASSIFIER_CONTEXT_DECLARATION_CS__TYPE_NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_6_0_0_1, a1_0, true);
            				copyLocalizationInfos(a1_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[86]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[87]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[88]);
            	}

            // Ocl.g:1265:2: ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS ) )+
            int cnt8=0;
            loop8:
            do {
                int alt8=2;
                int LA8_0 = input.LA(1);

                if ( (LA8_0==STATIC||LA8_0==38||LA8_0==46) ) {
                    alt8=1;
                }


                switch (alt8) {
            	case 1 :
            	    // Ocl.g:1266:3: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS )
            	    {
            	    // Ocl.g:1266:3: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS )
            	    // Ocl.g:1267:4: a2_0= parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS
            	    {
            	    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS_in_parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS810);
            	    a2_0=parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (terminateParsing) {
            	    					throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            	    				}
            	    				if (element == null) {
            	    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createClassifierContextDeclarationCS();
            	    					startIncompleteElement(element);
            	    				}
            	    				if (a2_0 != null) {
            	    					if (a2_0 != null) {
            	    						Object value = a2_0;
            	    						addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.CLASSIFIER_CONTEXT_DECLARATION_CS__INVARIANTS_AND_DEFINITIONS, value);
            	    						completedElement(value, true);
            	    					}
            	    					collectHiddenTokens(element);
            	    					retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_6_0_0_3, a2_0, true);
            	    					copyLocalizationInfos(a2_0, element);
            	    				}
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt8 >= 1 ) break loop8;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(8, input);
                        throw eee;
                }
                cnt8++;
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[89]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[90]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[91]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[92]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[93]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[94]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[95]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 8, parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_InitValueCS"
    // Ocl.g:1301:1: parse_tudresden_ocl20_pivot_language_ocl_InitValueCS returns [tudresden.ocl20.pivot.language.ocl.InitValueCS element = null] : a0= 'init' a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.InitValueCS parse_tudresden_ocl20_pivot_language_ocl_InitValueCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.InitValueCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_InitValueCS_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return element; }

            // Ocl.g:1304:2: (a0= 'init' a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) )
            // Ocl.g:1305:2: a0= 'init' a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            {
            a0=(Token)match(input,45,FOLLOW_45_in_parse_tudresden_ocl20_pivot_language_ocl_InitValueCS851); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createInitValueCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_7_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[96]);
            	}

            a1=(Token)match(input,32,FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_InitValueCS865); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createInitValueCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_7_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[97]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[98]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[99]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[100]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[101]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[102]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[103]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[104]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[105]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[106]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[107]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[108]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[109]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[110]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[111]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[112]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[113]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[114]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[115]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[116]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[117]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[118]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[119]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[120]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[121]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[122]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[123]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInitValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[124]);
            	}

            // Ocl.g:1360:2: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:1361:3: a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_InitValueCS883);
            a2_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createInitValueCS();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.INIT_VALUE_CS__OCL_EXPRESSION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_7_0_0_3, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[125]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[126]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[127]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[128]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[129]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[130]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 9, parse_tudresden_ocl20_pivot_language_ocl_InitValueCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_InitValueCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS"
    // Ocl.g:1393:1: parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS returns [tudresden.ocl20.pivot.language.ocl.DeriveValueCS element = null] : a0= 'derive' a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.DeriveValueCS parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.DeriveValueCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return element; }

            // Ocl.g:1396:2: (a0= 'derive' a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) )
            // Ocl.g:1397:2: a0= 'derive' a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            {
            a0=(Token)match(input,39,FOLLOW_39_in_parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS916); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createDeriveValueCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_8_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[131]);
            	}

            a1=(Token)match(input,32,FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS930); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createDeriveValueCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_8_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[132]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[133]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[134]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[135]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[136]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[137]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[138]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[139]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[140]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[141]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[142]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[143]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[144]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[145]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[146]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[147]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[148]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[149]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[150]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[151]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[152]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[153]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[154]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[155]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[156]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[157]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[158]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDeriveValueCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[159]);
            	}

            // Ocl.g:1452:2: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:1453:3: a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS948);
            a2_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createDeriveValueCS();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.DERIVE_VALUE_CS__OCL_EXPRESSION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_8_0_0_3, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[160]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[161]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[162]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[163]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[164]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[165]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 10, parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS"
    // Ocl.g:1485:1: parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS returns [tudresden.ocl20.pivot.language.ocl.InvariantExpCS element = null] : a0= 'inv' ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) )? a2= ':' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.InvariantExpCS parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.InvariantExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        tudresden.ocl20.pivot.language.ocl.SimpleNameCS a1_0 =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return element; }

            // Ocl.g:1488:2: (a0= 'inv' ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) )? a2= ':' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) )
            // Ocl.g:1489:2: a0= 'inv' ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) )? a2= ':' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            {
            a0=(Token)match(input,46,FOLLOW_46_in_parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS981); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createInvariantExpCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_9_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[166]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[167]);
            	}

            // Ocl.g:1504:2: ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) )?
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==SIMPLE_NAME) ) {
                alt9=1;
            }
            switch (alt9) {
                case 1 :
                    // Ocl.g:1505:3: (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS )
                    {
                    // Ocl.g:1505:3: (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS )
                    // Ocl.g:1506:4: a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS1004);
                    a1_0=parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createInvariantExpCS();
                    					startIncompleteElement(element);
                    				}
                    				if (a1_0 != null) {
                    					if (a1_0 != null) {
                    						Object value = a1_0;
                    						element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.INVARIANT_EXP_CS__NAME), value);
                    						completedElement(value, true);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_9_0_0_1, a1_0, true);
                    					copyLocalizationInfos(a1_0, element);
                    				}
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[168]);
            	}

            a2=(Token)match(input,32,FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS1030); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createInvariantExpCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_9_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[169]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[170]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[171]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[172]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[173]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[174]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[175]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[176]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[177]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[178]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[179]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[180]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[181]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[182]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[183]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[184]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[185]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[186]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[187]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[188]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[189]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[190]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[191]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[192]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[193]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[194]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[195]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getInvariantExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[196]);
            	}

            // Ocl.g:1573:2: (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:1574:3: a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS1048);
            a3_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createInvariantExpCS();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.INVARIANT_EXP_CS__OCL_EXPRESSION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_9_0_0_4, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[197]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[198]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[199]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[200]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[201]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[202]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[203]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 11, parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS"
    // Ocl.g:1607:1: parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS returns [tudresden.ocl20.pivot.language.ocl.DefinitionExpCS element = null] : ( ( (a0= STATIC ) ) )? a1= 'def' a2= ':' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.DefinitionExpCS parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.DefinitionExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        tudresden.ocl20.pivot.language.ocl.DefinitionExpPartCS a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return element; }

            // Ocl.g:1610:2: ( ( ( (a0= STATIC ) ) )? a1= 'def' a2= ':' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS ) )
            // Ocl.g:1611:2: ( ( (a0= STATIC ) ) )? a1= 'def' a2= ':' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS )
            {
            // Ocl.g:1611:2: ( ( (a0= STATIC ) ) )?
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==STATIC) ) {
                alt10=1;
            }
            switch (alt10) {
                case 1 :
                    // Ocl.g:1612:3: ( (a0= STATIC ) )
                    {
                    // Ocl.g:1612:3: ( (a0= STATIC ) )
                    // Ocl.g:1613:4: (a0= STATIC )
                    {
                    // Ocl.g:1613:4: (a0= STATIC )
                    // Ocl.g:1614:5: a0= STATIC
                    {
                    a0=(Token)match(input,STATIC,FOLLOW_STATIC_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS1096); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createDefinitionExpCS();
                    						startIncompleteElement(element);
                    					}
                    					if (a0 != null) {
                    						tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("STATIC");
                    						tokenResolver.setOptions(getOptions());
                    						tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    						tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.DEFINITION_EXP_CS__STATIC), result);
                    						Object resolvedObject = result.getResolvedToken();
                    						if (resolvedObject == null) {
                    							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    						}
                    						java.lang.Boolean resolved = (java.lang.Boolean) resolvedObject;
                    						if (resolved != null) {
                    							Object value = resolved;
                    							element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.DEFINITION_EXP_CS__STATIC), value);
                    							completedElement(value, false);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_10_0_0_0_0_0_0, resolved, true);
                    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[204]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[205]);
            	}

            a1=(Token)match(input,38,FOLLOW_38_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS1142); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createDefinitionExpCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_10_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[206]);
            	}

            a2=(Token)match(input,32,FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS1156); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createDefinitionExpCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_10_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[207]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[208]);
            	}

            // Ocl.g:1685:2: (a3_0= parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS )
            // Ocl.g:1686:3: a3_0= parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS1174);
            a3_0=parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createDefinitionExpCS();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.DEFINITION_EXP_CS__DEFINITION_EXP_PART), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_10_0_0_4, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[209]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[210]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[211]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[212]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[213]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[214]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[215]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 12, parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPropertyCS"
    // Ocl.g:1719:1: parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPropertyCS returns [tudresden.ocl20.pivot.language.ocl.DefinitionExpPropertyCS element = null] : (a0_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.DefinitionExpPropertyCS parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPropertyCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.DefinitionExpPropertyCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPropertyCS_StartIndex = input.index();

        tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitCS a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return element; }

            // Ocl.g:1722:2: ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) )
            // Ocl.g:1723:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS )
            {
            // Ocl.g:1723:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS )
            // Ocl.g:1724:3: a0_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPropertyCS1211);
            a0_0=parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createDefinitionExpPropertyCS();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.DEFINITION_EXP_PROPERTY_CS__VARIABLE_DECLARATION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_11_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[216]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[217]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[218]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[219]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[220]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[221]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[222]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 13, parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPropertyCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPropertyCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS"
    // Ocl.g:1757:1: parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS returns [tudresden.ocl20.pivot.language.ocl.DefinitionExpOperationCS element = null] : (a0_0= parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS ) (a1= EQUALITY_OPERATOR ) (a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.DefinitionExpOperationCS parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.DefinitionExpOperationCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS_StartIndex = input.index();

        Token a1=null;
        tudresden.ocl20.pivot.language.ocl.OperationDefinitionInDefCS a0_0 =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return element; }

            // Ocl.g:1760:2: ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS ) (a1= EQUALITY_OPERATOR ) (a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) )
            // Ocl.g:1761:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS ) (a1= EQUALITY_OPERATOR ) (a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            {
            // Ocl.g:1761:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS )
            // Ocl.g:1762:3: a0_0= parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS1248);
            a0_0=parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createDefinitionExpOperationCS();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.DEFINITION_EXP_OPERATION_CS__OPERATION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_12_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[223]);
            	}

            // Ocl.g:1787:2: (a1= EQUALITY_OPERATOR )
            // Ocl.g:1788:3: a1= EQUALITY_OPERATOR
            {
            a1=(Token)match(input,EQUALITY_OPERATOR,FOLLOW_EQUALITY_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS1270); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createDefinitionExpOperationCS();
            				startIncompleteElement(element);
            			}
            			if (a1 != null) {
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("EQUALITY_OPERATOR");
            				tokenResolver.setOptions(getOptions());
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.DEFINITION_EXP_OPERATION_CS__EQUAL), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.DEFINITION_EXP_OPERATION_CS__EQUAL), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_12_0_0_1, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[224]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[225]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[226]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[227]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[228]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[229]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[230]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[231]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[232]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[233]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[234]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[235]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[236]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[237]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[238]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[239]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[240]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[241]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[242]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[243]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[244]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[245]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[246]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[247]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[248]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[249]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[250]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getDefinitionExpOperationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[251]);
            	}

            // Ocl.g:1850:2: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:1851:3: a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS1295);
            a2_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createDefinitionExpOperationCS();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.DEFINITION_EXP_OPERATION_CS__OCL_EXPRESSION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_12_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[252]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[253]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[254]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[255]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[256]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[257]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[258]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 14, parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS"
    // Ocl.g:1884:1: parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS returns [tudresden.ocl20.pivot.language.ocl.PreConditionDeclarationCS element = null] : a0= 'pre' ( ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ) )? a2= ':' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.PreConditionDeclarationCS parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.PreConditionDeclarationCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        tudresden.ocl20.pivot.language.ocl.SimpleNameCS a1_0 =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return element; }

            // Ocl.g:1887:2: (a0= 'pre' ( ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ) )? a2= ':' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) )
            // Ocl.g:1888:2: a0= 'pre' ( ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ) )? a2= ':' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            {
            a0=(Token)match(input,53,FOLLOW_53_in_parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS1328); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPreConditionDeclarationCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_13_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[259]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[260]);
            	}

            // Ocl.g:1903:2: ( ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ) )?
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==SIMPLE_NAME) ) {
                alt11=1;
            }
            switch (alt11) {
                case 1 :
                    // Ocl.g:1904:3: ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) )
                    {
                    // Ocl.g:1904:3: ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) )
                    // Ocl.g:1905:4: (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS )
                    {
                    // Ocl.g:1905:4: (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS )
                    // Ocl.g:1906:5: a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS1357);
                    a1_0=parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPreConditionDeclarationCS();
                    						startIncompleteElement(element);
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.PRE_CONDITION_DECLARATION_CS__NAME), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_13_0_0_1_0_0_0, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[261]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[262]);
            	}

            a2=(Token)match(input,32,FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS1398); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPreConditionDeclarationCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_13_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[263]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[264]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[265]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[266]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[267]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[268]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[269]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[270]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[271]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[272]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[273]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[274]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[275]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[276]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[277]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[278]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[279]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[280]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[281]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[282]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[283]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[284]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[285]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[286]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[287]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[288]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[289]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPreConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[290]);
            	}

            // Ocl.g:1979:2: (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:1980:3: a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS1416);
            a3_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPreConditionDeclarationCS();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.PRE_CONDITION_DECLARATION_CS__OCL_EXPRESSION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_13_0_0_4, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[291]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[292]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[293]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[294]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[295]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[296]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[297]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 15, parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS"
    // Ocl.g:2013:1: parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS returns [tudresden.ocl20.pivot.language.ocl.PostConditionDeclarationCS element = null] : a0= 'post' ( ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ) )? a2= ':' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.PostConditionDeclarationCS parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.PostConditionDeclarationCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        tudresden.ocl20.pivot.language.ocl.SimpleNameCS a1_0 =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return element; }

            // Ocl.g:2016:2: (a0= 'post' ( ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ) )? a2= ':' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) )
            // Ocl.g:2017:2: a0= 'post' ( ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ) )? a2= ':' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            {
            a0=(Token)match(input,52,FOLLOW_52_in_parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS1449); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPostConditionDeclarationCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_14_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[298]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[299]);
            	}

            // Ocl.g:2032:2: ( ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ) )?
            int alt12=2;
            int LA12_0 = input.LA(1);

            if ( (LA12_0==SIMPLE_NAME) ) {
                alt12=1;
            }
            switch (alt12) {
                case 1 :
                    // Ocl.g:2033:3: ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) )
                    {
                    // Ocl.g:2033:3: ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) )
                    // Ocl.g:2034:4: (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS )
                    {
                    // Ocl.g:2034:4: (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS )
                    // Ocl.g:2035:5: a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS1478);
                    a1_0=parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPostConditionDeclarationCS();
                    						startIncompleteElement(element);
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.POST_CONDITION_DECLARATION_CS__NAME), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_14_0_0_1_0_0_0, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[300]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[301]);
            	}

            a2=(Token)match(input,32,FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS1519); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPostConditionDeclarationCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_14_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[302]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[303]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[304]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[305]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[306]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[307]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[308]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[309]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[310]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[311]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[312]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[313]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[314]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[315]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[316]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[317]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[318]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[319]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[320]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[321]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[322]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[323]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[324]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[325]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[326]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[327]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[328]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPostConditionDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[329]);
            	}

            // Ocl.g:2108:2: (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:2109:3: a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS1537);
            a3_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPostConditionDeclarationCS();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.POST_CONDITION_DECLARATION_CS__OCL_EXPRESSION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_14_0_0_4, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[330]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[331]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[332]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[333]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[334]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[335]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[336]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 16, parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS"
    // Ocl.g:2142:1: parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS returns [tudresden.ocl20.pivot.language.ocl.BodyDeclarationCS element = null] : a0= 'body' ( ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ) )? a2= ':' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.BodyDeclarationCS parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.BodyDeclarationCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        tudresden.ocl20.pivot.language.ocl.SimpleNameCS a1_0 =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return element; }

            // Ocl.g:2145:2: (a0= 'body' ( ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ) )? a2= ':' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) )
            // Ocl.g:2146:2: a0= 'body' ( ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ) )? a2= ':' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            {
            a0=(Token)match(input,36,FOLLOW_36_in_parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS1570); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createBodyDeclarationCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_15_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[337]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[338]);
            	}

            // Ocl.g:2161:2: ( ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ) )?
            int alt13=2;
            int LA13_0 = input.LA(1);

            if ( (LA13_0==SIMPLE_NAME) ) {
                alt13=1;
            }
            switch (alt13) {
                case 1 :
                    // Ocl.g:2162:3: ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) )
                    {
                    // Ocl.g:2162:3: ( (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) )
                    // Ocl.g:2163:4: (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS )
                    {
                    // Ocl.g:2163:4: (a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS )
                    // Ocl.g:2164:5: a1_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS1599);
                    a1_0=parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createBodyDeclarationCS();
                    						startIncompleteElement(element);
                    					}
                    					if (a1_0 != null) {
                    						if (a1_0 != null) {
                    							Object value = a1_0;
                    							element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.BODY_DECLARATION_CS__NAME), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_15_0_0_1_0_0_0, a1_0, true);
                    						copyLocalizationInfos(a1_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[339]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[340]);
            	}

            a2=(Token)match(input,32,FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS1640); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createBodyDeclarationCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_15_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[341]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[342]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[343]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[344]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[345]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[346]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[347]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[348]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[349]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[350]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[351]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[352]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[353]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[354]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[355]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[356]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[357]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[358]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[359]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[360]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[361]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[362]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[363]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[364]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[365]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[366]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[367]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBodyDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[368]);
            	}

            // Ocl.g:2237:2: (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:2238:3: a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS1658);
            a3_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createBodyDeclarationCS();
            				startIncompleteElement(element);
            			}
            			if (a3_0 != null) {
            				if (a3_0 != null) {
            					Object value = a3_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.BODY_DECLARATION_CS__OCL_EXPRESSION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_15_0_0_4, a3_0, true);
            				copyLocalizationInfos(a3_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[369]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[370]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[371]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[372]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[373]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[374]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[375]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 17, parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS"
    // Ocl.g:2271:1: parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS returns [tudresden.ocl20.pivot.language.ocl.OperationDefinitionInContextCS element = null] : (a0_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS ) a1= '::' (a2= SIMPLE_NAME ) a3= '(' ( ( (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ( (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ) )* ) )? a7= ')' ( (a8= ':' (a9_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )? ;
    public final tudresden.ocl20.pivot.language.ocl.OperationDefinitionInContextCS parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OperationDefinitionInContextCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        Token a7=null;
        Token a8=null;
        tudresden.ocl20.pivot.language.ocl.TypePathNameCS a0_0 =null;

        tudresden.ocl20.pivot.language.ocl.ParameterCS a4_0 =null;

        tudresden.ocl20.pivot.language.ocl.ParameterCS a6_0 =null;

        tudresden.ocl20.pivot.language.ocl.TypeCS a9_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return element; }

            // Ocl.g:2274:2: ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS ) a1= '::' (a2= SIMPLE_NAME ) a3= '(' ( ( (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ( (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ) )* ) )? a7= ')' ( (a8= ':' (a9_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )? )
            // Ocl.g:2275:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS ) a1= '::' (a2= SIMPLE_NAME ) a3= '(' ( ( (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ( (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ) )* ) )? a7= ')' ( (a8= ':' (a9_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )?
            {
            // Ocl.g:2275:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS )
            // Ocl.g:2276:3: a0_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1695);
            a0_0=parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInContextCS();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_DEFINITION_IN_CONTEXT_CS__TYPE_NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_16_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[376]);
            	}

            a1=(Token)match(input,33,FOLLOW_33_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1713); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInContextCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_16_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[377]);
            	}

            // Ocl.g:2315:2: (a2= SIMPLE_NAME )
            // Ocl.g:2316:3: a2= SIMPLE_NAME
            {
            a2=(Token)match(input,SIMPLE_NAME,FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1731); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInContextCS();
            				startIncompleteElement(element);
            			}
            			if (a2 != null) {
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("SIMPLE_NAME");
            				tokenResolver.setOptions(getOptions());
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_DEFINITION_IN_CONTEXT_CS__OPERATION), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationDefinitionCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationDefinitionCSOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_DEFINITION_IN_CONTEXT_CS__OPERATION), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_DEFINITION_IN_CONTEXT_CS__OPERATION), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_16_0_0_4, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[378]);
            	}

            a3=(Token)match(input,28,FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1752); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInContextCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_16_0_0_6, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationDefinitionInContextCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[379]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[380]);
            	}

            // Ocl.g:2370:2: ( ( (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ( (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ) )* ) )?
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==SIMPLE_NAME) ) {
                alt15=1;
            }
            switch (alt15) {
                case 1 :
                    // Ocl.g:2371:3: ( (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ( (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ) )* )
                    {
                    // Ocl.g:2371:3: ( (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ( (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ) )* )
                    // Ocl.g:2372:4: (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ( (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ) )*
                    {
                    // Ocl.g:2372:4: (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS )
                    // Ocl.g:2373:5: a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ParameterCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1781);
                    a4_0=parse_tudresden_ocl20_pivot_language_ocl_ParameterCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInContextCS();
                    						startIncompleteElement(element);
                    					}
                    					if (a4_0 != null) {
                    						if (a4_0 != null) {
                    							Object value = a4_0;
                    							addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_DEFINITION_IN_CONTEXT_CS__PARAMETERS, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_16_0_0_8_0_0_0, a4_0, true);
                    						copyLocalizationInfos(a4_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[381]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[382]);
                    			}

                    // Ocl.g:2399:4: ( (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ) )*
                    loop14:
                    do {
                        int alt14=2;
                        int LA14_0 = input.LA(1);

                        if ( (LA14_0==30) ) {
                            alt14=1;
                        }


                        switch (alt14) {
                    	case 1 :
                    	    // Ocl.g:2400:5: (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) )
                    	    {
                    	    // Ocl.g:2400:5: (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) )
                    	    // Ocl.g:2401:6: a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS )
                    	    {
                    	    a5=(Token)match(input,30,FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1822); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInContextCS();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_16_0_0_8_0_0_1_0_0_1, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationDefinitionInContextCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[383]);
                    	    					}

                    	    // Ocl.g:2415:6: (a6_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS )
                    	    // Ocl.g:2416:7: a6_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS
                    	    {
                    	    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ParameterCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1856);
                    	    a6_0=parse_tudresden_ocl20_pivot_language_ocl_ParameterCS();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInContextCS();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a6_0 != null) {
                    	    								if (a6_0 != null) {
                    	    									Object value = a6_0;
                    	    									addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_DEFINITION_IN_CONTEXT_CS__PARAMETERS, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_16_0_0_8_0_0_1_0_0_2, a6_0, true);
                    	    								copyLocalizationInfos(a6_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[384]);
                    	    						addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[385]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop14;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[386]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[387]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[388]);
            	}

            a7=(Token)match(input,29,FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1930); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInContextCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_16_0_0_10, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[389]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[390]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[391]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[392]);
            	}

            // Ocl.g:2474:2: ( (a8= ':' (a9_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )?
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==32) ) {
                alt16=1;
            }
            switch (alt16) {
                case 1 :
                    // Ocl.g:2475:3: (a8= ':' (a9_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) )
                    {
                    // Ocl.g:2475:3: (a8= ':' (a9_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) )
                    // Ocl.g:2476:4: a8= ':' (a9_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS )
                    {
                    a8=(Token)match(input,32,FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1953); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInContextCS();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_16_0_0_11_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationDefinitionInContextCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[393]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationDefinitionInContextCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[394]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationDefinitionInContextCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[395]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationDefinitionInContextCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[396]);
                    			}

                    // Ocl.g:2493:4: (a9_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS )
                    // Ocl.g:2494:5: a9_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1979);
                    a9_0=parse_tudresden_ocl20_pivot_language_ocl_TypeCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInContextCS();
                    						startIncompleteElement(element);
                    					}
                    					if (a9_0 != null) {
                    						if (a9_0 != null) {
                    							Object value = a9_0;
                    							element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_DEFINITION_IN_CONTEXT_CS__RETURN_TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_16_0_0_11_0_0_1, a9_0, true);
                    						copyLocalizationInfos(a9_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[397]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[398]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[399]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[400]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[401]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[402]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 18, parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS"
    // Ocl.g:2532:1: parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS returns [tudresden.ocl20.pivot.language.ocl.OperationDefinitionInDefCS element = null] : (a0= SIMPLE_NAME ) a1= '(' ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ) )* ) )? a5= ')' ( (a6= ':' (a7_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )? ;
    public final tudresden.ocl20.pivot.language.ocl.OperationDefinitionInDefCS parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OperationDefinitionInDefCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        Token a6=null;
        tudresden.ocl20.pivot.language.ocl.ParameterCS a2_0 =null;

        tudresden.ocl20.pivot.language.ocl.ParameterCS a4_0 =null;

        tudresden.ocl20.pivot.language.ocl.TypeCS a7_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return element; }

            // Ocl.g:2535:2: ( (a0= SIMPLE_NAME ) a1= '(' ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ) )* ) )? a5= ')' ( (a6= ':' (a7_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )? )
            // Ocl.g:2536:2: (a0= SIMPLE_NAME ) a1= '(' ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ) )* ) )? a5= ')' ( (a6= ':' (a7_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )?
            {
            // Ocl.g:2536:2: (a0= SIMPLE_NAME )
            // Ocl.g:2537:3: a0= SIMPLE_NAME
            {
            a0=(Token)match(input,SIMPLE_NAME,FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS2039); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInDefCS();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("SIMPLE_NAME");
            				tokenResolver.setOptions(getOptions());
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_DEFINITION_IN_DEF_CS__OPERATION), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationDefinitionCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationDefinitionCSOperationReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_DEFINITION_IN_DEF_CS__OPERATION), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_DEFINITION_IN_DEF_CS__OPERATION), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_17_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[403]);
            	}

            a1=(Token)match(input,28,FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS2060); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInDefCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_17_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationDefinitionInDefCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[404]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[405]);
            	}

            // Ocl.g:2591:2: ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ) )* ) )?
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==SIMPLE_NAME) ) {
                alt18=1;
            }
            switch (alt18) {
                case 1 :
                    // Ocl.g:2592:3: ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ) )* )
                    {
                    // Ocl.g:2592:3: ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ) )* )
                    // Ocl.g:2593:4: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ) )*
                    {
                    // Ocl.g:2593:4: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS )
                    // Ocl.g:2594:5: a2_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ParameterCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS2089);
                    a2_0=parse_tudresden_ocl20_pivot_language_ocl_ParameterCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInDefCS();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_DEFINITION_IN_DEF_CS__PARAMETERS, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_17_0_0_2_0_0_0, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[406]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[407]);
                    			}

                    // Ocl.g:2620:4: ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) ) )*
                    loop17:
                    do {
                        int alt17=2;
                        int LA17_0 = input.LA(1);

                        if ( (LA17_0==30) ) {
                            alt17=1;
                        }


                        switch (alt17) {
                    	case 1 :
                    	    // Ocl.g:2621:5: (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) )
                    	    {
                    	    // Ocl.g:2621:5: (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS ) )
                    	    // Ocl.g:2622:6: a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS )
                    	    {
                    	    a3=(Token)match(input,30,FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS2130); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInDefCS();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_17_0_0_2_0_0_1_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationDefinitionInDefCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[408]);
                    	    					}

                    	    // Ocl.g:2636:6: (a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS )
                    	    // Ocl.g:2637:7: a4_0= parse_tudresden_ocl20_pivot_language_ocl_ParameterCS
                    	    {
                    	    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ParameterCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS2164);
                    	    a4_0=parse_tudresden_ocl20_pivot_language_ocl_ParameterCS();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInDefCS();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a4_0 != null) {
                    	    								if (a4_0 != null) {
                    	    									Object value = a4_0;
                    	    									addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_DEFINITION_IN_DEF_CS__PARAMETERS, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_17_0_0_2_0_0_1_0_0_1, a4_0, true);
                    	    								copyLocalizationInfos(a4_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[409]);
                    	    						addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[410]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop17;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[411]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[412]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[413]);
            	}

            a5=(Token)match(input,29,FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS2238); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInDefCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_17_0_0_3, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[414]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[415]);
            	}

            // Ocl.g:2693:2: ( (a6= ':' (a7_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )?
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==32) ) {
                alt19=1;
            }
            switch (alt19) {
                case 1 :
                    // Ocl.g:2694:3: (a6= ':' (a7_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) )
                    {
                    // Ocl.g:2694:3: (a6= ':' (a7_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) )
                    // Ocl.g:2695:4: a6= ':' (a7_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS )
                    {
                    a6=(Token)match(input,32,FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS2261); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInDefCS();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_17_0_0_4_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationDefinitionInDefCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[416]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationDefinitionInDefCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[417]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationDefinitionInDefCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[418]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationDefinitionInDefCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[419]);
                    			}

                    // Ocl.g:2712:4: (a7_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS )
                    // Ocl.g:2713:5: a7_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS2287);
                    a7_0=parse_tudresden_ocl20_pivot_language_ocl_TypeCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationDefinitionInDefCS();
                    						startIncompleteElement(element);
                    					}
                    					if (a7_0 != null) {
                    						if (a7_0 != null) {
                    							Object value = a7_0;
                    							element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_DEFINITION_IN_DEF_CS__RETURN_TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_17_0_0_4_0_0_1, a7_0, true);
                    						copyLocalizationInfos(a7_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[420]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[421]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 19, parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_ParameterCS"
    // Ocl.g:2747:1: parse_tudresden_ocl20_pivot_language_ocl_ParameterCS returns [tudresden.ocl20.pivot.language.ocl.ParameterCS element = null] : (a0= SIMPLE_NAME ) a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.ParameterCS parse_tudresden_ocl20_pivot_language_ocl_ParameterCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.ParameterCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_ParameterCS_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        tudresden.ocl20.pivot.language.ocl.TypeCS a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return element; }

            // Ocl.g:2750:2: ( (a0= SIMPLE_NAME ) a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) )
            // Ocl.g:2751:2: (a0= SIMPLE_NAME ) a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS )
            {
            // Ocl.g:2751:2: (a0= SIMPLE_NAME )
            // Ocl.g:2752:3: a0= SIMPLE_NAME
            {
            a0=(Token)match(input,SIMPLE_NAME,FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_ParameterCS2347); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createParameterCS();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("SIMPLE_NAME");
            				tokenResolver.setOptions(getOptions());
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.PARAMETER_CS__PARAMETER), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				tudresden.ocl20.pivot.pivotmodel.Parameter proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createParameter();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.ParameterCS, tudresden.ocl20.pivot.pivotmodel.Parameter>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getParameterCSParameterReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.PARAMETER_CS__PARAMETER), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.PARAMETER_CS__PARAMETER), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_18_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[422]);
            	}

            a1=(Token)match(input,32,FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_ParameterCS2368); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createParameterCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_18_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getParameterCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[423]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getParameterCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[424]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getParameterCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[425]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getParameterCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[426]);
            	}

            // Ocl.g:2808:2: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS )
            // Ocl.g:2809:3: a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_ParameterCS2386);
            a2_0=parse_tudresden_ocl20_pivot_language_ocl_TypeCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createParameterCS();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.PARAMETER_CS__PARAMETER_TYPE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_18_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[427]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[428]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[429]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[430]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 20, parse_tudresden_ocl20_pivot_language_ocl_ParameterCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_ParameterCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS"
    // Ocl.g:2839:1: parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS returns [tudresden.ocl20.pivot.language.ocl.ImplicitOperationCallCS element = null] : ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) | (a2= NOT_OPERATOR ) | (a3= AND_OPERATOR ) | (a4= OR_OPERATOR ) | (a5= XOR_OPERATOR ) | (a6= IMPLIES_OPERATOR ) | (a7= SIMPLE_NAME ) ) a8= '(' ( ( (a9_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a10= ',' (a11_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* ) )? a12= ')' ;
    public final tudresden.ocl20.pivot.language.ocl.ImplicitOperationCallCS parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.ImplicitOperationCallCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        Token a12=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a9_0 =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a11_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return element; }

            // Ocl.g:2842:2: ( ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) | (a2= NOT_OPERATOR ) | (a3= AND_OPERATOR ) | (a4= OR_OPERATOR ) | (a5= XOR_OPERATOR ) | (a6= IMPLIES_OPERATOR ) | (a7= SIMPLE_NAME ) ) a8= '(' ( ( (a9_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a10= ',' (a11_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* ) )? a12= ')' )
            // Ocl.g:2843:2: ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) | (a2= NOT_OPERATOR ) | (a3= AND_OPERATOR ) | (a4= OR_OPERATOR ) | (a5= XOR_OPERATOR ) | (a6= IMPLIES_OPERATOR ) | (a7= SIMPLE_NAME ) ) a8= '(' ( ( (a9_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a10= ',' (a11_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* ) )? a12= ')'
            {
            // Ocl.g:2843:2: ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) | (a2= NOT_OPERATOR ) | (a3= AND_OPERATOR ) | (a4= OR_OPERATOR ) | (a5= XOR_OPERATOR ) | (a6= IMPLIES_OPERATOR ) | (a7= SIMPLE_NAME ) )
            int alt20=8;
            switch ( input.LA(1) ) {
            case EQUALITY_OPERATOR:
                {
                alt20=1;
                }
                break;
            case NEQUALITY_OPERATOR:
                {
                alt20=2;
                }
                break;
            case NOT_OPERATOR:
                {
                alt20=3;
                }
                break;
            case AND_OPERATOR:
                {
                alt20=4;
                }
                break;
            case OR_OPERATOR:
                {
                alt20=5;
                }
                break;
            case XOR_OPERATOR:
                {
                alt20=6;
                }
                break;
            case IMPLIES_OPERATOR:
                {
                alt20=7;
                }
                break;
            case SIMPLE_NAME:
                {
                alt20=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;

            }

            switch (alt20) {
                case 1 :
                    // Ocl.g:2844:3: (a0= EQUALITY_OPERATOR )
                    {
                    // Ocl.g:2844:3: (a0= EQUALITY_OPERATOR )
                    // Ocl.g:2845:4: a0= EQUALITY_OPERATOR
                    {
                    a0=(Token)match(input,EQUALITY_OPERATOR,FOLLOW_EQUALITY_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2428); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createImplicitOperationCallCS();
                    					startIncompleteElement(element);
                    				}
                    				if (a0 != null) {
                    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("EQUALITY_OPERATOR");
                    					tokenResolver.setOptions(getOptions());
                    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    					}
                    					String resolved = (String) resolvedObject;
                    					tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
                    					collectHiddenTokens(element);
                    					registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationCallBaseExpCSOperationNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), resolved, proxy);
                    					if (proxy != null) {
                    						Object value = proxy;
                    						element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_30_0_0_0_0_0_0, proxy, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[431]);
                    		}

                    }
                    break;
                case 2 :
                    // Ocl.g:2885:6: (a1= NEQUALITY_OPERATOR )
                    {
                    // Ocl.g:2885:6: (a1= NEQUALITY_OPERATOR )
                    // Ocl.g:2886:4: a1= NEQUALITY_OPERATOR
                    {
                    a1=(Token)match(input,NEQUALITY_OPERATOR,FOLLOW_NEQUALITY_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2466); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createImplicitOperationCallCS();
                    					startIncompleteElement(element);
                    				}
                    				if (a1 != null) {
                    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NEQUALITY_OPERATOR");
                    					tokenResolver.setOptions(getOptions());
                    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
                    					}
                    					String resolved = (String) resolvedObject;
                    					tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
                    					collectHiddenTokens(element);
                    					registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationCallBaseExpCSOperationNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), resolved, proxy);
                    					if (proxy != null) {
                    						Object value = proxy;
                    						element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_30_0_0_0_0_1_0, proxy, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, proxy);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[432]);
                    		}

                    }
                    break;
                case 3 :
                    // Ocl.g:2926:6: (a2= NOT_OPERATOR )
                    {
                    // Ocl.g:2926:6: (a2= NOT_OPERATOR )
                    // Ocl.g:2927:4: a2= NOT_OPERATOR
                    {
                    a2=(Token)match(input,NOT_OPERATOR,FOLLOW_NOT_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2504); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createImplicitOperationCallCS();
                    					startIncompleteElement(element);
                    				}
                    				if (a2 != null) {
                    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NOT_OPERATOR");
                    					tokenResolver.setOptions(getOptions());
                    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
                    					}
                    					String resolved = (String) resolvedObject;
                    					tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
                    					collectHiddenTokens(element);
                    					registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationCallBaseExpCSOperationNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), resolved, proxy);
                    					if (proxy != null) {
                    						Object value = proxy;
                    						element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_30_0_0_0_0_2_0, proxy, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[433]);
                    		}

                    }
                    break;
                case 4 :
                    // Ocl.g:2967:6: (a3= AND_OPERATOR )
                    {
                    // Ocl.g:2967:6: (a3= AND_OPERATOR )
                    // Ocl.g:2968:4: a3= AND_OPERATOR
                    {
                    a3=(Token)match(input,AND_OPERATOR,FOLLOW_AND_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2542); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createImplicitOperationCallCS();
                    					startIncompleteElement(element);
                    				}
                    				if (a3 != null) {
                    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("AND_OPERATOR");
                    					tokenResolver.setOptions(getOptions());
                    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
                    					}
                    					String resolved = (String) resolvedObject;
                    					tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
                    					collectHiddenTokens(element);
                    					registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationCallBaseExpCSOperationNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), resolved, proxy);
                    					if (proxy != null) {
                    						Object value = proxy;
                    						element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_30_0_0_0_0_3_0, proxy, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, proxy);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[434]);
                    		}

                    }
                    break;
                case 5 :
                    // Ocl.g:3008:6: (a4= OR_OPERATOR )
                    {
                    // Ocl.g:3008:6: (a4= OR_OPERATOR )
                    // Ocl.g:3009:4: a4= OR_OPERATOR
                    {
                    a4=(Token)match(input,OR_OPERATOR,FOLLOW_OR_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2580); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createImplicitOperationCallCS();
                    					startIncompleteElement(element);
                    				}
                    				if (a4 != null) {
                    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("OR_OPERATOR");
                    					tokenResolver.setOptions(getOptions());
                    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a4).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStopIndex());
                    					}
                    					String resolved = (String) resolvedObject;
                    					tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
                    					collectHiddenTokens(element);
                    					registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationCallBaseExpCSOperationNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), resolved, proxy);
                    					if (proxy != null) {
                    						Object value = proxy;
                    						element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_30_0_0_0_0_4_0, proxy, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a4, element);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a4, proxy);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[435]);
                    		}

                    }
                    break;
                case 6 :
                    // Ocl.g:3049:6: (a5= XOR_OPERATOR )
                    {
                    // Ocl.g:3049:6: (a5= XOR_OPERATOR )
                    // Ocl.g:3050:4: a5= XOR_OPERATOR
                    {
                    a5=(Token)match(input,XOR_OPERATOR,FOLLOW_XOR_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2618); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createImplicitOperationCallCS();
                    					startIncompleteElement(element);
                    				}
                    				if (a5 != null) {
                    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("XOR_OPERATOR");
                    					tokenResolver.setOptions(getOptions());
                    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a5).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStopIndex());
                    					}
                    					String resolved = (String) resolvedObject;
                    					tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
                    					collectHiddenTokens(element);
                    					registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationCallBaseExpCSOperationNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), resolved, proxy);
                    					if (proxy != null) {
                    						Object value = proxy;
                    						element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_30_0_0_0_0_5_0, proxy, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a5, element);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a5, proxy);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[436]);
                    		}

                    }
                    break;
                case 7 :
                    // Ocl.g:3090:6: (a6= IMPLIES_OPERATOR )
                    {
                    // Ocl.g:3090:6: (a6= IMPLIES_OPERATOR )
                    // Ocl.g:3091:4: a6= IMPLIES_OPERATOR
                    {
                    a6=(Token)match(input,IMPLIES_OPERATOR,FOLLOW_IMPLIES_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2656); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createImplicitOperationCallCS();
                    					startIncompleteElement(element);
                    				}
                    				if (a6 != null) {
                    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IMPLIES_OPERATOR");
                    					tokenResolver.setOptions(getOptions());
                    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a6).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStopIndex());
                    					}
                    					String resolved = (String) resolvedObject;
                    					tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
                    					collectHiddenTokens(element);
                    					registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationCallBaseExpCSOperationNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), resolved, proxy);
                    					if (proxy != null) {
                    						Object value = proxy;
                    						element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_30_0_0_0_0_6_0, proxy, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, element);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, proxy);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[437]);
                    		}

                    }
                    break;
                case 8 :
                    // Ocl.g:3131:6: (a7= SIMPLE_NAME )
                    {
                    // Ocl.g:3131:6: (a7= SIMPLE_NAME )
                    // Ocl.g:3132:4: a7= SIMPLE_NAME
                    {
                    a7=(Token)match(input,SIMPLE_NAME,FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2694); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createImplicitOperationCallCS();
                    					startIncompleteElement(element);
                    				}
                    				if (a7 != null) {
                    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("SIMPLE_NAME");
                    					tokenResolver.setOptions(getOptions());
                    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    					tokenResolver.resolve(a7.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), result);
                    					Object resolvedObject = result.getResolvedToken();
                    					if (resolvedObject == null) {
                    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a7).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a7).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a7).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a7).getStopIndex());
                    					}
                    					String resolved = (String) resolvedObject;
                    					tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
                    					collectHiddenTokens(element);
                    					registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationCallBaseExpCSOperationNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), resolved, proxy);
                    					if (proxy != null) {
                    						Object value = proxy;
                    						element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__OPERATION_NAME), value);
                    						completedElement(value, false);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_30_0_0_0_0_7_0, proxy, true);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a7, element);
                    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a7, proxy);
                    				}
                    			}

                    }


                    if ( state.backtracking==0 ) {
                    			// expected elements (follow set)
                    			addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[438]);
                    		}

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[439]);
            	}

            a8=(Token)match(input,28,FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2728); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createImplicitOperationCallCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_30_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a8, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[440]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[441]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[442]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[443]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[444]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[445]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[446]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[447]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[448]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[449]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[450]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[451]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[452]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[453]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[454]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[455]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[456]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[457]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[458]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[459]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[460]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[461]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[462]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[463]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[464]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[465]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[466]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[467]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[468]);
            	}

            // Ocl.g:3219:2: ( ( (a9_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a10= ',' (a11_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* ) )?
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( ((LA22_0 >= ADDITIVE_OPERATOR && LA22_0 <= IMPLIES_OPERATOR)||LA22_0==INTEGER_LITERAL||(LA22_0 >= NEQUALITY_OPERATOR && LA22_0 <= QUOTED_39_39)||LA22_0==SIMPLE_NAME||(LA22_0 >= XOR_OPERATOR && LA22_0 <= 28)||LA22_0==35||LA22_0==43||LA22_0==47||(LA22_0 >= 49 && LA22_0 <= 50)) ) {
                alt22=1;
            }
            switch (alt22) {
                case 1 :
                    // Ocl.g:3220:3: ( (a9_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a10= ',' (a11_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* )
                    {
                    // Ocl.g:3220:3: ( (a9_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a10= ',' (a11_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* )
                    // Ocl.g:3221:4: (a9_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a10= ',' (a11_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )*
                    {
                    // Ocl.g:3221:4: (a9_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
                    // Ocl.g:3222:5: a9_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2757);
                    a9_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createImplicitOperationCallCS();
                    						startIncompleteElement(element);
                    					}
                    					if (a9_0 != null) {
                    						if (a9_0 != null) {
                    							Object value = a9_0;
                    							addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__ARGUMENTS, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_30_0_0_3_0_0_1, a9_0, true);
                    						copyLocalizationInfos(a9_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[469]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[470]);
                    			}

                    // Ocl.g:3248:4: ( (a10= ',' (a11_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )*
                    loop21:
                    do {
                        int alt21=2;
                        int LA21_0 = input.LA(1);

                        if ( (LA21_0==30) ) {
                            alt21=1;
                        }


                        switch (alt21) {
                    	case 1 :
                    	    // Ocl.g:3249:5: (a10= ',' (a11_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) )
                    	    {
                    	    // Ocl.g:3249:5: (a10= ',' (a11_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) )
                    	    // Ocl.g:3250:6: a10= ',' (a11_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
                    	    {
                    	    a10=(Token)match(input,30,FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2798); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    						if (element == null) {
                    	    							element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createImplicitOperationCallCS();
                    	    							startIncompleteElement(element);
                    	    						}
                    	    						collectHiddenTokens(element);
                    	    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_30_0_0_3_0_0_2_0_0_0, null, true);
                    	    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a10, element);
                    	    					}

                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[471]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[472]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[473]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[474]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[475]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[476]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[477]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[478]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[479]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[480]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[481]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[482]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[483]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[484]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[485]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[486]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[487]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[488]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[489]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[490]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[491]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[492]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[493]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[494]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[495]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[496]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[497]);
                    	    						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getImplicitOperationCallCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[498]);
                    	    					}

                    	    // Ocl.g:3291:6: (a11_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
                    	    // Ocl.g:3292:7: a11_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
                    	    {
                    	    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2832);
                    	    a11_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    							if (terminateParsing) {
                    	    								throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    							}
                    	    							if (element == null) {
                    	    								element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createImplicitOperationCallCS();
                    	    								startIncompleteElement(element);
                    	    							}
                    	    							if (a11_0 != null) {
                    	    								if (a11_0 != null) {
                    	    									Object value = a11_0;
                    	    									addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_OPERATION_CALL_CS__ARGUMENTS, value);
                    	    									completedElement(value, true);
                    	    								}
                    	    								collectHiddenTokens(element);
                    	    								retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_30_0_0_3_0_0_2_0_0_1, a11_0, true);
                    	    								copyLocalizationInfos(a11_0, element);
                    	    							}
                    	    						}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    						// expected elements (follow set)
                    	    						addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[499]);
                    	    						addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[500]);
                    	    					}

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop21;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[501]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[502]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[503]);
            	}

            a12=(Token)match(input,29,FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2906); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createImplicitOperationCallCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_30_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a12, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[504]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[505]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[506]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[507]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[508]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[509]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[510]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[511]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[512]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[513]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[514]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[515]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[516]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[517]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[518]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[519]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[520]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[521]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[522]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[523]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[524]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[525]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[526]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[527]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[528]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[529]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[530]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[531]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[532]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[533]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[534]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[535]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[536]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[537]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[538]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[539]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[540]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[541]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[542]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 21, parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_ImplicitPropertyCallCS"
    // Ocl.g:3387:1: parse_tudresden_ocl20_pivot_language_ocl_ImplicitPropertyCallCS returns [tudresden.ocl20.pivot.language.ocl.ImplicitPropertyCallCS element = null] : (a0= SIMPLE_NAME ) ( ( (a1= IS_MARKED_PRE ) ) )? ;
    public final tudresden.ocl20.pivot.language.ocl.ImplicitPropertyCallCS parse_tudresden_ocl20_pivot_language_ocl_ImplicitPropertyCallCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.ImplicitPropertyCallCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_ImplicitPropertyCallCS_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return element; }

            // Ocl.g:3390:2: ( (a0= SIMPLE_NAME ) ( ( (a1= IS_MARKED_PRE ) ) )? )
            // Ocl.g:3391:2: (a0= SIMPLE_NAME ) ( ( (a1= IS_MARKED_PRE ) ) )?
            {
            // Ocl.g:3391:2: (a0= SIMPLE_NAME )
            // Ocl.g:3392:3: a0= SIMPLE_NAME
            {
            a0=(Token)match(input,SIMPLE_NAME,FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitPropertyCallCS2939); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createImplicitPropertyCallCS();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("SIMPLE_NAME");
            				tokenResolver.setOptions(getOptions());
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_PROPERTY_CALL_CS__PROPERTY), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				tudresden.ocl20.pivot.pivotmodel.Property proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createProperty();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.PropertyCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPropertyCallBaseExpCSPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_PROPERTY_CALL_CS__PROPERTY), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_PROPERTY_CALL_CS__PROPERTY), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_31_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[543]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[544]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[545]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[546]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[547]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[548]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[549]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[550]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[551]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[552]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[553]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[554]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[555]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[556]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[557]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[558]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[559]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[560]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[561]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[562]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[563]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[564]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[565]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[566]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[567]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[568]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[569]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[570]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[571]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[572]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[573]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[574]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[575]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[576]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[577]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[578]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[579]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[580]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[581]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[582]);
            	}

            // Ocl.g:3470:2: ( ( (a1= IS_MARKED_PRE ) ) )?
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==IS_MARKED_PRE) ) {
                alt23=1;
            }
            switch (alt23) {
                case 1 :
                    // Ocl.g:3471:3: ( (a1= IS_MARKED_PRE ) )
                    {
                    // Ocl.g:3471:3: ( (a1= IS_MARKED_PRE ) )
                    // Ocl.g:3472:4: (a1= IS_MARKED_PRE )
                    {
                    // Ocl.g:3472:4: (a1= IS_MARKED_PRE )
                    // Ocl.g:3473:5: a1= IS_MARKED_PRE
                    {
                    a1=(Token)match(input,IS_MARKED_PRE,FOLLOW_IS_MARKED_PRE_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitPropertyCallCS2975); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createImplicitPropertyCallCS();
                    						startIncompleteElement(element);
                    					}
                    					if (a1 != null) {
                    						tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IS_MARKED_PRE");
                    						tokenResolver.setOptions(getOptions());
                    						tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    						tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_PROPERTY_CALL_CS__IS_MARKED_PRE), result);
                    						Object resolvedObject = result.getResolvedToken();
                    						if (resolvedObject == null) {
                    							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
                    						}
                    						java.lang.Boolean resolved = (java.lang.Boolean) resolvedObject;
                    						if (resolved != null) {
                    							Object value = resolved;
                    							element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IMPLICIT_PROPERTY_CALL_CS__IS_MARKED_PRE), value);
                    							completedElement(value, false);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_31_0_0_1_0_0_1, resolved, true);
                    						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[583]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[584]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[585]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[586]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[587]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[588]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[589]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[590]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[591]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[592]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[593]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[594]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[595]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[596]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[597]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[598]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[599]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[600]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[601]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[602]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[603]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[604]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[605]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[606]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[607]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[608]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[609]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[610]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[611]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[612]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[613]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[614]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[615]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[616]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[617]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[618]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[619]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[620]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[621]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[622]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[623]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[624]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[625]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[626]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[627]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[628]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[629]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[630]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[631]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[632]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[633]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[634]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[635]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[636]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[637]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[638]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[639]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[640]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[641]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[642]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[643]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[644]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[645]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[646]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[647]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[648]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[649]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[650]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[651]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[652]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[653]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[654]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[655]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[656]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[657]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[658]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[659]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[660]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 22, parse_tudresden_ocl20_pivot_language_ocl_ImplicitPropertyCallCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_ImplicitPropertyCallCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS"
    // Ocl.g:3593:1: parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS returns [tudresden.ocl20.pivot.language.ocl.IteratorExpCS element = null] : (a0= ITERATOR_NAME ) a1= '(' ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) ) )? a5= '|' ) )? (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a7= ')' ;
    public final tudresden.ocl20.pivot.language.ocl.IteratorExpCS parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.IteratorExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        Token a7=null;
        tudresden.ocl20.pivot.language.ocl.IteratorExpVariableCS a2_0 =null;

        tudresden.ocl20.pivot.language.ocl.IteratorExpVariableCS a4_0 =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a6_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return element; }

            // Ocl.g:3596:2: ( (a0= ITERATOR_NAME ) a1= '(' ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) ) )? a5= '|' ) )? (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a7= ')' )
            // Ocl.g:3597:2: (a0= ITERATOR_NAME ) a1= '(' ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) ) )? a5= '|' ) )? (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a7= ')'
            {
            // Ocl.g:3597:2: (a0= ITERATOR_NAME )
            // Ocl.g:3598:3: a0= ITERATOR_NAME
            {
            a0=(Token)match(input,ITERATOR_NAME,FOLLOW_ITERATOR_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS3040); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIteratorExpCS();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("ITERATOR_NAME");
            				tokenResolver.setOptions(getOptions());
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ITERATOR_EXP_CS__ITERATOR_NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ITERATOR_EXP_CS__ITERATOR_NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_32_0_0_0, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[661]);
            	}

            a1=(Token)match(input,28,FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS3061); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIteratorExpCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_32_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[662]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[663]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[664]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[665]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[666]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[667]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[668]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[669]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[670]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[671]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[672]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[673]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[674]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[675]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[676]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[677]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[678]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[679]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[680]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[681]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[682]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[683]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[684]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[685]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[686]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[687]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[688]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[689]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[690]);
            	}

            // Ocl.g:3675:2: ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) ) )? a5= '|' ) )?
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==SIMPLE_NAME) ) {
                int LA25_1 = input.LA(2);

                if ( (LA25_1==30||LA25_1==32||LA25_1==56) ) {
                    alt25=1;
                }
            }
            switch (alt25) {
                case 1 :
                    // Ocl.g:3676:3: ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) ) )? a5= '|' )
                    {
                    // Ocl.g:3676:3: ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) ) )? a5= '|' )
                    // Ocl.g:3677:4: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) ) )? a5= '|'
                    {
                    // Ocl.g:3677:4: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS )
                    // Ocl.g:3678:5: a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS3090);
                    a2_0=parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIteratorExpCS();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.ITERATOR_EXP_CS__ITERATOR_VARIABLES, value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_32_0_0_3_0_0_1, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[691]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[692]);
                    			}

                    // Ocl.g:3704:4: ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) ) )?
                    int alt24=2;
                    int LA24_0 = input.LA(1);

                    if ( (LA24_0==30) ) {
                        alt24=1;
                    }
                    switch (alt24) {
                        case 1 :
                            // Ocl.g:3705:5: (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) )
                            {
                            // Ocl.g:3705:5: (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) )
                            // Ocl.g:3706:6: a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS )
                            {
                            a3=(Token)match(input,30,FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS3131); if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            						if (element == null) {
                            							element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIteratorExpCS();
                            							startIncompleteElement(element);
                            						}
                            						collectHiddenTokens(element);
                            						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_32_0_0_3_0_0_2_0_0_1, null, true);
                            						copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                            					}

                            if ( state.backtracking==0 ) {
                            						// expected elements (follow set)
                            						addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[693]);
                            					}

                            // Ocl.g:3720:6: (a4_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS )
                            // Ocl.g:3721:7: a4_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS
                            {
                            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS3165);
                            a4_0=parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS();

                            state._fsp--;
                            if (state.failed) return element;

                            if ( state.backtracking==0 ) {
                            							if (terminateParsing) {
                            								throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                            							}
                            							if (element == null) {
                            								element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIteratorExpCS();
                            								startIncompleteElement(element);
                            							}
                            							if (a4_0 != null) {
                            								if (a4_0 != null) {
                            									Object value = a4_0;
                            									addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.ITERATOR_EXP_CS__ITERATOR_VARIABLES, value);
                            									completedElement(value, true);
                            								}
                            								collectHiddenTokens(element);
                            								retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_32_0_0_3_0_0_2_0_0_2, a4_0, true);
                            								copyLocalizationInfos(a4_0, element);
                            							}
                            						}

                            }


                            if ( state.backtracking==0 ) {
                            						// expected elements (follow set)
                            						addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[694]);
                            					}

                            }


                            }
                            break;

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[695]);
                    			}

                    a5=(Token)match(input,56,FOLLOW_56_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS3226); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIteratorExpCS();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_32_0_0_3_0_0_3, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[696]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[697]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[698]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[699]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[700]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[701]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[702]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[703]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[704]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[705]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[706]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[707]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[708]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[709]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[710]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[711]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[712]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[713]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[714]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[715]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[716]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[717]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[718]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[719]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[720]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[721]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[722]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[723]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[724]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[725]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[726]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[727]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[728]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[729]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[730]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[731]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[732]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[733]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[734]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[735]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[736]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[737]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[738]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[739]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[740]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[741]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[742]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[743]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[744]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[745]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[746]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[747]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[748]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[749]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[750]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[751]);
            	}

            // Ocl.g:3828:2: (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:3829:3: a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS3263);
            a6_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIteratorExpCS();
            				startIncompleteElement(element);
            			}
            			if (a6_0 != null) {
            				if (a6_0 != null) {
            					Object value = a6_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ITERATOR_EXP_CS__BODY_EXPRESSION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_32_0_0_5, a6_0, true);
            				copyLocalizationInfos(a6_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[752]);
            	}

            a7=(Token)match(input,29,FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS3281); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIteratorExpCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_32_0_0_7, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[753]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[754]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[755]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[756]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[757]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[758]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[759]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[760]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[761]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[762]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[763]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[764]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[765]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[766]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[767]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[768]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[769]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[770]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[771]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[772]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[773]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[774]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[775]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[776]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[777]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[778]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[779]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[780]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[781]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[782]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[783]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[784]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[785]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[786]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[787]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[788]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[789]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[790]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[791]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 23, parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS"
    // Ocl.g:3908:1: parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS returns [tudresden.ocl20.pivot.language.ocl.IterateExpCS element = null] : a0= 'iterate' a1= '(' ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) a3= ';' ) )? (a4_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) a5= '|' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a7= ')' ;
    public final tudresden.ocl20.pivot.language.ocl.IterateExpCS parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.IterateExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a5=null;
        Token a7=null;
        tudresden.ocl20.pivot.language.ocl.IteratorExpVariableCS a2_0 =null;

        tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitCS a4_0 =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a6_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return element; }

            // Ocl.g:3911:2: (a0= 'iterate' a1= '(' ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) a3= ';' ) )? (a4_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) a5= '|' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a7= ')' )
            // Ocl.g:3912:2: a0= 'iterate' a1= '(' ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) a3= ';' ) )? (a4_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) a5= '|' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a7= ')'
            {
            a0=(Token)match(input,48,FOLLOW_48_in_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS3310); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIterateExpCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_33_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[792]);
            	}

            a1=(Token)match(input,28,FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS3324); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIterateExpCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_33_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[793]);
            	}

            // Ocl.g:3940:2: ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) a3= ';' ) )?
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==SIMPLE_NAME) ) {
                int LA26_1 = input.LA(2);

                if ( (synpred32_Ocl()) ) {
                    alt26=1;
                }
            }
            switch (alt26) {
                case 1 :
                    // Ocl.g:3941:3: ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) a3= ';' )
                    {
                    // Ocl.g:3941:3: ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) a3= ';' )
                    // Ocl.g:3942:4: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) a3= ';'
                    {
                    // Ocl.g:3942:4: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS )
                    // Ocl.g:3943:5: a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS_in_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS3353);
                    a2_0=parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIterateExpCS();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ITERATE_EXP_CS__ITERATOR_VARIABLE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_33_0_0_3_0_0_0, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[794]);
                    			}

                    a3=(Token)match(input,34,FOLLOW_34_in_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS3381); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIterateExpCS();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_33_0_0_3_0_0_2, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[795]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[796]);
            	}

            // Ocl.g:3989:2: (a4_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS )
            // Ocl.g:3990:3: a4_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS_in_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS3418);
            a4_0=parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIterateExpCS();
            				startIncompleteElement(element);
            			}
            			if (a4_0 != null) {
            				if (a4_0 != null) {
            					Object value = a4_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ITERATE_EXP_CS__RESULT_VARIABLE), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_33_0_0_4, a4_0, true);
            				copyLocalizationInfos(a4_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[797]);
            	}

            a5=(Token)match(input,56,FOLLOW_56_in_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS3436); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIterateExpCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_33_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[798]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[799]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[800]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[801]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[802]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[803]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[804]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[805]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[806]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[807]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[808]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[809]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[810]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[811]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[812]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[813]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[814]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[815]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[816]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[817]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[818]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[819]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[820]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[821]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[822]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[823]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[824]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIterateExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[825]);
            	}

            // Ocl.g:4056:2: (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:4057:3: a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS3454);
            a6_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIterateExpCS();
            				startIncompleteElement(element);
            			}
            			if (a6_0 != null) {
            				if (a6_0 != null) {
            					Object value = a6_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ITERATE_EXP_CS__BODY_EXPRESSION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_33_0_0_6, a6_0, true);
            				copyLocalizationInfos(a6_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[826]);
            	}

            a7=(Token)match(input,29,FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS3472); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIterateExpCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_33_0_0_8, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[827]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[828]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[829]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[830]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[831]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[832]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[833]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[834]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[835]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[836]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[837]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[838]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[839]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[840]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[841]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[842]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[843]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[844]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[845]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[846]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[847]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[848]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[849]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[850]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[851]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[852]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[853]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[854]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[855]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[856]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[857]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[858]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[859]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[860]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[861]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[862]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[863]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[864]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[865]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 24, parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS"
    // Ocl.g:4136:1: parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS returns [tudresden.ocl20.pivot.language.ocl.IteratorExpVariableCS element = null] : (a0_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ( (a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )? ;
    public final tudresden.ocl20.pivot.language.ocl.IteratorExpVariableCS parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.IteratorExpVariableCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS_StartIndex = input.index();

        Token a1=null;
        tudresden.ocl20.pivot.language.ocl.SimpleNameCS a0_0 =null;

        tudresden.ocl20.pivot.language.ocl.TypeCS a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return element; }

            // Ocl.g:4139:2: ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ( (a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )? )
            // Ocl.g:4140:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ( (a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )?
            {
            // Ocl.g:4140:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS )
            // Ocl.g:4141:3: a0_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS3505);
            a0_0=parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIteratorExpVariableCS();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ITERATOR_EXP_VARIABLE_CS__VARIABLE_NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_34_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[866]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[867]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[868]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[869]);
            	}

            // Ocl.g:4169:2: ( (a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )?
            int alt27=2;
            int LA27_0 = input.LA(1);

            if ( (LA27_0==32) ) {
                alt27=1;
            }
            switch (alt27) {
                case 1 :
                    // Ocl.g:4170:3: (a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) )
                    {
                    // Ocl.g:4170:3: (a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) )
                    // Ocl.g:4171:4: a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS )
                    {
                    a1=(Token)match(input,32,FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS3532); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIteratorExpVariableCS();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_34_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpVariableCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[870]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpVariableCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[871]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpVariableCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[872]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIteratorExpVariableCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[873]);
                    			}

                    // Ocl.g:4188:4: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS )
                    // Ocl.g:4189:5: a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS3558);
                    a2_0=parse_tudresden_ocl20_pivot_language_ocl_TypeCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIteratorExpVariableCS();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ITERATOR_EXP_VARIABLE_CS__TYPE_NAME), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_34_0_0_1_0_0_1, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[874]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[875]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[876]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[877]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[878]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[879]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 25, parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS"
    // Ocl.g:4227:1: parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS returns [tudresden.ocl20.pivot.language.ocl.TypePathNameSimpleCS element = null] : (a0= SIMPLE_NAME ) ;
    public final tudresden.ocl20.pivot.language.ocl.TypePathNameSimpleCS parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.TypePathNameSimpleCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return element; }

            // Ocl.g:4230:2: ( (a0= SIMPLE_NAME ) )
            // Ocl.g:4231:2: (a0= SIMPLE_NAME )
            {
            // Ocl.g:4231:2: (a0= SIMPLE_NAME )
            // Ocl.g:4232:3: a0= SIMPLE_NAME
            {
            a0=(Token)match(input,SIMPLE_NAME,FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS3618); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createTypePathNameSimpleCS();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("SIMPLE_NAME");
            				tokenResolver.setOptions(getOptions());
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.TYPE_PATH_NAME_SIMPLE_CS__TYPE_NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				tudresden.ocl20.pivot.pivotmodel.Type proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createType();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.TypePathNameSimpleCS, tudresden.ocl20.pivot.pivotmodel.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypePathNameSimpleCSTypeNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.TYPE_PATH_NAME_SIMPLE_CS__TYPE_NAME), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.TYPE_PATH_NAME_SIMPLE_CS__TYPE_NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_35_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[880]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[881]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[882]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[883]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[884]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[885]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[886]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[887]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[888]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[889]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[890]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[891]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[892]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[893]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[894]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 26, parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS"
    // Ocl.g:4287:1: parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS returns [tudresden.ocl20.pivot.language.ocl.TypePathNameNestedCS element = null] : (a0= SIMPLE_NAME ) a1= '::' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.TypePathNameNestedCS parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.TypePathNameNestedCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        tudresden.ocl20.pivot.language.ocl.TypePathNameCS a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return element; }

            // Ocl.g:4290:2: ( (a0= SIMPLE_NAME ) a1= '::' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS ) )
            // Ocl.g:4291:2: (a0= SIMPLE_NAME ) a1= '::' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS )
            {
            // Ocl.g:4291:2: (a0= SIMPLE_NAME )
            // Ocl.g:4292:3: a0= SIMPLE_NAME
            {
            a0=(Token)match(input,SIMPLE_NAME,FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS3658); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createTypePathNameNestedCS();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("SIMPLE_NAME");
            				tokenResolver.setOptions(getOptions());
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.TYPE_PATH_NAME_NESTED_CS__NAMESPACE), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				tudresden.ocl20.pivot.pivotmodel.Namespace proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createNamespace();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.TypePathNameNestedCS, tudresden.ocl20.pivot.pivotmodel.Namespace>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getTypePathNameNestedCSNamespaceReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.TYPE_PATH_NAME_NESTED_CS__NAMESPACE), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.TYPE_PATH_NAME_NESTED_CS__NAMESPACE), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_36_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[895]);
            	}

            a1=(Token)match(input,33,FOLLOW_33_in_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS3679); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createTypePathNameNestedCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_36_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getTypePathNameNestedCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[896]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getTypePathNameNestedCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[897]);
            	}

            // Ocl.g:4346:2: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS )
            // Ocl.g:4347:3: a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS3697);
            a2_0=parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createTypePathNameNestedCS();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.TYPE_PATH_NAME_NESTED_CS__TYPE_PATH_NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_36_0_0_4, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[898]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[899]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[900]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[901]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[902]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[903]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[904]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[905]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[906]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[907]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[908]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[909]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[910]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[911]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[912]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 27, parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS"
    // Ocl.g:4388:1: parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS returns [tudresden.ocl20.pivot.language.ocl.TupleTypeCS element = null] : a0= 'Tuple' a1= '(' ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS ) )? a3= ')' ;
    public final tudresden.ocl20.pivot.language.ocl.TupleTypeCS parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.TupleTypeCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithoutInitListCS a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return element; }

            // Ocl.g:4391:2: (a0= 'Tuple' a1= '(' ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS ) )? a3= ')' )
            // Ocl.g:4392:2: a0= 'Tuple' a1= '(' ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS ) )? a3= ')'
            {
            a0=(Token)match(input,35,FOLLOW_35_in_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS3730); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createTupleTypeCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_37_0_0_0, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[913]);
            	}

            a1=(Token)match(input,28,FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS3744); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createTupleTypeCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_37_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getTupleTypeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[914]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[915]);
            	}

            // Ocl.g:4421:2: ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS ) )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==SIMPLE_NAME) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // Ocl.g:4422:3: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS )
                    {
                    // Ocl.g:4422:3: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS )
                    // Ocl.g:4423:4: a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS_in_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS3767);
                    a2_0=parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (terminateParsing) {
                    					throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    				}
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createTupleTypeCS();
                    					startIncompleteElement(element);
                    				}
                    				if (a2_0 != null) {
                    					if (a2_0 != null) {
                    						Object value = a2_0;
                    						element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.TUPLE_TYPE_CS__VARIABLE_DECLARATION_LIST), value);
                    						completedElement(value, true);
                    					}
                    					collectHiddenTokens(element);
                    					retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_37_0_0_3, a2_0, true);
                    					copyLocalizationInfos(a2_0, element);
                    				}
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[916]);
            	}

            a3=(Token)match(input,29,FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS3793); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createTupleTypeCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_37_0_0_5, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[917]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[918]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[919]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[920]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[921]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[922]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[923]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[924]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[925]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[926]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[927]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[928]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[929]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[930]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[931]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[932]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[933]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[934]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[935]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[936]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[937]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[938]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[939]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[940]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[941]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[942]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[943]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[944]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[945]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[946]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[947]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[948]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[949]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[950]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[951]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[952]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[953]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 28, parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS"
    // Ocl.g:4501:1: parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS returns [tudresden.ocl20.pivot.language.ocl.CollectionTypeIdentifierCS element = null] : (a0= COLLECTION_TYPES ) ( (a1= '(' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) a3= ')' ) )? ;
    public final tudresden.ocl20.pivot.language.ocl.CollectionTypeIdentifierCS parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.CollectionTypeIdentifierCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        tudresden.ocl20.pivot.language.ocl.TypeCS a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return element; }

            // Ocl.g:4504:2: ( (a0= COLLECTION_TYPES ) ( (a1= '(' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) a3= ')' ) )? )
            // Ocl.g:4505:2: (a0= COLLECTION_TYPES ) ( (a1= '(' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) a3= ')' ) )?
            {
            // Ocl.g:4505:2: (a0= COLLECTION_TYPES )
            // Ocl.g:4506:3: a0= COLLECTION_TYPES
            {
            a0=(Token)match(input,COLLECTION_TYPES,FOLLOW_COLLECTION_TYPES_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS3826); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createCollectionTypeIdentifierCS();
            				startIncompleteElement(element);
            			}
            			if (a0 != null) {
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("COLLECTION_TYPES");
            				tokenResolver.setOptions(getOptions());
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.COLLECTION_TYPE_IDENTIFIER_CS__TYPE_NAME), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            				}
            				String resolved = (String) resolvedObject;
            				tudresden.ocl20.pivot.pivotmodel.Type proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createType();
            				collectHiddenTokens(element);
            				registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.CollectionTypeIdentifierCS, tudresden.ocl20.pivot.pivotmodel.Type>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getCollectionTypeIdentifierCSTypeNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.COLLECTION_TYPE_IDENTIFIER_CS__TYPE_NAME), resolved, proxy);
            				if (proxy != null) {
            					Object value = proxy;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.COLLECTION_TYPE_IDENTIFIER_CS__TYPE_NAME), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_38_0_0_0, proxy, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[954]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[955]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[956]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[957]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[958]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[959]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[960]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[961]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[962]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[963]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[964]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[965]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[966]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[967]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[968]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[969]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[970]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[971]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[972]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[973]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[974]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[975]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[976]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[977]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[978]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[979]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[980]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[981]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[982]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[983]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[984]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[985]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[986]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[987]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[988]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[989]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[990]);
            	}

            // Ocl.g:4581:2: ( (a1= '(' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) a3= ')' ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==28) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // Ocl.g:4582:3: (a1= '(' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) a3= ')' )
                    {
                    // Ocl.g:4582:3: (a1= '(' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) a3= ')' )
                    // Ocl.g:4583:4: a1= '(' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) a3= ')'
                    {
                    a1=(Token)match(input,28,FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS3856); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createCollectionTypeIdentifierCS();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_38_0_0_1_0_0_1, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionTypeIdentifierCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[991]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionTypeIdentifierCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[992]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionTypeIdentifierCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[993]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionTypeIdentifierCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[994]);
                    			}

                    // Ocl.g:4600:4: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS )
                    // Ocl.g:4601:5: a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS3882);
                    a2_0=parse_tudresden_ocl20_pivot_language_ocl_TypeCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createCollectionTypeIdentifierCS();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.COLLECTION_TYPE_IDENTIFIER_CS__GENERIC_TYPE), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_38_0_0_1_0_0_3, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[995]);
                    			}

                    a3=(Token)match(input,29,FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS3910); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createCollectionTypeIdentifierCS();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_38_0_0_1_0_0_5, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[996]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[997]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[998]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[999]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1000]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1001]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1002]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1003]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1004]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1005]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1006]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1007]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1008]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1009]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1010]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1011]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1012]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1013]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1014]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1015]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1016]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1017]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1018]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1019]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1020]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1021]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1022]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1023]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1024]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1025]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1026]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1027]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1028]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1029]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1030]);
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1031]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1032]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1033]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1034]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1035]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1036]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1037]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1038]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1039]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1040]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1041]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1042]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1043]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1044]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1045]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1046]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1047]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1048]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1049]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1050]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1051]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1052]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1053]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1054]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1055]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1056]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1057]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1058]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1059]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1060]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1061]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1062]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1063]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1064]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1065]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1066]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1067]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 29, parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS"
    // Ocl.g:4719:1: parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS returns [tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithoutInitCS element = null] : (a0_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithoutInitCS parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithoutInitCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS_StartIndex = input.index();

        Token a1=null;
        tudresden.ocl20.pivot.language.ocl.SimpleNameCS a0_0 =null;

        tudresden.ocl20.pivot.language.ocl.TypeCS a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return element; }

            // Ocl.g:4722:2: ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) )
            // Ocl.g:4723:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS )
            {
            // Ocl.g:4723:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS )
            // Ocl.g:4724:3: a0_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS3962);
            a0_0=parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createVariableDeclarationWithoutInitCS();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.VARIABLE_DECLARATION_WITHOUT_INIT_CS__VARIABLE_NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_39_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1068]);
            	}

            a1=(Token)match(input,32,FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS3980); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createVariableDeclarationWithoutInitCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_39_0_0_1, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithoutInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1069]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithoutInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1070]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithoutInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1071]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithoutInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1072]);
            	}

            // Ocl.g:4766:2: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS )
            // Ocl.g:4767:3: a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS3998);
            a2_0=parse_tudresden_ocl20_pivot_language_ocl_TypeCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createVariableDeclarationWithoutInitCS();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.VARIABLE_DECLARATION_WITHOUT_INIT_CS__TYPE_NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_39_0_0_2, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1073]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1074]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 30, parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS"
    // Ocl.g:4795:1: parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS returns [tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithoutInitListCS element = null] : (a0_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS ) ( (a1= ',' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS ) ) )* ;
    public final tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithoutInitListCS parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithoutInitListCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS_StartIndex = input.index();

        Token a1=null;
        tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithoutInitCS a0_0 =null;

        tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithoutInitCS a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return element; }

            // Ocl.g:4798:2: ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS ) ( (a1= ',' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS ) ) )* )
            // Ocl.g:4799:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS ) ( (a1= ',' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS ) ) )*
            {
            // Ocl.g:4799:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS )
            // Ocl.g:4800:3: a0_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS4035);
            a0_0=parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createVariableDeclarationWithoutInitListCS();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.VARIABLE_DECLARATION_WITHOUT_INIT_LIST_CS__VARIABLE_DECLARATIONS, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_40_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1075]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1076]);
            	}

            // Ocl.g:4826:2: ( (a1= ',' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS ) ) )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==30) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // Ocl.g:4827:3: (a1= ',' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS ) )
            	    {
            	    // Ocl.g:4827:3: (a1= ',' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS ) )
            	    // Ocl.g:4828:4: a1= ',' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS )
            	    {
            	    a1=(Token)match(input,30,FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS4062); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createVariableDeclarationWithoutInitListCS();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_40_0_0_1_0_0_1, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithoutInitListCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1077]);
            	    			}

            	    // Ocl.g:4842:4: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS )
            	    // Ocl.g:4843:5: a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS
            	    {
            	    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS4088);
            	    a2_0=parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createVariableDeclarationWithoutInitListCS();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a2_0 != null) {
            	    						if (a2_0 != null) {
            	    							Object value = a2_0;
            	    							addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.VARIABLE_DECLARATION_WITHOUT_INIT_LIST_CS__VARIABLE_DECLARATIONS, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_40_0_0_1_0_0_2, a2_0, true);
            	    						copyLocalizationInfos(a2_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1078]);
            	    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1079]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1080]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1081]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 31, parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS"
    // Ocl.g:4879:1: parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS returns [tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitCS element = null] : (a0_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ( (a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )? (a3= EQUALITY_OPERATOR ) (a4_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitCS parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS_StartIndex = input.index();

        Token a1=null;
        Token a3=null;
        tudresden.ocl20.pivot.language.ocl.SimpleNameCS a0_0 =null;

        tudresden.ocl20.pivot.language.ocl.TypeCS a2_0 =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return element; }

            // Ocl.g:4882:2: ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ( (a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )? (a3= EQUALITY_OPERATOR ) (a4_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) )
            // Ocl.g:4883:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS ) ( (a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )? (a3= EQUALITY_OPERATOR ) (a4_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            {
            // Ocl.g:4883:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS )
            // Ocl.g:4884:3: a0_0= parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS4148);
            a0_0=parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createVariableDeclarationWithInitCS();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.VARIABLE_DECLARATION_WITH_INIT_CS__VARIABLE_NAME), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_41_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1082]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1083]);
            	}

            // Ocl.g:4910:2: ( (a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) ) )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==32) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // Ocl.g:4911:3: (a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) )
                    {
                    // Ocl.g:4911:3: (a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS ) )
                    // Ocl.g:4912:4: a1= ':' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS )
                    {
                    a1=(Token)match(input,32,FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS4175); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    				if (element == null) {
                    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createVariableDeclarationWithInitCS();
                    					startIncompleteElement(element);
                    				}
                    				collectHiddenTokens(element);
                    				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_41_0_0_1_0_0_0, null, true);
                    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
                    			}

                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1084]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1085]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1086]);
                    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1087]);
                    			}

                    // Ocl.g:4929:4: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS )
                    // Ocl.g:4930:5: a2_0= parse_tudresden_ocl20_pivot_language_ocl_TypeCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS4201);
                    a2_0=parse_tudresden_ocl20_pivot_language_ocl_TypeCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    					if (terminateParsing) {
                    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    					}
                    					if (element == null) {
                    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createVariableDeclarationWithInitCS();
                    						startIncompleteElement(element);
                    					}
                    					if (a2_0 != null) {
                    						if (a2_0 != null) {
                    							Object value = a2_0;
                    							element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.VARIABLE_DECLARATION_WITH_INIT_CS__TYPE_NAME), value);
                    							completedElement(value, true);
                    						}
                    						collectHiddenTokens(element);
                    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_41_0_0_1_0_0_1, a2_0, true);
                    						copyLocalizationInfos(a2_0, element);
                    					}
                    				}

                    }


                    if ( state.backtracking==0 ) {
                    				// expected elements (follow set)
                    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1088]);
                    			}

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1089]);
            	}

            // Ocl.g:4962:2: (a3= EQUALITY_OPERATOR )
            // Ocl.g:4963:3: a3= EQUALITY_OPERATOR
            {
            a3=(Token)match(input,EQUALITY_OPERATOR,FOLLOW_EQUALITY_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS4246); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createVariableDeclarationWithInitCS();
            				startIncompleteElement(element);
            			}
            			if (a3 != null) {
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("EQUALITY_OPERATOR");
            				tokenResolver.setOptions(getOptions());
            				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            				tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.VARIABLE_DECLARATION_WITH_INIT_CS__EQUAL), result);
            				Object resolvedObject = result.getResolvedToken();
            				if (resolvedObject == null) {
            					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
            				}
            				java.lang.String resolved = (java.lang.String) resolvedObject;
            				if (resolved != null) {
            					Object value = resolved;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.VARIABLE_DECLARATION_WITH_INIT_CS__EQUAL), value);
            					completedElement(value, false);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_41_0_0_2, resolved, true);
            				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1090]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1091]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1092]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1093]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1094]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1095]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1096]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1097]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1098]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1099]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1100]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1101]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1102]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1103]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1104]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1105]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1106]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1107]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1108]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1109]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1110]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1111]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1112]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1113]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1114]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1115]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1116]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1117]);
            	}

            // Ocl.g:5025:2: (a4_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:5026:3: a4_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS4271);
            a4_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createVariableDeclarationWithInitCS();
            				startIncompleteElement(element);
            			}
            			if (a4_0 != null) {
            				if (a4_0 != null) {
            					Object value = a4_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.VARIABLE_DECLARATION_WITH_INIT_CS__INITIALIZATION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_41_0_0_3, a4_0, true);
            				copyLocalizationInfos(a4_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1118]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1119]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1120]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1121]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1122]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1123]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1124]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1125]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1126]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1127]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1128]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1129]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 32, parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS"
    // Ocl.g:5064:1: parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS returns [tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitListCS element = null] : (a0_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) ( (a1= ',' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) ) )* ;
    public final tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitListCS parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitListCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS_StartIndex = input.index();

        Token a1=null;
        tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitCS a0_0 =null;

        tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitCS a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return element; }

            // Ocl.g:5067:2: ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) ( (a1= ',' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) ) )* )
            // Ocl.g:5068:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) ( (a1= ',' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) ) )*
            {
            // Ocl.g:5068:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS )
            // Ocl.g:5069:3: a0_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS4308);
            a0_0=parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createVariableDeclarationWithInitListCS();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.VARIABLE_DECLARATION_WITH_INIT_LIST_CS__VARIABLE_DECLARATIONS, value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_42_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1130]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1131]);
            	}

            // Ocl.g:5095:2: ( (a1= ',' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) ) )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==30) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // Ocl.g:5096:3: (a1= ',' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) )
            	    {
            	    // Ocl.g:5096:3: (a1= ',' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) )
            	    // Ocl.g:5097:4: a1= ',' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS )
            	    {
            	    a1=(Token)match(input,30,FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS4335); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    				if (element == null) {
            	    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createVariableDeclarationWithInitListCS();
            	    					startIncompleteElement(element);
            	    				}
            	    				collectHiddenTokens(element);
            	    				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_42_0_0_1_0_0_1, null, true);
            	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	    			}

            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getVariableDeclarationWithInitListCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1132]);
            	    			}

            	    // Ocl.g:5111:4: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS )
            	    // Ocl.g:5112:5: a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS
            	    {
            	    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS4361);
            	    a2_0=parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    					if (terminateParsing) {
            	    						throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            	    					}
            	    					if (element == null) {
            	    						element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createVariableDeclarationWithInitListCS();
            	    						startIncompleteElement(element);
            	    					}
            	    					if (a2_0 != null) {
            	    						if (a2_0 != null) {
            	    							Object value = a2_0;
            	    							addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.VARIABLE_DECLARATION_WITH_INIT_LIST_CS__VARIABLE_DECLARATIONS, value);
            	    							completedElement(value, true);
            	    						}
            	    						collectHiddenTokens(element);
            	    						retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_42_0_0_1_0_0_2, a2_0, true);
            	    						copyLocalizationInfos(a2_0, element);
            	    					}
            	    				}

            	    }


            	    if ( state.backtracking==0 ) {
            	    				// expected elements (follow set)
            	    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1133]);
            	    				addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1134]);
            	    			}

            	    }


            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1135]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1136]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 33, parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS"
    // Ocl.g:5148:1: parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS returns [tudresden.ocl20.pivot.language.ocl.CollectionRangeCS element = null] : (a0_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a1= '..' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.CollectionRangeCS parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.CollectionRangeCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS_StartIndex = input.index();

        Token a1=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a0_0 =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return element; }

            // Ocl.g:5151:2: ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a1= '..' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) )
            // Ocl.g:5152:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a1= '..' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            {
            // Ocl.g:5152:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:5153:3: a0_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS4421);
            a0_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createCollectionRangeCS();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.COLLECTION_RANGE_CS__FROM), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_49_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1137]);
            	}

            a1=(Token)match(input,31,FOLLOW_31_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS4439); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            		if (element == null) {
            			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createCollectionRangeCS();
            			startIncompleteElement(element);
            		}
            		collectHiddenTokens(element);
            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_49_0_0_2, null, true);
            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            	}

            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1138]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1139]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1140]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1141]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1142]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1143]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1144]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1145]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1146]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1147]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1148]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1149]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1150]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1151]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1152]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1153]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1154]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1155]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1156]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1157]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1158]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1159]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1160]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1161]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1162]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1163]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1164]);
            		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionRangeCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1165]);
            	}

            // Ocl.g:5219:2: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:5220:3: a2_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS4457);
            a2_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createCollectionRangeCS();
            				startIncompleteElement(element);
            			}
            			if (a2_0 != null) {
            				if (a2_0 != null) {
            					Object value = a2_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.COLLECTION_RANGE_CS__TO), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_49_0_0_4, a2_0, true);
            				copyLocalizationInfos(a2_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1166]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1167]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 34, parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsOclExpCS"
    // Ocl.g:5248:1: parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsOclExpCS returns [tudresden.ocl20.pivot.language.ocl.CollectionLiteralPartsOclExpCS element = null] : (a0_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.CollectionLiteralPartsOclExpCS parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsOclExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.CollectionLiteralPartsOclExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsOclExpCS_StartIndex = input.index();

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return element; }

            // Ocl.g:5251:2: ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) )
            // Ocl.g:5252:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            {
            // Ocl.g:5252:2: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:5253:3: a0_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsOclExpCS4494);
            a0_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            			if (terminateParsing) {
            				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            			}
            			if (element == null) {
            				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createCollectionLiteralPartsOclExpCS();
            				startIncompleteElement(element);
            			}
            			if (a0_0 != null) {
            				if (a0_0 != null) {
            					Object value = a0_0;
            					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.COLLECTION_LITERAL_PARTS_OCL_EXP_CS__OCL_EXPRESSION), value);
            					completedElement(value, true);
            				}
            				collectHiddenTokens(element);
            				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_50_0_0_0, a0_0, true);
            				copyLocalizationInfos(a0_0, element);
            			}
            		}

            }


            if ( state.backtracking==0 ) {
            		// expected elements (follow set)
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1168]);
            		addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1169]);
            	}

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 35, parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsOclExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsOclExpCS"



    // $ANTLR start "parseop_OclExpressionCS_level_4"
    // Ocl.g:5281:1: parseop_OclExpressionCS_level_4 returns [tudresden.ocl20.pivot.language.ocl.OclExpressionCS element = null] : leftArg= parseop_OclExpressionCS_level_5 ( ( () (a0= IMPLIES_OPERATOR ) rightArg= parseop_OclExpressionCS_level_5 )+ |) ;
    public final tudresden.ocl20.pivot.language.ocl.OclExpressionCS parseop_OclExpressionCS_level_4() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS element =  null;

        int parseop_OclExpressionCS_level_4_StartIndex = input.index();

        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS leftArg =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return element; }

            // Ocl.g:5284:2: (leftArg= parseop_OclExpressionCS_level_5 ( ( () (a0= IMPLIES_OPERATOR ) rightArg= parseop_OclExpressionCS_level_5 )+ |) )
            // Ocl.g:5285:2: leftArg= parseop_OclExpressionCS_level_5 ( ( () (a0= IMPLIES_OPERATOR ) rightArg= parseop_OclExpressionCS_level_5 )+ |)
            {
            pushFollow(FOLLOW_parseop_OclExpressionCS_level_5_in_parseop_OclExpressionCS_level_44527);
            leftArg=parseop_OclExpressionCS_level_5();

            state._fsp--;
            if (state.failed) return element;

            // Ocl.g:5285:44: ( ( () (a0= IMPLIES_OPERATOR ) rightArg= parseop_OclExpressionCS_level_5 )+ |)
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==IMPLIES_OPERATOR) ) {
                int LA34_1 = input.LA(2);

                if ( (synpred40_Ocl()) ) {
                    alt34=1;
                }
                else if ( (true) ) {
                    alt34=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 34, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA34_0==EOF||(LA34_0 >= ADDITIVE_OPERATOR && LA34_0 <= AND_OPERATOR)||LA34_0==EQUALITY_OPERATOR||(LA34_0 >= MULT_OPERATOR && LA34_0 <= NEQUALITY_OPERATOR)||LA34_0==OR_OPERATOR||LA34_0==RELATIONAL_OPERATOR||LA34_0==STATIC||LA34_0==XOR_OPERATOR||(LA34_0 >= 29 && LA34_0 <= 31)||(LA34_0 >= 36 && LA34_0 <= 42)||(LA34_0 >= 44 && LA34_0 <= 46)||(LA34_0 >= 52 && LA34_0 <= 54)||(LA34_0 >= 56 && LA34_0 <= 57)) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;

            }
            switch (alt34) {
                case 1 :
                    // Ocl.g:5285:45: ( () (a0= IMPLIES_OPERATOR ) rightArg= parseop_OclExpressionCS_level_5 )+
                    {
                    // Ocl.g:5285:45: ( () (a0= IMPLIES_OPERATOR ) rightArg= parseop_OclExpressionCS_level_5 )+
                    int cnt33=0;
                    loop33:
                    do {
                        int alt33=2;
                        int LA33_0 = input.LA(1);

                        if ( (LA33_0==IMPLIES_OPERATOR) ) {
                            int LA33_2 = input.LA(2);

                            if ( (synpred39_Ocl()) ) {
                                alt33=1;
                            }


                        }


                        switch (alt33) {
                    	case 1 :
                    	    // Ocl.g:5286:3: () (a0= IMPLIES_OPERATOR ) rightArg= parseop_OclExpressionCS_level_5
                    	    {
                    	    // Ocl.g:5286:3: ()
                    	    // Ocl.g:5286:4: 
                    	    {
                    	    }


                    	    if ( state.backtracking==0 ) { element = null; }

                    	    // Ocl.g:5288:3: (a0= IMPLIES_OPERATOR )
                    	    // Ocl.g:5289:4: a0= IMPLIES_OPERATOR
                    	    {
                    	    a0=(Token)match(input,IMPLIES_OPERATOR,FOLLOW_IMPLIES_OPERATOR_in_parseop_OclExpressionCS_level_44552); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    				if (terminateParsing) {
                    	    					throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    				}
                    	    				if (element == null) {
                    	    					element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLogicalImpliesOperationCallExpCS();
                    	    					startIncompleteElement(element);
                    	    				}
                    	    				if (a0 != null) {
                    	    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IMPLIES_OPERATOR");
                    	    					tokenResolver.setOptions(getOptions());
                    	    					tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    	    					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_IMPLIES_OPERATION_CALL_EXP_CS__OPERATION_NAME), result);
                    	    					Object resolvedObject = result.getResolvedToken();
                    	    					if (resolvedObject == null) {
                    	    						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    	    					}
                    	    					java.lang.String resolved = (java.lang.String) resolvedObject;
                    	    					if (resolved != null) {
                    	    						Object value = resolved;
                    	    						element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_IMPLIES_OPERATION_CALL_EXP_CS__OPERATION_NAME), value);
                    	    						completedElement(value, false);
                    	    					}
                    	    					collectHiddenTokens(element);
                    	    					retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_19_0_0_1, resolved, true);
                    	    					copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    	    				}
                    	    			}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    			// expected elements (follow set)
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1170]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1171]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1172]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1173]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1174]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1175]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1176]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1177]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1178]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1179]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1180]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1181]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1182]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1183]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1184]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1185]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1186]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1187]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1188]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1189]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1190]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1191]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1192]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1193]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1194]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1195]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1196]);
                    	    			addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalImpliesOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1197]);
                    	    		}

                    	    pushFollow(FOLLOW_parseop_OclExpressionCS_level_5_in_parseop_OclExpressionCS_level_44579);
                    	    rightArg=parseop_OclExpressionCS_level_5();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    			if (terminateParsing) {
                    	    				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    			}
                    	    			if (element == null) {
                    	    				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLogicalImpliesOperationCallExpCS();
                    	    				startIncompleteElement(element);
                    	    			}
                    	    			if (leftArg != null) {
                    	    				if (leftArg != null) {
                    	    					Object value = leftArg;
                    	    					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_IMPLIES_OPERATION_CALL_EXP_CS__SOURCE), value);
                    	    					completedElement(value, true);
                    	    				}
                    	    				collectHiddenTokens(element);
                    	    				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_19_0_0_0, leftArg, true);
                    	    				copyLocalizationInfos(leftArg, element);
                    	    			}
                    	    		}

                    	    if ( state.backtracking==0 ) {
                    	    			if (terminateParsing) {
                    	    				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    			}
                    	    			if (element == null) {
                    	    				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLogicalImpliesOperationCallExpCS();
                    	    				startIncompleteElement(element);
                    	    			}
                    	    			if (rightArg != null) {
                    	    				if (rightArg != null) {
                    	    					Object value = rightArg;
                    	    					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_IMPLIES_OPERATION_CALL_EXP_CS__TARGET), value);
                    	    					completedElement(value, true);
                    	    				}
                    	    				collectHiddenTokens(element);
                    	    				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_19_0_0_2, rightArg, true);
                    	    				copyLocalizationInfos(rightArg, element);
                    	    			}
                    	    		}

                    	    if ( state.backtracking==0 ) { leftArg = element; /* this may become an argument in the next iteration */ }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt33 >= 1 ) break loop33;
                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                EarlyExitException eee =
                                    new EarlyExitException(33, input);
                                throw eee;
                        }
                        cnt33++;
                    } while (true);


                    }
                    break;
                case 2 :
                    // Ocl.g:5390:21: 
                    {
                    if ( state.backtracking==0 ) { element = leftArg; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 36, parseop_OclExpressionCS_level_4_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parseop_OclExpressionCS_level_4"



    // $ANTLR start "parseop_OclExpressionCS_level_5"
    // Ocl.g:5395:1: parseop_OclExpressionCS_level_5 returns [tudresden.ocl20.pivot.language.ocl.OclExpressionCS element = null] : leftArg= parseop_OclExpressionCS_level_6 ( ( () (a0= XOR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_6 )+ |) ;
    public final tudresden.ocl20.pivot.language.ocl.OclExpressionCS parseop_OclExpressionCS_level_5() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS element =  null;

        int parseop_OclExpressionCS_level_5_StartIndex = input.index();

        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS leftArg =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return element; }

            // Ocl.g:5398:9: (leftArg= parseop_OclExpressionCS_level_6 ( ( () (a0= XOR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_6 )+ |) )
            // Ocl.g:5399:9: leftArg= parseop_OclExpressionCS_level_6 ( ( () (a0= XOR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_6 )+ |)
            {
            pushFollow(FOLLOW_parseop_OclExpressionCS_level_6_in_parseop_OclExpressionCS_level_54625);
            leftArg=parseop_OclExpressionCS_level_6();

            state._fsp--;
            if (state.failed) return element;

            // Ocl.g:5399:42: ( ( () (a0= XOR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_6 )+ |)
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==XOR_OPERATOR) ) {
                int LA36_1 = input.LA(2);

                if ( (synpred42_Ocl()) ) {
                    alt36=1;
                }
                else if ( (true) ) {
                    alt36=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 36, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA36_0==EOF||(LA36_0 >= ADDITIVE_OPERATOR && LA36_0 <= AND_OPERATOR)||(LA36_0 >= EQUALITY_OPERATOR && LA36_0 <= IMPLIES_OPERATOR)||(LA36_0 >= MULT_OPERATOR && LA36_0 <= NEQUALITY_OPERATOR)||LA36_0==OR_OPERATOR||LA36_0==RELATIONAL_OPERATOR||LA36_0==STATIC||(LA36_0 >= 29 && LA36_0 <= 31)||(LA36_0 >= 36 && LA36_0 <= 42)||(LA36_0 >= 44 && LA36_0 <= 46)||(LA36_0 >= 52 && LA36_0 <= 54)||(LA36_0 >= 56 && LA36_0 <= 57)) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;

            }
            switch (alt36) {
                case 1 :
                    // Ocl.g:5399:43: ( () (a0= XOR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_6 )+
                    {
                    // Ocl.g:5399:43: ( () (a0= XOR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_6 )+
                    int cnt35=0;
                    loop35:
                    do {
                        int alt35=2;
                        int LA35_0 = input.LA(1);

                        if ( (LA35_0==XOR_OPERATOR) ) {
                            int LA35_2 = input.LA(2);

                            if ( (synpred41_Ocl()) ) {
                                alt35=1;
                            }


                        }


                        switch (alt35) {
                    	case 1 :
                    	    // Ocl.g:5400:2: () (a0= XOR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_6
                    	    {
                    	    // Ocl.g:5400:2: ()
                    	    // Ocl.g:5400:3: 
                    	    {
                    	    }


                    	    if ( state.backtracking==0 ) { element = null; }

                    	    // Ocl.g:5402:2: (a0= XOR_OPERATOR )
                    	    // Ocl.g:5403:3: a0= XOR_OPERATOR
                    	    {
                    	    a0=(Token)match(input,XOR_OPERATOR,FOLLOW_XOR_OPERATOR_in_parseop_OclExpressionCS_level_54645); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    			if (terminateParsing) {
                    	    				throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    			}
                    	    			if (element == null) {
                    	    				element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLogicalXorOperationCallExpCS();
                    	    				startIncompleteElement(element);
                    	    			}
                    	    			if (a0 != null) {
                    	    				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("XOR_OPERATOR");
                    	    				tokenResolver.setOptions(getOptions());
                    	    				tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    	    				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_XOR_OPERATION_CALL_EXP_CS__OPERATION_NAME), result);
                    	    				Object resolvedObject = result.getResolvedToken();
                    	    				if (resolvedObject == null) {
                    	    					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    	    				}
                    	    				java.lang.String resolved = (java.lang.String) resolvedObject;
                    	    				if (resolved != null) {
                    	    					Object value = resolved;
                    	    					element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_XOR_OPERATION_CALL_EXP_CS__OPERATION_NAME), value);
                    	    					completedElement(value, false);
                    	    				}
                    	    				collectHiddenTokens(element);
                    	    				retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_20_0_0_1, resolved, true);
                    	    				copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    	    			}
                    	    		}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    		// expected elements (follow set)
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1198]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1199]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1200]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1201]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1202]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1203]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1204]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1205]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1206]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1207]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1208]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1209]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1210]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1211]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1212]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1213]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1214]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1215]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1216]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1217]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1218]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1219]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1220]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1221]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1222]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1223]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1224]);
                    	    		addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalXorOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1225]);
                    	    	}

                    	    pushFollow(FOLLOW_parseop_OclExpressionCS_level_6_in_parseop_OclExpressionCS_level_54666);
                    	    rightArg=parseop_OclExpressionCS_level_6();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    		if (terminateParsing) {
                    	    			throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    		}
                    	    		if (element == null) {
                    	    			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLogicalXorOperationCallExpCS();
                    	    			startIncompleteElement(element);
                    	    		}
                    	    		if (leftArg != null) {
                    	    			if (leftArg != null) {
                    	    				Object value = leftArg;
                    	    				element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_XOR_OPERATION_CALL_EXP_CS__SOURCE), value);
                    	    				completedElement(value, true);
                    	    			}
                    	    			collectHiddenTokens(element);
                    	    			retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_20_0_0_0, leftArg, true);
                    	    			copyLocalizationInfos(leftArg, element);
                    	    		}
                    	    	}

                    	    if ( state.backtracking==0 ) {
                    	    		if (terminateParsing) {
                    	    			throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    		}
                    	    		if (element == null) {
                    	    			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLogicalXorOperationCallExpCS();
                    	    			startIncompleteElement(element);
                    	    		}
                    	    		if (rightArg != null) {
                    	    			if (rightArg != null) {
                    	    				Object value = rightArg;
                    	    				element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_XOR_OPERATION_CALL_EXP_CS__TARGET), value);
                    	    				completedElement(value, true);
                    	    			}
                    	    			collectHiddenTokens(element);
                    	    			retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_20_0_0_2, rightArg, true);
                    	    			copyLocalizationInfos(rightArg, element);
                    	    		}
                    	    	}

                    	    if ( state.backtracking==0 ) { leftArg = element; /* this may become an argument in the next iteration */ }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt35 >= 1 ) break loop35;
                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                EarlyExitException eee =
                                    new EarlyExitException(35, input);
                                throw eee;
                        }
                        cnt35++;
                    } while (true);


                    }
                    break;
                case 2 :
                    // Ocl.g:5504:20: 
                    {
                    if ( state.backtracking==0 ) { element = leftArg; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 37, parseop_OclExpressionCS_level_5_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parseop_OclExpressionCS_level_5"



    // $ANTLR start "parseop_OclExpressionCS_level_6"
    // Ocl.g:5509:1: parseop_OclExpressionCS_level_6 returns [tudresden.ocl20.pivot.language.ocl.OclExpressionCS element = null] : leftArg= parseop_OclExpressionCS_level_7 ( ( () (a0= OR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_7 )+ |) ;
    public final tudresden.ocl20.pivot.language.ocl.OclExpressionCS parseop_OclExpressionCS_level_6() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS element =  null;

        int parseop_OclExpressionCS_level_6_StartIndex = input.index();

        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS leftArg =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return element; }

            // Ocl.g:5512:9: (leftArg= parseop_OclExpressionCS_level_7 ( ( () (a0= OR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_7 )+ |) )
            // Ocl.g:5513:9: leftArg= parseop_OclExpressionCS_level_7 ( ( () (a0= OR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_7 )+ |)
            {
            pushFollow(FOLLOW_parseop_OclExpressionCS_level_7_in_parseop_OclExpressionCS_level_64707);
            leftArg=parseop_OclExpressionCS_level_7();

            state._fsp--;
            if (state.failed) return element;

            // Ocl.g:5513:42: ( ( () (a0= OR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_7 )+ |)
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==OR_OPERATOR) ) {
                int LA38_1 = input.LA(2);

                if ( (synpred44_Ocl()) ) {
                    alt38=1;
                }
                else if ( (true) ) {
                    alt38=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 38, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA38_0==EOF||(LA38_0 >= ADDITIVE_OPERATOR && LA38_0 <= AND_OPERATOR)||(LA38_0 >= EQUALITY_OPERATOR && LA38_0 <= IMPLIES_OPERATOR)||(LA38_0 >= MULT_OPERATOR && LA38_0 <= NEQUALITY_OPERATOR)||LA38_0==RELATIONAL_OPERATOR||LA38_0==STATIC||LA38_0==XOR_OPERATOR||(LA38_0 >= 29 && LA38_0 <= 31)||(LA38_0 >= 36 && LA38_0 <= 42)||(LA38_0 >= 44 && LA38_0 <= 46)||(LA38_0 >= 52 && LA38_0 <= 54)||(LA38_0 >= 56 && LA38_0 <= 57)) ) {
                alt38=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;

            }
            switch (alt38) {
                case 1 :
                    // Ocl.g:5513:43: ( () (a0= OR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_7 )+
                    {
                    // Ocl.g:5513:43: ( () (a0= OR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_7 )+
                    int cnt37=0;
                    loop37:
                    do {
                        int alt37=2;
                        int LA37_0 = input.LA(1);

                        if ( (LA37_0==OR_OPERATOR) ) {
                            int LA37_2 = input.LA(2);

                            if ( (synpred43_Ocl()) ) {
                                alt37=1;
                            }


                        }


                        switch (alt37) {
                    	case 1 :
                    	    // Ocl.g:5514:0: () (a0= OR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_7
                    	    {
                    	    // Ocl.g:5514:2: ()
                    	    // Ocl.g:5514:2: 
                    	    {
                    	    }


                    	    if ( state.backtracking==0 ) { element = null; }

                    	    // Ocl.g:5516:2: (a0= OR_OPERATOR )
                    	    // Ocl.g:5517:2: a0= OR_OPERATOR
                    	    {
                    	    a0=(Token)match(input,OR_OPERATOR,FOLLOW_OR_OPERATOR_in_parseop_OclExpressionCS_level_64723); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    		if (terminateParsing) {
                    	    			throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    		}
                    	    		if (element == null) {
                    	    			element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLogicalOrOperationCallExpCS();
                    	    			startIncompleteElement(element);
                    	    		}
                    	    		if (a0 != null) {
                    	    			tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("OR_OPERATOR");
                    	    			tokenResolver.setOptions(getOptions());
                    	    			tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    	    			tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_OR_OPERATION_CALL_EXP_CS__OPERATION_NAME), result);
                    	    			Object resolvedObject = result.getResolvedToken();
                    	    			if (resolvedObject == null) {
                    	    				addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    	    			}
                    	    			java.lang.String resolved = (java.lang.String) resolvedObject;
                    	    			if (resolved != null) {
                    	    				Object value = resolved;
                    	    				element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_OR_OPERATION_CALL_EXP_CS__OPERATION_NAME), value);
                    	    				completedElement(value, false);
                    	    			}
                    	    			collectHiddenTokens(element);
                    	    			retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_21_0_0_1, resolved, true);
                    	    			copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    	    		}
                    	    	}

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    	// expected elements (follow set)
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1226]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1227]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1228]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1229]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1230]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1231]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1232]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1233]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1234]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1235]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1236]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1237]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1238]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1239]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1240]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1241]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1242]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1243]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1244]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1245]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1246]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1247]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1248]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1249]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1250]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1251]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1252]);
                    	    	addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalOrOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1253]);
                    	    }

                    	    pushFollow(FOLLOW_parseop_OclExpressionCS_level_7_in_parseop_OclExpressionCS_level_64738);
                    	    rightArg=parseop_OclExpressionCS_level_7();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    	if (terminateParsing) {
                    	    		throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    	}
                    	    	if (element == null) {
                    	    		element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLogicalOrOperationCallExpCS();
                    	    		startIncompleteElement(element);
                    	    	}
                    	    	if (leftArg != null) {
                    	    		if (leftArg != null) {
                    	    			Object value = leftArg;
                    	    			element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_OR_OPERATION_CALL_EXP_CS__SOURCE), value);
                    	    			completedElement(value, true);
                    	    		}
                    	    		collectHiddenTokens(element);
                    	    		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_21_0_0_0, leftArg, true);
                    	    		copyLocalizationInfos(leftArg, element);
                    	    	}
                    	    }

                    	    if ( state.backtracking==0 ) {
                    	    	if (terminateParsing) {
                    	    		throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    	}
                    	    	if (element == null) {
                    	    		element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLogicalOrOperationCallExpCS();
                    	    		startIncompleteElement(element);
                    	    	}
                    	    	if (rightArg != null) {
                    	    		if (rightArg != null) {
                    	    			Object value = rightArg;
                    	    			element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_OR_OPERATION_CALL_EXP_CS__TARGET), value);
                    	    			completedElement(value, true);
                    	    		}
                    	    		collectHiddenTokens(element);
                    	    		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_21_0_0_2, rightArg, true);
                    	    		copyLocalizationInfos(rightArg, element);
                    	    	}
                    	    }

                    	    if ( state.backtracking==0 ) { leftArg = element; /* this may become an argument in the next iteration */ }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt37 >= 1 ) break loop37;
                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                EarlyExitException eee =
                                    new EarlyExitException(37, input);
                                throw eee;
                        }
                        cnt37++;
                    } while (true);


                    }
                    break;
                case 2 :
                    // Ocl.g:5618:20: 
                    {
                    if ( state.backtracking==0 ) { element = leftArg; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 38, parseop_OclExpressionCS_level_6_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parseop_OclExpressionCS_level_6"



    // $ANTLR start "parseop_OclExpressionCS_level_7"
    // Ocl.g:5623:1: parseop_OclExpressionCS_level_7 returns [tudresden.ocl20.pivot.language.ocl.OclExpressionCS element = null] : leftArg= parseop_OclExpressionCS_level_8 ( ( () (a0= AND_OPERATOR ) rightArg= parseop_OclExpressionCS_level_8 )+ |) ;
    public final tudresden.ocl20.pivot.language.ocl.OclExpressionCS parseop_OclExpressionCS_level_7() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS element =  null;

        int parseop_OclExpressionCS_level_7_StartIndex = input.index();

        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS leftArg =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return element; }

            // Ocl.g:5626:9: (leftArg= parseop_OclExpressionCS_level_8 ( ( () (a0= AND_OPERATOR ) rightArg= parseop_OclExpressionCS_level_8 )+ |) )
            // Ocl.g:5627:9: leftArg= parseop_OclExpressionCS_level_8 ( ( () (a0= AND_OPERATOR ) rightArg= parseop_OclExpressionCS_level_8 )+ |)
            {
            pushFollow(FOLLOW_parseop_OclExpressionCS_level_8_in_parseop_OclExpressionCS_level_74776);
            leftArg=parseop_OclExpressionCS_level_8();

            state._fsp--;
            if (state.failed) return element;

            // Ocl.g:5627:42: ( ( () (a0= AND_OPERATOR ) rightArg= parseop_OclExpressionCS_level_8 )+ |)
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==AND_OPERATOR) ) {
                int LA40_1 = input.LA(2);

                if ( (synpred46_Ocl()) ) {
                    alt40=1;
                }
                else if ( (true) ) {
                    alt40=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 40, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA40_0==EOF||LA40_0==ADDITIVE_OPERATOR||(LA40_0 >= EQUALITY_OPERATOR && LA40_0 <= IMPLIES_OPERATOR)||(LA40_0 >= MULT_OPERATOR && LA40_0 <= NEQUALITY_OPERATOR)||LA40_0==OR_OPERATOR||LA40_0==RELATIONAL_OPERATOR||LA40_0==STATIC||LA40_0==XOR_OPERATOR||(LA40_0 >= 29 && LA40_0 <= 31)||(LA40_0 >= 36 && LA40_0 <= 42)||(LA40_0 >= 44 && LA40_0 <= 46)||(LA40_0 >= 52 && LA40_0 <= 54)||(LA40_0 >= 56 && LA40_0 <= 57)) ) {
                alt40=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 40, 0, input);

                throw nvae;

            }
            switch (alt40) {
                case 1 :
                    // Ocl.g:5627:43: ( () (a0= AND_OPERATOR ) rightArg= parseop_OclExpressionCS_level_8 )+
                    {
                    // Ocl.g:5627:43: ( () (a0= AND_OPERATOR ) rightArg= parseop_OclExpressionCS_level_8 )+
                    int cnt39=0;
                    loop39:
                    do {
                        int alt39=2;
                        int LA39_0 = input.LA(1);

                        if ( (LA39_0==AND_OPERATOR) ) {
                            int LA39_2 = input.LA(2);

                            if ( (synpred45_Ocl()) ) {
                                alt39=1;
                            }


                        }


                        switch (alt39) {
                    	case 1 :
                    	    // Ocl.g:5628:0: () (a0= AND_OPERATOR ) rightArg= parseop_OclExpressionCS_level_8
                    	    {
                    	    // Ocl.g:5628:2: ()
                    	    // Ocl.g:5628:2: 
                    	    {
                    	    }


                    	    if ( state.backtracking==0 ) { element = null; }

                    	    // Ocl.g:5630:4: (a0= AND_OPERATOR )
                    	    // Ocl.g:5631:4: a0= AND_OPERATOR
                    	    {
                    	    a0=(Token)match(input,AND_OPERATOR,FOLLOW_AND_OPERATOR_in_parseop_OclExpressionCS_level_74791); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    	if (terminateParsing) {
                    	    		throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    	}
                    	    	if (element == null) {
                    	    		element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLogicalAndOperationCallExpCS();
                    	    		startIncompleteElement(element);
                    	    	}
                    	    	if (a0 != null) {
                    	    		tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("AND_OPERATOR");
                    	    		tokenResolver.setOptions(getOptions());
                    	    		tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    	    		tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_AND_OPERATION_CALL_EXP_CS__OPERATION_NAME), result);
                    	    		Object resolvedObject = result.getResolvedToken();
                    	    		if (resolvedObject == null) {
                    	    			addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    	    		}
                    	    		java.lang.String resolved = (java.lang.String) resolvedObject;
                    	    		if (resolved != null) {
                    	    			Object value = resolved;
                    	    			element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_AND_OPERATION_CALL_EXP_CS__OPERATION_NAME), value);
                    	    			completedElement(value, false);
                    	    		}
                    	    		collectHiddenTokens(element);
                    	    		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_22_0_0_1, resolved, true);
                    	    		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    	    	}
                    	    }

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    // expected elements (follow set)
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1254]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1255]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1256]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1257]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1258]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1259]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1260]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1261]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1262]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1263]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1264]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1265]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1266]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1267]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1268]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1269]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1270]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1271]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1272]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1273]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1274]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1275]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1276]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1277]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1278]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1279]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1280]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalAndOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1281]);
                    	    }

                    	    pushFollow(FOLLOW_parseop_OclExpressionCS_level_8_in_parseop_OclExpressionCS_level_74804);
                    	    rightArg=parseop_OclExpressionCS_level_8();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    	throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    	element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLogicalAndOperationCallExpCS();
                    	    	startIncompleteElement(element);
                    	    }
                    	    if (leftArg != null) {
                    	    	if (leftArg != null) {
                    	    		Object value = leftArg;
                    	    		element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_AND_OPERATION_CALL_EXP_CS__SOURCE), value);
                    	    		completedElement(value, true);
                    	    	}
                    	    	collectHiddenTokens(element);
                    	    	retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_22_0_0_0, leftArg, true);
                    	    	copyLocalizationInfos(leftArg, element);
                    	    }
                    	    }

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    	throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    	element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLogicalAndOperationCallExpCS();
                    	    	startIncompleteElement(element);
                    	    }
                    	    if (rightArg != null) {
                    	    	if (rightArg != null) {
                    	    		Object value = rightArg;
                    	    		element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_AND_OPERATION_CALL_EXP_CS__TARGET), value);
                    	    		completedElement(value, true);
                    	    	}
                    	    	collectHiddenTokens(element);
                    	    	retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_22_0_0_2, rightArg, true);
                    	    	copyLocalizationInfos(rightArg, element);
                    	    }
                    	    }

                    	    if ( state.backtracking==0 ) { leftArg = element; /* this may become an argument in the next iteration */ }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt39 >= 1 ) break loop39;
                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                EarlyExitException eee =
                                    new EarlyExitException(39, input);
                                throw eee;
                        }
                        cnt39++;
                    } while (true);


                    }
                    break;
                case 2 :
                    // Ocl.g:5732:20: 
                    {
                    if ( state.backtracking==0 ) { element = leftArg; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 39, parseop_OclExpressionCS_level_7_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parseop_OclExpressionCS_level_7"



    // $ANTLR start "parseop_OclExpressionCS_level_8"
    // Ocl.g:5737:1: parseop_OclExpressionCS_level_8 returns [tudresden.ocl20.pivot.language.ocl.OclExpressionCS element = null] : leftArg= parseop_OclExpressionCS_level_9 ( ( () ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) ) rightArg= parseop_OclExpressionCS_level_9 )+ |) ;
    public final tudresden.ocl20.pivot.language.ocl.OclExpressionCS parseop_OclExpressionCS_level_8() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS element =  null;

        int parseop_OclExpressionCS_level_8_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS leftArg =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return element; }

            // Ocl.g:5740:9: (leftArg= parseop_OclExpressionCS_level_9 ( ( () ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) ) rightArg= parseop_OclExpressionCS_level_9 )+ |) )
            // Ocl.g:5741:9: leftArg= parseop_OclExpressionCS_level_9 ( ( () ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) ) rightArg= parseop_OclExpressionCS_level_9 )+ |)
            {
            pushFollow(FOLLOW_parseop_OclExpressionCS_level_9_in_parseop_OclExpressionCS_level_84842);
            leftArg=parseop_OclExpressionCS_level_9();

            state._fsp--;
            if (state.failed) return element;

            // Ocl.g:5741:42: ( ( () ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) ) rightArg= parseop_OclExpressionCS_level_9 )+ |)
            int alt43=2;
            switch ( input.LA(1) ) {
            case EQUALITY_OPERATOR:
                {
                int LA43_1 = input.LA(2);

                if ( (synpred49_Ocl()) ) {
                    alt43=1;
                }
                else if ( (true) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 1, input);

                    throw nvae;

                }
                }
                break;
            case NEQUALITY_OPERATOR:
                {
                int LA43_2 = input.LA(2);

                if ( (synpred49_Ocl()) ) {
                    alt43=1;
                }
                else if ( (true) ) {
                    alt43=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 43, 2, input);

                    throw nvae;

                }
                }
                break;
            case EOF:
            case ADDITIVE_OPERATOR:
            case AND_OPERATOR:
            case IMPLIES_OPERATOR:
            case MULT_OPERATOR:
            case NAVIGATION_OPERATOR:
            case OR_OPERATOR:
            case RELATIONAL_OPERATOR:
            case STATIC:
            case XOR_OPERATOR:
            case 29:
            case 30:
            case 31:
            case 36:
            case 37:
            case 38:
            case 39:
            case 40:
            case 41:
            case 42:
            case 44:
            case 45:
            case 46:
            case 52:
            case 53:
            case 54:
            case 56:
            case 57:
                {
                alt43=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 43, 0, input);

                throw nvae;

            }

            switch (alt43) {
                case 1 :
                    // Ocl.g:5741:43: ( () ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) ) rightArg= parseop_OclExpressionCS_level_9 )+
                    {
                    // Ocl.g:5741:43: ( () ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) ) rightArg= parseop_OclExpressionCS_level_9 )+
                    int cnt42=0;
                    loop42:
                    do {
                        int alt42=2;
                        int LA42_0 = input.LA(1);

                        if ( (LA42_0==EQUALITY_OPERATOR) ) {
                            int LA42_2 = input.LA(2);

                            if ( (synpred48_Ocl()) ) {
                                alt42=1;
                            }


                        }
                        else if ( (LA42_0==NEQUALITY_OPERATOR) ) {
                            int LA42_3 = input.LA(2);

                            if ( (synpred48_Ocl()) ) {
                                alt42=1;
                            }


                        }


                        switch (alt42) {
                    	case 1 :
                    	    // Ocl.g:5742:0: () ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) ) rightArg= parseop_OclExpressionCS_level_9
                    	    {
                    	    // Ocl.g:5742:2: ()
                    	    // Ocl.g:5742:2: 
                    	    {
                    	    }


                    	    if ( state.backtracking==0 ) { element = null; }

                    	    // Ocl.g:5744:0: ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) )
                    	    int alt41=2;
                    	    int LA41_0 = input.LA(1);

                    	    if ( (LA41_0==EQUALITY_OPERATOR) ) {
                    	        alt41=1;
                    	    }
                    	    else if ( (LA41_0==NEQUALITY_OPERATOR) ) {
                    	        alt41=2;
                    	    }
                    	    else {
                    	        if (state.backtracking>0) {state.failed=true; return element;}
                    	        NoViableAltException nvae =
                    	            new NoViableAltException("", 41, 0, input);

                    	        throw nvae;

                    	    }
                    	    switch (alt41) {
                    	        case 1 :
                    	            // Ocl.g:5745:0: (a0= EQUALITY_OPERATOR )
                    	            {
                    	            // Ocl.g:5745:4: (a0= EQUALITY_OPERATOR )
                    	            // Ocl.g:5746:4: a0= EQUALITY_OPERATOR
                    	            {
                    	            a0=(Token)match(input,EQUALITY_OPERATOR,FOLLOW_EQUALITY_OPERATOR_in_parseop_OclExpressionCS_level_84859); if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            	if (terminateParsing) {
                    	            		throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	            	}
                    	            	if (element == null) {
                    	            		element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createEqualityOperationCallExpCS();
                    	            		startIncompleteElement(element);
                    	            	}
                    	            	if (a0 != null) {
                    	            		tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("EQUALITY_OPERATOR");
                    	            		tokenResolver.setOptions(getOptions());
                    	            		tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    	            		tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.EQUALITY_OPERATION_CALL_EXP_CS__OPERATION_NAME), result);
                    	            		Object resolvedObject = result.getResolvedToken();
                    	            		if (resolvedObject == null) {
                    	            			addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    	            		}
                    	            		java.lang.String resolved = (java.lang.String) resolvedObject;
                    	            		if (resolved != null) {
                    	            			Object value = resolved;
                    	            			element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.EQUALITY_OPERATION_CALL_EXP_CS__OPERATION_NAME), value);
                    	            			completedElement(value, false);
                    	            		}
                    	            		collectHiddenTokens(element);
                    	            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_23_0_0_1_0_0_0, resolved, true);
                    	            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    	            	}
                    	            }

                    	            }


                    	            if ( state.backtracking==0 ) {
                    	            // expected elements (follow set)
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1282]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1283]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1284]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1285]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1286]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1287]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1288]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1289]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1290]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1291]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1292]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1293]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1294]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1295]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1296]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1297]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1298]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1299]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1300]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1301]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1302]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1303]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1304]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1305]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1306]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1307]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1308]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1309]);
                    	            }

                    	            }
                    	            break;
                    	        case 2 :
                    	            // Ocl.g:5809:2: (a1= NEQUALITY_OPERATOR )
                    	            {
                    	            // Ocl.g:5809:2: (a1= NEQUALITY_OPERATOR )
                    	            // Ocl.g:5810:4: a1= NEQUALITY_OPERATOR
                    	            {
                    	            a1=(Token)match(input,NEQUALITY_OPERATOR,FOLLOW_NEQUALITY_OPERATOR_in_parseop_OclExpressionCS_level_84876); if (state.failed) return element;

                    	            if ( state.backtracking==0 ) {
                    	            	if (terminateParsing) {
                    	            		throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	            	}
                    	            	if (element == null) {
                    	            		element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createEqualityOperationCallExpCS();
                    	            		startIncompleteElement(element);
                    	            	}
                    	            	if (a1 != null) {
                    	            		tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NEQUALITY_OPERATOR");
                    	            		tokenResolver.setOptions(getOptions());
                    	            		tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    	            		tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.EQUALITY_OPERATION_CALL_EXP_CS__OPERATION_NAME), result);
                    	            		Object resolvedObject = result.getResolvedToken();
                    	            		if (resolvedObject == null) {
                    	            			addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
                    	            		}
                    	            		java.lang.String resolved = (java.lang.String) resolvedObject;
                    	            		if (resolved != null) {
                    	            			Object value = resolved;
                    	            			element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.EQUALITY_OPERATION_CALL_EXP_CS__OPERATION_NAME), value);
                    	            			completedElement(value, false);
                    	            		}
                    	            		collectHiddenTokens(element);
                    	            		retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_23_0_0_1_0_1_0, resolved, true);
                    	            		copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
                    	            	}
                    	            }

                    	            }


                    	            if ( state.backtracking==0 ) {
                    	            // expected elements (follow set)
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1310]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1311]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1312]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1313]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1314]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1315]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1316]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1317]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1318]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1319]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1320]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1321]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1322]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1323]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1324]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1325]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1326]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1327]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1328]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1329]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1330]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1331]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1332]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1333]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1334]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1335]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1336]);
                    	            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1337]);
                    	            }

                    	            }
                    	            break;

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    // expected elements (follow set)
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1338]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1339]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1340]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1341]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1342]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1343]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1344]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1345]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1346]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1347]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1348]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1349]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1350]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1351]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1352]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1353]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1354]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1355]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1356]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1357]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1358]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1359]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1360]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1361]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1362]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1363]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1364]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getEqualityOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1365]);
                    	    }

                    	    pushFollow(FOLLOW_parseop_OclExpressionCS_level_9_in_parseop_OclExpressionCS_level_84894);
                    	    rightArg=parseop_OclExpressionCS_level_9();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createEqualityOperationCallExpCS();
                    	    startIncompleteElement(element);
                    	    }
                    	    if (leftArg != null) {
                    	    if (leftArg != null) {
                    	    	Object value = leftArg;
                    	    	element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.EQUALITY_OPERATION_CALL_EXP_CS__SOURCE), value);
                    	    	completedElement(value, true);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_23_0_0_0, leftArg, true);
                    	    copyLocalizationInfos(leftArg, element);
                    	    }
                    	    }

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createEqualityOperationCallExpCS();
                    	    startIncompleteElement(element);
                    	    }
                    	    if (rightArg != null) {
                    	    if (rightArg != null) {
                    	    	Object value = rightArg;
                    	    	element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.EQUALITY_OPERATION_CALL_EXP_CS__TARGET), value);
                    	    	completedElement(value, true);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_23_0_0_2, rightArg, true);
                    	    copyLocalizationInfos(rightArg, element);
                    	    }
                    	    }

                    	    if ( state.backtracking==0 ) { leftArg = element; /* this may become an argument in the next iteration */ }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt42 >= 1 ) break loop42;
                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                EarlyExitException eee =
                                    new EarlyExitException(42, input);
                                throw eee;
                        }
                        cnt42++;
                    } while (true);


                    }
                    break;
                case 2 :
                    // Ocl.g:5944:20: 
                    {
                    if ( state.backtracking==0 ) { element = leftArg; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 40, parseop_OclExpressionCS_level_8_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parseop_OclExpressionCS_level_8"



    // $ANTLR start "parseop_OclExpressionCS_level_9"
    // Ocl.g:5949:1: parseop_OclExpressionCS_level_9 returns [tudresden.ocl20.pivot.language.ocl.OclExpressionCS element = null] : leftArg= parseop_OclExpressionCS_level_11 ( ( () (a0= RELATIONAL_OPERATOR ) rightArg= parseop_OclExpressionCS_level_11 )+ |) ;
    public final tudresden.ocl20.pivot.language.ocl.OclExpressionCS parseop_OclExpressionCS_level_9() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS element =  null;

        int parseop_OclExpressionCS_level_9_StartIndex = input.index();

        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS leftArg =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return element; }

            // Ocl.g:5952:9: (leftArg= parseop_OclExpressionCS_level_11 ( ( () (a0= RELATIONAL_OPERATOR ) rightArg= parseop_OclExpressionCS_level_11 )+ |) )
            // Ocl.g:5953:9: leftArg= parseop_OclExpressionCS_level_11 ( ( () (a0= RELATIONAL_OPERATOR ) rightArg= parseop_OclExpressionCS_level_11 )+ |)
            {
            pushFollow(FOLLOW_parseop_OclExpressionCS_level_11_in_parseop_OclExpressionCS_level_94932);
            leftArg=parseop_OclExpressionCS_level_11();

            state._fsp--;
            if (state.failed) return element;

            // Ocl.g:5953:43: ( ( () (a0= RELATIONAL_OPERATOR ) rightArg= parseop_OclExpressionCS_level_11 )+ |)
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==RELATIONAL_OPERATOR) ) {
                int LA45_1 = input.LA(2);

                if ( (synpred51_Ocl()) ) {
                    alt45=1;
                }
                else if ( (true) ) {
                    alt45=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 45, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA45_0==EOF||(LA45_0 >= ADDITIVE_OPERATOR && LA45_0 <= AND_OPERATOR)||(LA45_0 >= EQUALITY_OPERATOR && LA45_0 <= IMPLIES_OPERATOR)||(LA45_0 >= MULT_OPERATOR && LA45_0 <= NEQUALITY_OPERATOR)||LA45_0==OR_OPERATOR||LA45_0==STATIC||LA45_0==XOR_OPERATOR||(LA45_0 >= 29 && LA45_0 <= 31)||(LA45_0 >= 36 && LA45_0 <= 42)||(LA45_0 >= 44 && LA45_0 <= 46)||(LA45_0 >= 52 && LA45_0 <= 54)||(LA45_0 >= 56 && LA45_0 <= 57)) ) {
                alt45=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 45, 0, input);

                throw nvae;

            }
            switch (alt45) {
                case 1 :
                    // Ocl.g:5953:44: ( () (a0= RELATIONAL_OPERATOR ) rightArg= parseop_OclExpressionCS_level_11 )+
                    {
                    // Ocl.g:5953:44: ( () (a0= RELATIONAL_OPERATOR ) rightArg= parseop_OclExpressionCS_level_11 )+
                    int cnt44=0;
                    loop44:
                    do {
                        int alt44=2;
                        int LA44_0 = input.LA(1);

                        if ( (LA44_0==RELATIONAL_OPERATOR) ) {
                            int LA44_2 = input.LA(2);

                            if ( (synpred50_Ocl()) ) {
                                alt44=1;
                            }


                        }


                        switch (alt44) {
                    	case 1 :
                    	    // Ocl.g:5954:0: () (a0= RELATIONAL_OPERATOR ) rightArg= parseop_OclExpressionCS_level_11
                    	    {
                    	    // Ocl.g:5954:2: ()
                    	    // Ocl.g:5954:2: 
                    	    {
                    	    }


                    	    if ( state.backtracking==0 ) { element = null; }

                    	    // Ocl.g:5956:4: (a0= RELATIONAL_OPERATOR )
                    	    // Ocl.g:5957:4: a0= RELATIONAL_OPERATOR
                    	    {
                    	    a0=(Token)match(input,RELATIONAL_OPERATOR,FOLLOW_RELATIONAL_OPERATOR_in_parseop_OclExpressionCS_level_94947); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createRelationalOperationCallExpCS();
                    	    startIncompleteElement(element);
                    	    }
                    	    if (a0 != null) {
                    	    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("RELATIONAL_OPERATOR");
                    	    tokenResolver.setOptions(getOptions());
                    	    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    	    tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.RELATIONAL_OPERATION_CALL_EXP_CS__OPERATION_NAME), result);
                    	    Object resolvedObject = result.getResolvedToken();
                    	    if (resolvedObject == null) {
                    	    	addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    	    }
                    	    java.lang.String resolved = (java.lang.String) resolvedObject;
                    	    if (resolved != null) {
                    	    	Object value = resolved;
                    	    	element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.RELATIONAL_OPERATION_CALL_EXP_CS__OPERATION_NAME), value);
                    	    	completedElement(value, false);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_24_0_0_1, resolved, true);
                    	    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    	    }
                    	    }

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    // expected elements (follow set)
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1366]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1367]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1368]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1369]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1370]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1371]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1372]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1373]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1374]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1375]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1376]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1377]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1378]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1379]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1380]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1381]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1382]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1383]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1384]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1385]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1386]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1387]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1388]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1389]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1390]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1391]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1392]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getRelationalOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1393]);
                    	    }

                    	    pushFollow(FOLLOW_parseop_OclExpressionCS_level_11_in_parseop_OclExpressionCS_level_94960);
                    	    rightArg=parseop_OclExpressionCS_level_11();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createRelationalOperationCallExpCS();
                    	    startIncompleteElement(element);
                    	    }
                    	    if (leftArg != null) {
                    	    if (leftArg != null) {
                    	    Object value = leftArg;
                    	    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.RELATIONAL_OPERATION_CALL_EXP_CS__SOURCE), value);
                    	    completedElement(value, true);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_24_0_0_0, leftArg, true);
                    	    copyLocalizationInfos(leftArg, element);
                    	    }
                    	    }

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createRelationalOperationCallExpCS();
                    	    startIncompleteElement(element);
                    	    }
                    	    if (rightArg != null) {
                    	    if (rightArg != null) {
                    	    Object value = rightArg;
                    	    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.RELATIONAL_OPERATION_CALL_EXP_CS__TARGET), value);
                    	    completedElement(value, true);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_24_0_0_2, rightArg, true);
                    	    copyLocalizationInfos(rightArg, element);
                    	    }
                    	    }

                    	    if ( state.backtracking==0 ) { leftArg = element; /* this may become an argument in the next iteration */ }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt44 >= 1 ) break loop44;
                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                EarlyExitException eee =
                                    new EarlyExitException(44, input);
                                throw eee;
                        }
                        cnt44++;
                    } while (true);


                    }
                    break;
                case 2 :
                    // Ocl.g:6058:20: 
                    {
                    if ( state.backtracking==0 ) { element = leftArg; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 41, parseop_OclExpressionCS_level_9_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parseop_OclExpressionCS_level_9"



    // $ANTLR start "parseop_OclExpressionCS_level_11"
    // Ocl.g:6063:1: parseop_OclExpressionCS_level_11 returns [tudresden.ocl20.pivot.language.ocl.OclExpressionCS element = null] : leftArg= parseop_OclExpressionCS_level_12 ( ( () (a0= ADDITIVE_OPERATOR ) rightArg= parseop_OclExpressionCS_level_12 )+ |) ;
    public final tudresden.ocl20.pivot.language.ocl.OclExpressionCS parseop_OclExpressionCS_level_11() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS element =  null;

        int parseop_OclExpressionCS_level_11_StartIndex = input.index();

        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS leftArg =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return element; }

            // Ocl.g:6066:9: (leftArg= parseop_OclExpressionCS_level_12 ( ( () (a0= ADDITIVE_OPERATOR ) rightArg= parseop_OclExpressionCS_level_12 )+ |) )
            // Ocl.g:6067:9: leftArg= parseop_OclExpressionCS_level_12 ( ( () (a0= ADDITIVE_OPERATOR ) rightArg= parseop_OclExpressionCS_level_12 )+ |)
            {
            pushFollow(FOLLOW_parseop_OclExpressionCS_level_12_in_parseop_OclExpressionCS_level_114998);
            leftArg=parseop_OclExpressionCS_level_12();

            state._fsp--;
            if (state.failed) return element;

            // Ocl.g:6067:43: ( ( () (a0= ADDITIVE_OPERATOR ) rightArg= parseop_OclExpressionCS_level_12 )+ |)
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==ADDITIVE_OPERATOR) ) {
                int LA47_1 = input.LA(2);

                if ( (synpred53_Ocl()) ) {
                    alt47=1;
                }
                else if ( (true) ) {
                    alt47=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 47, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA47_0==EOF||LA47_0==AND_OPERATOR||(LA47_0 >= EQUALITY_OPERATOR && LA47_0 <= IMPLIES_OPERATOR)||(LA47_0 >= MULT_OPERATOR && LA47_0 <= NEQUALITY_OPERATOR)||LA47_0==OR_OPERATOR||LA47_0==RELATIONAL_OPERATOR||LA47_0==STATIC||LA47_0==XOR_OPERATOR||(LA47_0 >= 29 && LA47_0 <= 31)||(LA47_0 >= 36 && LA47_0 <= 42)||(LA47_0 >= 44 && LA47_0 <= 46)||(LA47_0 >= 52 && LA47_0 <= 54)||(LA47_0 >= 56 && LA47_0 <= 57)) ) {
                alt47=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 47, 0, input);

                throw nvae;

            }
            switch (alt47) {
                case 1 :
                    // Ocl.g:6067:44: ( () (a0= ADDITIVE_OPERATOR ) rightArg= parseop_OclExpressionCS_level_12 )+
                    {
                    // Ocl.g:6067:44: ( () (a0= ADDITIVE_OPERATOR ) rightArg= parseop_OclExpressionCS_level_12 )+
                    int cnt46=0;
                    loop46:
                    do {
                        int alt46=2;
                        int LA46_0 = input.LA(1);

                        if ( (LA46_0==ADDITIVE_OPERATOR) ) {
                            int LA46_2 = input.LA(2);

                            if ( (synpred52_Ocl()) ) {
                                alt46=1;
                            }


                        }


                        switch (alt46) {
                    	case 1 :
                    	    // Ocl.g:6068:0: () (a0= ADDITIVE_OPERATOR ) rightArg= parseop_OclExpressionCS_level_12
                    	    {
                    	    // Ocl.g:6068:2: ()
                    	    // Ocl.g:6068:2: 
                    	    {
                    	    }


                    	    if ( state.backtracking==0 ) { element = null; }

                    	    // Ocl.g:6070:4: (a0= ADDITIVE_OPERATOR )
                    	    // Ocl.g:6071:4: a0= ADDITIVE_OPERATOR
                    	    {
                    	    a0=(Token)match(input,ADDITIVE_OPERATOR,FOLLOW_ADDITIVE_OPERATOR_in_parseop_OclExpressionCS_level_115013); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createAdditiveOperationCallExpCS();
                    	    startIncompleteElement(element);
                    	    }
                    	    if (a0 != null) {
                    	    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("ADDITIVE_OPERATOR");
                    	    tokenResolver.setOptions(getOptions());
                    	    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    	    tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ADDITIVE_OPERATION_CALL_EXP_CS__OPERATION_NAME), result);
                    	    Object resolvedObject = result.getResolvedToken();
                    	    if (resolvedObject == null) {
                    	    addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    	    }
                    	    java.lang.String resolved = (java.lang.String) resolvedObject;
                    	    if (resolved != null) {
                    	    Object value = resolved;
                    	    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ADDITIVE_OPERATION_CALL_EXP_CS__OPERATION_NAME), value);
                    	    completedElement(value, false);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_25_0_0_1, resolved, true);
                    	    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    	    }
                    	    }

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    // expected elements (follow set)
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1394]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1395]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1396]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1397]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1398]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1399]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1400]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1401]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1402]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1403]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1404]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1405]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1406]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1407]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1408]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1409]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1410]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1411]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1412]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1413]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1414]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1415]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1416]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1417]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1418]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1419]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1420]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAdditiveOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1421]);
                    	    }

                    	    pushFollow(FOLLOW_parseop_OclExpressionCS_level_12_in_parseop_OclExpressionCS_level_115026);
                    	    rightArg=parseop_OclExpressionCS_level_12();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createAdditiveOperationCallExpCS();
                    	    startIncompleteElement(element);
                    	    }
                    	    if (leftArg != null) {
                    	    if (leftArg != null) {
                    	    Object value = leftArg;
                    	    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ADDITIVE_OPERATION_CALL_EXP_CS__SOURCE), value);
                    	    completedElement(value, true);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_25_0_0_0, leftArg, true);
                    	    copyLocalizationInfos(leftArg, element);
                    	    }
                    	    }

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createAdditiveOperationCallExpCS();
                    	    startIncompleteElement(element);
                    	    }
                    	    if (rightArg != null) {
                    	    if (rightArg != null) {
                    	    Object value = rightArg;
                    	    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ADDITIVE_OPERATION_CALL_EXP_CS__TARGET), value);
                    	    completedElement(value, true);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_25_0_0_2, rightArg, true);
                    	    copyLocalizationInfos(rightArg, element);
                    	    }
                    	    }

                    	    if ( state.backtracking==0 ) { leftArg = element; /* this may become an argument in the next iteration */ }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt46 >= 1 ) break loop46;
                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                EarlyExitException eee =
                                    new EarlyExitException(46, input);
                                throw eee;
                        }
                        cnt46++;
                    } while (true);


                    }
                    break;
                case 2 :
                    // Ocl.g:6172:20: 
                    {
                    if ( state.backtracking==0 ) { element = leftArg; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 42, parseop_OclExpressionCS_level_11_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parseop_OclExpressionCS_level_11"



    // $ANTLR start "parseop_OclExpressionCS_level_12"
    // Ocl.g:6177:1: parseop_OclExpressionCS_level_12 returns [tudresden.ocl20.pivot.language.ocl.OclExpressionCS element = null] : leftArg= parseop_OclExpressionCS_level_13 ( ( () (a0= MULT_OPERATOR ) rightArg= parseop_OclExpressionCS_level_13 )+ |) ;
    public final tudresden.ocl20.pivot.language.ocl.OclExpressionCS parseop_OclExpressionCS_level_12() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS element =  null;

        int parseop_OclExpressionCS_level_12_StartIndex = input.index();

        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS leftArg =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return element; }

            // Ocl.g:6180:9: (leftArg= parseop_OclExpressionCS_level_13 ( ( () (a0= MULT_OPERATOR ) rightArg= parseop_OclExpressionCS_level_13 )+ |) )
            // Ocl.g:6181:9: leftArg= parseop_OclExpressionCS_level_13 ( ( () (a0= MULT_OPERATOR ) rightArg= parseop_OclExpressionCS_level_13 )+ |)
            {
            pushFollow(FOLLOW_parseop_OclExpressionCS_level_13_in_parseop_OclExpressionCS_level_125064);
            leftArg=parseop_OclExpressionCS_level_13();

            state._fsp--;
            if (state.failed) return element;

            // Ocl.g:6181:43: ( ( () (a0= MULT_OPERATOR ) rightArg= parseop_OclExpressionCS_level_13 )+ |)
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==MULT_OPERATOR) ) {
                int LA49_1 = input.LA(2);

                if ( (synpred55_Ocl()) ) {
                    alt49=1;
                }
                else if ( (true) ) {
                    alt49=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 49, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA49_0==EOF||(LA49_0 >= ADDITIVE_OPERATOR && LA49_0 <= AND_OPERATOR)||(LA49_0 >= EQUALITY_OPERATOR && LA49_0 <= IMPLIES_OPERATOR)||(LA49_0 >= NAVIGATION_OPERATOR && LA49_0 <= NEQUALITY_OPERATOR)||LA49_0==OR_OPERATOR||LA49_0==RELATIONAL_OPERATOR||LA49_0==STATIC||LA49_0==XOR_OPERATOR||(LA49_0 >= 29 && LA49_0 <= 31)||(LA49_0 >= 36 && LA49_0 <= 42)||(LA49_0 >= 44 && LA49_0 <= 46)||(LA49_0 >= 52 && LA49_0 <= 54)||(LA49_0 >= 56 && LA49_0 <= 57)) ) {
                alt49=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 49, 0, input);

                throw nvae;

            }
            switch (alt49) {
                case 1 :
                    // Ocl.g:6181:44: ( () (a0= MULT_OPERATOR ) rightArg= parseop_OclExpressionCS_level_13 )+
                    {
                    // Ocl.g:6181:44: ( () (a0= MULT_OPERATOR ) rightArg= parseop_OclExpressionCS_level_13 )+
                    int cnt48=0;
                    loop48:
                    do {
                        int alt48=2;
                        int LA48_0 = input.LA(1);

                        if ( (LA48_0==MULT_OPERATOR) ) {
                            int LA48_2 = input.LA(2);

                            if ( (synpred54_Ocl()) ) {
                                alt48=1;
                            }


                        }


                        switch (alt48) {
                    	case 1 :
                    	    // Ocl.g:6182:0: () (a0= MULT_OPERATOR ) rightArg= parseop_OclExpressionCS_level_13
                    	    {
                    	    // Ocl.g:6182:2: ()
                    	    // Ocl.g:6182:2: 
                    	    {
                    	    }


                    	    if ( state.backtracking==0 ) { element = null; }

                    	    // Ocl.g:6184:4: (a0= MULT_OPERATOR )
                    	    // Ocl.g:6185:4: a0= MULT_OPERATOR
                    	    {
                    	    a0=(Token)match(input,MULT_OPERATOR,FOLLOW_MULT_OPERATOR_in_parseop_OclExpressionCS_level_125079); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createMultOperationCallExpCS();
                    	    startIncompleteElement(element);
                    	    }
                    	    if (a0 != null) {
                    	    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("MULT_OPERATOR");
                    	    tokenResolver.setOptions(getOptions());
                    	    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    	    tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.MULT_OPERATION_CALL_EXP_CS__OPERATION_NAME), result);
                    	    Object resolvedObject = result.getResolvedToken();
                    	    if (resolvedObject == null) {
                    	    addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    	    }
                    	    java.lang.String resolved = (java.lang.String) resolvedObject;
                    	    if (resolved != null) {
                    	    Object value = resolved;
                    	    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.MULT_OPERATION_CALL_EXP_CS__OPERATION_NAME), value);
                    	    completedElement(value, false);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_26_0_0_1, resolved, true);
                    	    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    	    }
                    	    }

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    // expected elements (follow set)
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1422]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1423]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1424]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1425]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1426]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1427]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1428]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1429]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1430]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1431]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1432]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1433]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1434]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1435]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1436]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1437]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1438]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1439]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1440]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1441]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1442]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1443]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1444]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1445]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1446]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1447]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1448]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getMultOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1449]);
                    	    }

                    	    pushFollow(FOLLOW_parseop_OclExpressionCS_level_13_in_parseop_OclExpressionCS_level_125092);
                    	    rightArg=parseop_OclExpressionCS_level_13();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createMultOperationCallExpCS();
                    	    startIncompleteElement(element);
                    	    }
                    	    if (leftArg != null) {
                    	    if (leftArg != null) {
                    	    Object value = leftArg;
                    	    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.MULT_OPERATION_CALL_EXP_CS__SOURCE), value);
                    	    completedElement(value, true);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_26_0_0_0, leftArg, true);
                    	    copyLocalizationInfos(leftArg, element);
                    	    }
                    	    }

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createMultOperationCallExpCS();
                    	    startIncompleteElement(element);
                    	    }
                    	    if (rightArg != null) {
                    	    if (rightArg != null) {
                    	    Object value = rightArg;
                    	    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.MULT_OPERATION_CALL_EXP_CS__TARGET), value);
                    	    completedElement(value, true);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_26_0_0_2, rightArg, true);
                    	    copyLocalizationInfos(rightArg, element);
                    	    }
                    	    }

                    	    if ( state.backtracking==0 ) { leftArg = element; /* this may become an argument in the next iteration */ }

                    	    }
                    	    break;

                    	default :
                    	    if ( cnt48 >= 1 ) break loop48;
                    	    if (state.backtracking>0) {state.failed=true; return element;}
                                EarlyExitException eee =
                                    new EarlyExitException(48, input);
                                throw eee;
                        }
                        cnt48++;
                    } while (true);


                    }
                    break;
                case 2 :
                    // Ocl.g:6286:20: 
                    {
                    if ( state.backtracking==0 ) { element = leftArg; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 43, parseop_OclExpressionCS_level_12_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parseop_OclExpressionCS_level_12"



    // $ANTLR start "parseop_OclExpressionCS_level_13"
    // Ocl.g:6291:1: parseop_OclExpressionCS_level_13 returns [tudresden.ocl20.pivot.language.ocl.OclExpressionCS element = null] : ( (a0= ADDITIVE_OPERATOR ) arg= parseop_OclExpressionCS_level_14 | (a0= NOT_OPERATOR ) arg= parseop_OclExpressionCS_level_14 |arg= parseop_OclExpressionCS_level_14 );
    public final tudresden.ocl20.pivot.language.ocl.OclExpressionCS parseop_OclExpressionCS_level_13() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS element =  null;

        int parseop_OclExpressionCS_level_13_StartIndex = input.index();

        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS arg =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return element; }

            // Ocl.g:6294:0: ( (a0= ADDITIVE_OPERATOR ) arg= parseop_OclExpressionCS_level_14 | (a0= NOT_OPERATOR ) arg= parseop_OclExpressionCS_level_14 |arg= parseop_OclExpressionCS_level_14 )
            int alt50=3;
            switch ( input.LA(1) ) {
            case ADDITIVE_OPERATOR:
                {
                alt50=1;
                }
                break;
            case NOT_OPERATOR:
                {
                int LA50_2 = input.LA(2);

                if ( (synpred57_Ocl()) ) {
                    alt50=2;
                }
                else if ( (true) ) {
                    alt50=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 50, 2, input);

                    throw nvae;

                }
                }
                break;
            case AND_OPERATOR:
            case BOOLEAN_LITERAL:
            case COLLECTION_TYPES:
            case EQUALITY_OPERATOR:
            case IMPLIES_OPERATOR:
            case INTEGER_LITERAL:
            case NEQUALITY_OPERATOR:
            case OR_OPERATOR:
            case QUOTED_39_39:
            case SIMPLE_NAME:
            case XOR_OPERATOR:
            case 28:
            case 35:
            case 43:
            case 47:
            case 49:
            case 50:
                {
                alt50=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 50, 0, input);

                throw nvae;

            }

            switch (alt50) {
                case 1 :
                    // Ocl.g:6295:0: (a0= ADDITIVE_OPERATOR ) arg= parseop_OclExpressionCS_level_14
                    {
                    // Ocl.g:6295:4: (a0= ADDITIVE_OPERATOR )
                    // Ocl.g:6296:4: a0= ADDITIVE_OPERATOR
                    {
                    a0=(Token)match(input,ADDITIVE_OPERATOR,FOLLOW_ADDITIVE_OPERATOR_in_parseop_OclExpressionCS_level_135132); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createUnaryOperationCallExpCS();
                    startIncompleteElement(element);
                    }
                    if (a0 != null) {
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("ADDITIVE_OPERATOR");
                    tokenResolver.setOptions(getOptions());
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.UNARY_OPERATION_CALL_EXP_CS__OPERATION_NAME), result);
                    Object resolvedObject = result.getResolvedToken();
                    if (resolvedObject == null) {
                    addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    }
                    java.lang.String resolved = (java.lang.String) resolvedObject;
                    if (resolved != null) {
                    Object value = resolved;
                    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.UNARY_OPERATION_CALL_EXP_CS__OPERATION_NAME), value);
                    completedElement(value, false);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_27_0_0_0, resolved, true);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1450]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1451]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1452]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1453]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1454]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1455]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1456]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1457]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1458]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1459]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1460]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1461]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1462]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1463]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1464]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1465]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1466]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1467]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1468]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1469]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1470]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1471]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1472]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1473]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1474]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1475]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1476]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getUnaryOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1477]);
                    }

                    pushFollow(FOLLOW_parseop_OclExpressionCS_level_14_in_parseop_OclExpressionCS_level_135145);
                    arg=parseop_OclExpressionCS_level_14();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createUnaryOperationCallExpCS();
                    startIncompleteElement(element);
                    }
                    if (arg != null) {
                    if (arg != null) {
                    Object value = arg;
                    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.UNARY_OPERATION_CALL_EXP_CS__TARGET), value);
                    completedElement(value, true);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_27_0_0_2, arg, true);
                    copyLocalizationInfos(arg, element);
                    }
                    }

                    }
                    break;
                case 2 :
                    // Ocl.g:6378:0: (a0= NOT_OPERATOR ) arg= parseop_OclExpressionCS_level_14
                    {
                    // Ocl.g:6378:4: (a0= NOT_OPERATOR )
                    // Ocl.g:6379:4: a0= NOT_OPERATOR
                    {
                    a0=(Token)match(input,NOT_OPERATOR,FOLLOW_NOT_OPERATOR_in_parseop_OclExpressionCS_level_135156); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLogicalNotOperationCallExpCS();
                    startIncompleteElement(element);
                    }
                    if (a0 != null) {
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NOT_OPERATOR");
                    tokenResolver.setOptions(getOptions());
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_NOT_OPERATION_CALL_EXP_CS__OPERATION_NAME), result);
                    Object resolvedObject = result.getResolvedToken();
                    if (resolvedObject == null) {
                    addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    }
                    java.lang.String resolved = (java.lang.String) resolvedObject;
                    if (resolved != null) {
                    Object value = resolved;
                    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_NOT_OPERATION_CALL_EXP_CS__OPERATION_NAME), value);
                    completedElement(value, false);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_28_0_0_0, resolved, true);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1478]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1479]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1480]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1481]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1482]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1483]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1484]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1485]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1486]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1487]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1488]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1489]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1490]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1491]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1492]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1493]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1494]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1495]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1496]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1497]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1498]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1499]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1500]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1501]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1502]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1503]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1504]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLogicalNotOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1505]);
                    }

                    pushFollow(FOLLOW_parseop_OclExpressionCS_level_14_in_parseop_OclExpressionCS_level_135169);
                    arg=parseop_OclExpressionCS_level_14();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLogicalNotOperationCallExpCS();
                    startIncompleteElement(element);
                    }
                    if (arg != null) {
                    if (arg != null) {
                    Object value = arg;
                    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LOGICAL_NOT_OPERATION_CALL_EXP_CS__TARGET), value);
                    completedElement(value, true);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_28_0_0_2, arg, true);
                    copyLocalizationInfos(arg, element);
                    }
                    }

                    }
                    break;
                case 3 :
                    // Ocl.g:6462:5: arg= parseop_OclExpressionCS_level_14
                    {
                    pushFollow(FOLLOW_parseop_OclExpressionCS_level_14_in_parseop_OclExpressionCS_level_135179);
                    arg=parseop_OclExpressionCS_level_14();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = arg; }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 44, parseop_OclExpressionCS_level_13_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parseop_OclExpressionCS_level_13"



    // $ANTLR start "parseop_OclExpressionCS_level_14"
    // Ocl.g:6465:1: parseop_OclExpressionCS_level_14 returns [tudresden.ocl20.pivot.language.ocl.OclExpressionCS element = null] : arg= parseop_OclExpressionCS_level_20 ( (a0= NAVIGATION_OPERATOR ) (a1_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) ( ( (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) ) )* |) ;
    public final tudresden.ocl20.pivot.language.ocl.OclExpressionCS parseop_OclExpressionCS_level_14() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS element =  null;

        int parseop_OclExpressionCS_level_14_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS arg =null;

        tudresden.ocl20.pivot.language.ocl.ImplicitFeatureCallCS a1_0 =null;

        tudresden.ocl20.pivot.language.ocl.ImplicitFeatureCallCS a3_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return element; }

            // Ocl.g:6468:5: (arg= parseop_OclExpressionCS_level_20 ( (a0= NAVIGATION_OPERATOR ) (a1_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) ( ( (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) ) )* |) )
            // Ocl.g:6469:5: arg= parseop_OclExpressionCS_level_20 ( (a0= NAVIGATION_OPERATOR ) (a1_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) ( ( (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) ) )* |)
            {
            pushFollow(FOLLOW_parseop_OclExpressionCS_level_20_in_parseop_OclExpressionCS_level_145201);
            arg=parseop_OclExpressionCS_level_20();

            state._fsp--;
            if (state.failed) return element;

            // Ocl.g:6469:39: ( (a0= NAVIGATION_OPERATOR ) (a1_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) ( ( (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) ) )* |)
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==NAVIGATION_OPERATOR) ) {
                int LA52_1 = input.LA(2);

                if ( (synpred59_Ocl()) ) {
                    alt52=1;
                }
                else if ( (true) ) {
                    alt52=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 52, 1, input);

                    throw nvae;

                }
            }
            else if ( (LA52_0==EOF||(LA52_0 >= ADDITIVE_OPERATOR && LA52_0 <= AND_OPERATOR)||(LA52_0 >= EQUALITY_OPERATOR && LA52_0 <= IMPLIES_OPERATOR)||LA52_0==MULT_OPERATOR||LA52_0==NEQUALITY_OPERATOR||LA52_0==OR_OPERATOR||LA52_0==RELATIONAL_OPERATOR||LA52_0==STATIC||LA52_0==XOR_OPERATOR||(LA52_0 >= 29 && LA52_0 <= 31)||(LA52_0 >= 36 && LA52_0 <= 42)||(LA52_0 >= 44 && LA52_0 <= 46)||(LA52_0 >= 52 && LA52_0 <= 54)||(LA52_0 >= 56 && LA52_0 <= 57)) ) {
                alt52=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 52, 0, input);

                throw nvae;

            }
            switch (alt52) {
                case 1 :
                    // Ocl.g:6470:0: (a0= NAVIGATION_OPERATOR ) (a1_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) ( ( (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) ) )*
                    {
                    // Ocl.g:6470:4: (a0= NAVIGATION_OPERATOR )
                    // Ocl.g:6471:4: a0= NAVIGATION_OPERATOR
                    {
                    a0=(Token)match(input,NAVIGATION_OPERATOR,FOLLOW_NAVIGATION_OPERATOR_in_parseop_OclExpressionCS_level_145210); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createNavigationCallExp();
                    startIncompleteElement(element);
                    }
                    if (a0 != null) {
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAVIGATION_OPERATOR");
                    tokenResolver.setOptions(getOptions());
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.NAVIGATION_CALL_EXP__NAVIGATION_OPERATOR), result);
                    Object resolvedObject = result.getResolvedToken();
                    if (resolvedObject == null) {
                    addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    }
                    java.lang.String resolved = (java.lang.String) resolvedObject;
                    if (resolved != null) {
                    Object value = resolved;
                    addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.NAVIGATION_CALL_EXP__NAVIGATION_OPERATOR, value);
                    completedElement(value, false);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_29_0_0_2, resolved, true);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1506]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1507]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1508]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1509]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1510]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1511]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1512]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1513]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1514]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1515]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1516]);
                    }

                    // Ocl.g:6516:6: (a1_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS )
                    // Ocl.g:6517:6: a1_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS_in_parseop_OclExpressionCS_level_145225);
                    a1_0=parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createNavigationCallExp();
                    startIncompleteElement(element);
                    }
                    if (a1_0 != null) {
                    if (a1_0 != null) {
                    Object value = a1_0;
                    addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.NAVIGATION_CALL_EXP__FEATURE_CALLS, value);
                    completedElement(value, true);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_29_0_0_4, a1_0, true);
                    copyLocalizationInfos(a1_0, element);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1517]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1518]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1519]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1520]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1521]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1522]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1523]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1524]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1525]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1526]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1527]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1528]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1529]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1530]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1531]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1532]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1533]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1534]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1535]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1536]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1537]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1538]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1539]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1540]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1541]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1542]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1543]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1544]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1545]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1546]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1547]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1548]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1549]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1550]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1551]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1552]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1553]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1554]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1555]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1556]);
                    }

                    // Ocl.g:6581:0: ( ( (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) ) )*
                    loop51:
                    do {
                        int alt51=2;
                        int LA51_0 = input.LA(1);

                        if ( (LA51_0==NAVIGATION_OPERATOR) ) {
                            int LA51_30 = input.LA(2);

                            if ( (synpred58_Ocl()) ) {
                                alt51=1;
                            }


                        }


                        switch (alt51) {
                    	case 1 :
                    	    // Ocl.g:6582:0: ( (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) )
                    	    {
                    	    // Ocl.g:6582:4: ( (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) )
                    	    // Ocl.g:6583:4: (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS )
                    	    {
                    	    // Ocl.g:6583:4: (a2= NAVIGATION_OPERATOR )
                    	    // Ocl.g:6584:4: a2= NAVIGATION_OPERATOR
                    	    {
                    	    a2=(Token)match(input,NAVIGATION_OPERATOR,FOLLOW_NAVIGATION_OPERATOR_in_parseop_OclExpressionCS_level_145243); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createNavigationCallExp();
                    	    startIncompleteElement(element);
                    	    }
                    	    if (a2 != null) {
                    	    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAVIGATION_OPERATOR");
                    	    tokenResolver.setOptions(getOptions());
                    	    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    	    tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.NAVIGATION_CALL_EXP__NAVIGATION_OPERATOR), result);
                    	    Object resolvedObject = result.getResolvedToken();
                    	    if (resolvedObject == null) {
                    	    addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
                    	    }
                    	    java.lang.String resolved = (java.lang.String) resolvedObject;
                    	    if (resolved != null) {
                    	    Object value = resolved;
                    	    addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.NAVIGATION_CALL_EXP__NAVIGATION_OPERATOR, value);
                    	    completedElement(value, false);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_29_0_0_5_0_0_1, resolved, true);
                    	    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
                    	    }
                    	    }

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    // expected elements (follow set)
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1557]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1558]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1559]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1560]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1561]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1562]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1563]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1564]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1565]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1566]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getNavigationCallExp(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1567]);
                    	    }

                    	    // Ocl.g:6629:6: (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS )
                    	    // Ocl.g:6630:6: a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS
                    	    {
                    	    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS_in_parseop_OclExpressionCS_level_145258);
                    	    a3_0=parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createNavigationCallExp();
                    	    startIncompleteElement(element);
                    	    }
                    	    if (a3_0 != null) {
                    	    if (a3_0 != null) {
                    	    Object value = a3_0;
                    	    addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.NAVIGATION_CALL_EXP__FEATURE_CALLS, value);
                    	    completedElement(value, true);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_29_0_0_5_0_0_3, a3_0, true);
                    	    copyLocalizationInfos(a3_0, element);
                    	    }
                    	    }

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    // expected elements (follow set)
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1568]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1569]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1570]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1571]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1572]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1573]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1574]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1575]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1576]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1577]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1578]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1579]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1580]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1581]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1582]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1583]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1584]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1585]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1586]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1587]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1588]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1589]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1590]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1591]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1592]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1593]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1594]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1595]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1596]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1597]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1598]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1599]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1600]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1601]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1602]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1603]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1604]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1605]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1606]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1607]);
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop51;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1608]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1609]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1610]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1611]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1612]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1613]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1614]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1615]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1616]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1617]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1618]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1619]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1620]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1621]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1622]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1623]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1624]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1625]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1626]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1627]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1628]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1629]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1630]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1631]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1632]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1633]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1634]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1635]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1636]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1637]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1638]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1639]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1640]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1641]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1642]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1643]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1644]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1645]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1646]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1647]);
                    }

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createNavigationCallExp();
                    startIncompleteElement(element);
                    }
                    if (arg != null) {
                    if (arg != null) {
                    Object value = arg;
                    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.NAVIGATION_CALL_EXP__SOURCE), value);
                    completedElement(value, true);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_29_0_0_0, arg, true);
                    copyLocalizationInfos(arg, element);
                    }
                    }

                    }
                    break;
                case 2 :
                    // Ocl.g:6760:15: 
                    {
                    if ( state.backtracking==0 ) { element = arg; }

                    }
                    break;

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 45, parseop_OclExpressionCS_level_14_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parseop_OclExpressionCS_level_14"



    // $ANTLR start "parseop_OclExpressionCS_level_20"
    // Ocl.g:6764:1: parseop_OclExpressionCS_level_20 returns [tudresden.ocl20.pivot.language.ocl.OclExpressionCS element = null] : (c0= parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS |c1= parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS |c2= parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS |c3= parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS |c4= parse_tudresden_ocl20_pivot_language_ocl_IfExpCS |c5= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS |c6= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS |c7= parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS |c8= parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS |c9= parse_tudresden_ocl20_pivot_language_ocl_LetExpCS |c10= parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS |c11= parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS |c12= parse_tudresden_ocl20_pivot_language_ocl_BooleanLiteralExpCS |c13= parse_tudresden_ocl20_pivot_language_ocl_StringLiteralExpCS |c14= parse_tudresden_ocl20_pivot_language_ocl_InvalidLiteralExpCS |c15= parse_tudresden_ocl20_pivot_language_ocl_NullLiteralExpCS |c16= parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS |c17= parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS );
    public final tudresden.ocl20.pivot.language.ocl.OclExpressionCS parseop_OclExpressionCS_level_20() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS element =  null;

        int parseop_OclExpressionCS_level_20_StartIndex = input.index();

        tudresden.ocl20.pivot.language.ocl.OperationCallOnSelfExpCS c0 =null;

        tudresden.ocl20.pivot.language.ocl.StaticOperationCallExpCS c1 =null;

        tudresden.ocl20.pivot.language.ocl.EnumLiteralOrStaticPropertyExpCS c2 =null;

        tudresden.ocl20.pivot.language.ocl.TupleLiteralExpCS c3 =null;

        tudresden.ocl20.pivot.language.ocl.IfExpCS c4 =null;

        tudresden.ocl20.pivot.language.ocl.CollectionLiteralExpCS c5 =null;

        tudresden.ocl20.pivot.language.ocl.CollectionTypeLiteralExpCS c6 =null;

        tudresden.ocl20.pivot.language.ocl.TupleTypeLiteralExpCS c7 =null;

        tudresden.ocl20.pivot.language.ocl.PropertyCallOnSelfExpCS c8 =null;

        tudresden.ocl20.pivot.language.ocl.LetExpCS c9 =null;

        tudresden.ocl20.pivot.language.ocl.RealLiteralExpCS c10 =null;

        tudresden.ocl20.pivot.language.ocl.IntegerLiteralExpCS c11 =null;

        tudresden.ocl20.pivot.language.ocl.BooleanLiteralExpCS c12 =null;

        tudresden.ocl20.pivot.language.ocl.StringLiteralExpCS c13 =null;

        tudresden.ocl20.pivot.language.ocl.InvalidLiteralExpCS c14 =null;

        tudresden.ocl20.pivot.language.ocl.NullLiteralExpCS c15 =null;

        tudresden.ocl20.pivot.language.ocl.NamedLiteralExpCS c16 =null;

        tudresden.ocl20.pivot.language.ocl.BracketExpCS c17 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return element; }

            // Ocl.g:6767:0: (c0= parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS |c1= parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS |c2= parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS |c3= parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS |c4= parse_tudresden_ocl20_pivot_language_ocl_IfExpCS |c5= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS |c6= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS |c7= parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS |c8= parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS |c9= parse_tudresden_ocl20_pivot_language_ocl_LetExpCS |c10= parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS |c11= parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS |c12= parse_tudresden_ocl20_pivot_language_ocl_BooleanLiteralExpCS |c13= parse_tudresden_ocl20_pivot_language_ocl_StringLiteralExpCS |c14= parse_tudresden_ocl20_pivot_language_ocl_InvalidLiteralExpCS |c15= parse_tudresden_ocl20_pivot_language_ocl_NullLiteralExpCS |c16= parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS |c17= parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS )
            int alt53=18;
            switch ( input.LA(1) ) {
            case AND_OPERATOR:
            case EQUALITY_OPERATOR:
            case IMPLIES_OPERATOR:
            case NEQUALITY_OPERATOR:
            case NOT_OPERATOR:
            case OR_OPERATOR:
            case XOR_OPERATOR:
                {
                alt53=1;
                }
                break;
            case SIMPLE_NAME:
                {
                int LA53_8 = input.LA(2);

                if ( (synpred60_Ocl()) ) {
                    alt53=1;
                }
                else if ( (synpred61_Ocl()) ) {
                    alt53=2;
                }
                else if ( (synpred62_Ocl()) ) {
                    alt53=3;
                }
                else if ( (synpred68_Ocl()) ) {
                    alt53=9;
                }
                else if ( (synpred76_Ocl()) ) {
                    alt53=17;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 8, input);

                    throw nvae;

                }
                }
                break;
            case 35:
                {
                int LA53_9 = input.LA(2);

                if ( (synpred63_Ocl()) ) {
                    alt53=4;
                }
                else if ( (synpred67_Ocl()) ) {
                    alt53=8;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 9, input);

                    throw nvae;

                }
                }
                break;
            case 43:
                {
                alt53=5;
                }
                break;
            case COLLECTION_TYPES:
                {
                int LA53_11 = input.LA(2);

                if ( (synpred65_Ocl()) ) {
                    alt53=6;
                }
                else if ( (synpred66_Ocl()) ) {
                    alt53=7;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 11, input);

                    throw nvae;

                }
                }
                break;
            case 49:
                {
                alt53=10;
                }
                break;
            case INTEGER_LITERAL:
                {
                int LA53_13 = input.LA(2);

                if ( (synpred70_Ocl()) ) {
                    alt53=11;
                }
                else if ( (synpred71_Ocl()) ) {
                    alt53=12;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 53, 13, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN_LITERAL:
                {
                alt53=13;
                }
                break;
            case QUOTED_39_39:
                {
                alt53=14;
                }
                break;
            case 47:
                {
                alt53=15;
                }
                break;
            case 50:
                {
                alt53=16;
                }
                break;
            case 28:
                {
                alt53=18;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 53, 0, input);

                throw nvae;

            }

            switch (alt53) {
                case 1 :
                    // Ocl.g:6768:0: c0= parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS_in_parseop_OclExpressionCS_level_205304);
                    c0=parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Ocl.g:6769:2: c1= parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS_in_parseop_OclExpressionCS_level_205312);
                    c1=parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Ocl.g:6770:2: c2= parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS_in_parseop_OclExpressionCS_level_205320);
                    c2=parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Ocl.g:6771:2: c3= parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS_in_parseop_OclExpressionCS_level_205328);
                    c3=parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 5 :
                    // Ocl.g:6772:2: c4= parse_tudresden_ocl20_pivot_language_ocl_IfExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IfExpCS_in_parseop_OclExpressionCS_level_205336);
                    c4=parse_tudresden_ocl20_pivot_language_ocl_IfExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c4; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 6 :
                    // Ocl.g:6773:2: c5= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS_in_parseop_OclExpressionCS_level_205344);
                    c5=parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c5; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 7 :
                    // Ocl.g:6774:2: c6= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS_in_parseop_OclExpressionCS_level_205352);
                    c6=parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c6; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 8 :
                    // Ocl.g:6775:2: c7= parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS_in_parseop_OclExpressionCS_level_205360);
                    c7=parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c7; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 9 :
                    // Ocl.g:6776:2: c8= parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS_in_parseop_OclExpressionCS_level_205368);
                    c8=parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c8; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 10 :
                    // Ocl.g:6777:2: c9= parse_tudresden_ocl20_pivot_language_ocl_LetExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_LetExpCS_in_parseop_OclExpressionCS_level_205376);
                    c9=parse_tudresden_ocl20_pivot_language_ocl_LetExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c9; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 11 :
                    // Ocl.g:6778:2: c10= parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS_in_parseop_OclExpressionCS_level_205384);
                    c10=parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c10; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 12 :
                    // Ocl.g:6779:2: c11= parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS_in_parseop_OclExpressionCS_level_205392);
                    c11=parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c11; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 13 :
                    // Ocl.g:6780:2: c12= parse_tudresden_ocl20_pivot_language_ocl_BooleanLiteralExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_BooleanLiteralExpCS_in_parseop_OclExpressionCS_level_205400);
                    c12=parse_tudresden_ocl20_pivot_language_ocl_BooleanLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c12; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 14 :
                    // Ocl.g:6781:2: c13= parse_tudresden_ocl20_pivot_language_ocl_StringLiteralExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_StringLiteralExpCS_in_parseop_OclExpressionCS_level_205408);
                    c13=parse_tudresden_ocl20_pivot_language_ocl_StringLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c13; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 15 :
                    // Ocl.g:6782:2: c14= parse_tudresden_ocl20_pivot_language_ocl_InvalidLiteralExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_InvalidLiteralExpCS_in_parseop_OclExpressionCS_level_205416);
                    c14=parse_tudresden_ocl20_pivot_language_ocl_InvalidLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c14; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 16 :
                    // Ocl.g:6783:2: c15= parse_tudresden_ocl20_pivot_language_ocl_NullLiteralExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_NullLiteralExpCS_in_parseop_OclExpressionCS_level_205424);
                    c15=parse_tudresden_ocl20_pivot_language_ocl_NullLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c15; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 17 :
                    // Ocl.g:6784:2: c16= parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS_in_parseop_OclExpressionCS_level_205432);
                    c16=parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c16; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 18 :
                    // Ocl.g:6785:2: c17= parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS_in_parseop_OclExpressionCS_level_205440);
                    c17=parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c17; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 46, parseop_OclExpressionCS_level_20_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parseop_OclExpressionCS_level_20"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS"
    // Ocl.g:6788:1: parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS returns [tudresden.ocl20.pivot.language.ocl.OperationCallOnSelfExpCS element = null] : ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) | (a2= NOT_OPERATOR ) | (a3= AND_OPERATOR ) | (a4= OR_OPERATOR ) | (a5= XOR_OPERATOR ) | (a6= IMPLIES_OPERATOR ) | (a7= SIMPLE_NAME ) ) ( ( (a8= IS_MARKED_PRE ) ) )? a9= '(' ( ( (a10_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a11= ',' (a12_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* ) )? a13= ')' ;
    public final tudresden.ocl20.pivot.language.ocl.OperationCallOnSelfExpCS parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OperationCallOnSelfExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a4=null;
        Token a5=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a9=null;
        Token a11=null;
        Token a13=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a10_0 =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a12_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return element; }

            // Ocl.g:6791:0: ( ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) | (a2= NOT_OPERATOR ) | (a3= AND_OPERATOR ) | (a4= OR_OPERATOR ) | (a5= XOR_OPERATOR ) | (a6= IMPLIES_OPERATOR ) | (a7= SIMPLE_NAME ) ) ( ( (a8= IS_MARKED_PRE ) ) )? a9= '(' ( ( (a10_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a11= ',' (a12_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* ) )? a13= ')' )
            // Ocl.g:6792:0: ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) | (a2= NOT_OPERATOR ) | (a3= AND_OPERATOR ) | (a4= OR_OPERATOR ) | (a5= XOR_OPERATOR ) | (a6= IMPLIES_OPERATOR ) | (a7= SIMPLE_NAME ) ) ( ( (a8= IS_MARKED_PRE ) ) )? a9= '(' ( ( (a10_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a11= ',' (a12_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* ) )? a13= ')'
            {
            // Ocl.g:6792:0: ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) | (a2= NOT_OPERATOR ) | (a3= AND_OPERATOR ) | (a4= OR_OPERATOR ) | (a5= XOR_OPERATOR ) | (a6= IMPLIES_OPERATOR ) | (a7= SIMPLE_NAME ) )
            int alt54=8;
            switch ( input.LA(1) ) {
            case EQUALITY_OPERATOR:
                {
                alt54=1;
                }
                break;
            case NEQUALITY_OPERATOR:
                {
                alt54=2;
                }
                break;
            case NOT_OPERATOR:
                {
                alt54=3;
                }
                break;
            case AND_OPERATOR:
                {
                alt54=4;
                }
                break;
            case OR_OPERATOR:
                {
                alt54=5;
                }
                break;
            case XOR_OPERATOR:
                {
                alt54=6;
                }
                break;
            case IMPLIES_OPERATOR:
                {
                alt54=7;
                }
                break;
            case SIMPLE_NAME:
                {
                alt54=8;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 54, 0, input);

                throw nvae;

            }

            switch (alt54) {
                case 1 :
                    // Ocl.g:6793:0: (a0= EQUALITY_OPERATOR )
                    {
                    // Ocl.g:6793:4: (a0= EQUALITY_OPERATOR )
                    // Ocl.g:6794:4: a0= EQUALITY_OPERATOR
                    {
                    a0=(Token)match(input,EQUALITY_OPERATOR,FOLLOW_EQUALITY_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5466); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationCallOnSelfExpCS();
                    startIncompleteElement(element);
                    }
                    if (a0 != null) {
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("EQUALITY_OPERATOR");
                    tokenResolver.setOptions(getOptions());
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), result);
                    Object resolvedObject = result.getResolvedToken();
                    if (resolvedObject == null) {
                    addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
                    }
                    String resolved = (String) resolvedObject;
                    tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
                    collectHiddenTokens(element);
                    registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationCallBaseExpCSOperationNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), resolved, proxy);
                    if (proxy != null) {
                    Object value = proxy;
                    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), value);
                    completedElement(value, false);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_43_0_0_0_0_0_0, proxy, true);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1648]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1649]);
                    }

                    }
                    break;
                case 2 :
                    // Ocl.g:6835:2: (a1= NEQUALITY_OPERATOR )
                    {
                    // Ocl.g:6835:2: (a1= NEQUALITY_OPERATOR )
                    // Ocl.g:6836:4: a1= NEQUALITY_OPERATOR
                    {
                    a1=(Token)match(input,NEQUALITY_OPERATOR,FOLLOW_NEQUALITY_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5483); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationCallOnSelfExpCS();
                    startIncompleteElement(element);
                    }
                    if (a1 != null) {
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NEQUALITY_OPERATOR");
                    tokenResolver.setOptions(getOptions());
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), result);
                    Object resolvedObject = result.getResolvedToken();
                    if (resolvedObject == null) {
                    addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
                    }
                    String resolved = (String) resolvedObject;
                    tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
                    collectHiddenTokens(element);
                    registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationCallBaseExpCSOperationNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), resolved, proxy);
                    if (proxy != null) {
                    Object value = proxy;
                    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), value);
                    completedElement(value, false);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_43_0_0_0_0_1_0, proxy, true);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, proxy);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1650]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1651]);
                    }

                    }
                    break;
                case 3 :
                    // Ocl.g:6877:2: (a2= NOT_OPERATOR )
                    {
                    // Ocl.g:6877:2: (a2= NOT_OPERATOR )
                    // Ocl.g:6878:4: a2= NOT_OPERATOR
                    {
                    a2=(Token)match(input,NOT_OPERATOR,FOLLOW_NOT_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5500); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationCallOnSelfExpCS();
                    startIncompleteElement(element);
                    }
                    if (a2 != null) {
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NOT_OPERATOR");
                    tokenResolver.setOptions(getOptions());
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), result);
                    Object resolvedObject = result.getResolvedToken();
                    if (resolvedObject == null) {
                    addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
                    }
                    String resolved = (String) resolvedObject;
                    tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
                    collectHiddenTokens(element);
                    registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationCallBaseExpCSOperationNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), resolved, proxy);
                    if (proxy != null) {
                    Object value = proxy;
                    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), value);
                    completedElement(value, false);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_43_0_0_0_0_2_0, proxy, true);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1652]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1653]);
                    }

                    }
                    break;
                case 4 :
                    // Ocl.g:6919:2: (a3= AND_OPERATOR )
                    {
                    // Ocl.g:6919:2: (a3= AND_OPERATOR )
                    // Ocl.g:6920:4: a3= AND_OPERATOR
                    {
                    a3=(Token)match(input,AND_OPERATOR,FOLLOW_AND_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5517); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationCallOnSelfExpCS();
                    startIncompleteElement(element);
                    }
                    if (a3 != null) {
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("AND_OPERATOR");
                    tokenResolver.setOptions(getOptions());
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), result);
                    Object resolvedObject = result.getResolvedToken();
                    if (resolvedObject == null) {
                    addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
                    }
                    String resolved = (String) resolvedObject;
                    tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
                    collectHiddenTokens(element);
                    registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationCallBaseExpCSOperationNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), resolved, proxy);
                    if (proxy != null) {
                    Object value = proxy;
                    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), value);
                    completedElement(value, false);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_43_0_0_0_0_3_0, proxy, true);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, proxy);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1654]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1655]);
                    }

                    }
                    break;
                case 5 :
                    // Ocl.g:6961:2: (a4= OR_OPERATOR )
                    {
                    // Ocl.g:6961:2: (a4= OR_OPERATOR )
                    // Ocl.g:6962:4: a4= OR_OPERATOR
                    {
                    a4=(Token)match(input,OR_OPERATOR,FOLLOW_OR_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5534); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationCallOnSelfExpCS();
                    startIncompleteElement(element);
                    }
                    if (a4 != null) {
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("OR_OPERATOR");
                    tokenResolver.setOptions(getOptions());
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    tokenResolver.resolve(a4.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), result);
                    Object resolvedObject = result.getResolvedToken();
                    if (resolvedObject == null) {
                    addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a4).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a4).getStopIndex());
                    }
                    String resolved = (String) resolvedObject;
                    tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
                    collectHiddenTokens(element);
                    registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationCallBaseExpCSOperationNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), resolved, proxy);
                    if (proxy != null) {
                    Object value = proxy;
                    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), value);
                    completedElement(value, false);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_43_0_0_0_0_4_0, proxy, true);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a4, element);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a4, proxy);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1656]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1657]);
                    }

                    }
                    break;
                case 6 :
                    // Ocl.g:7003:2: (a5= XOR_OPERATOR )
                    {
                    // Ocl.g:7003:2: (a5= XOR_OPERATOR )
                    // Ocl.g:7004:4: a5= XOR_OPERATOR
                    {
                    a5=(Token)match(input,XOR_OPERATOR,FOLLOW_XOR_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5551); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationCallOnSelfExpCS();
                    startIncompleteElement(element);
                    }
                    if (a5 != null) {
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("XOR_OPERATOR");
                    tokenResolver.setOptions(getOptions());
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    tokenResolver.resolve(a5.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), result);
                    Object resolvedObject = result.getResolvedToken();
                    if (resolvedObject == null) {
                    addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a5).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a5).getStopIndex());
                    }
                    String resolved = (String) resolvedObject;
                    tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
                    collectHiddenTokens(element);
                    registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationCallBaseExpCSOperationNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), resolved, proxy);
                    if (proxy != null) {
                    Object value = proxy;
                    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), value);
                    completedElement(value, false);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_43_0_0_0_0_5_0, proxy, true);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a5, element);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a5, proxy);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1658]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1659]);
                    }

                    }
                    break;
                case 7 :
                    // Ocl.g:7045:2: (a6= IMPLIES_OPERATOR )
                    {
                    // Ocl.g:7045:2: (a6= IMPLIES_OPERATOR )
                    // Ocl.g:7046:4: a6= IMPLIES_OPERATOR
                    {
                    a6=(Token)match(input,IMPLIES_OPERATOR,FOLLOW_IMPLIES_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5568); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationCallOnSelfExpCS();
                    startIncompleteElement(element);
                    }
                    if (a6 != null) {
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IMPLIES_OPERATOR");
                    tokenResolver.setOptions(getOptions());
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    tokenResolver.resolve(a6.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), result);
                    Object resolvedObject = result.getResolvedToken();
                    if (resolvedObject == null) {
                    addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a6).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a6).getStopIndex());
                    }
                    String resolved = (String) resolvedObject;
                    tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
                    collectHiddenTokens(element);
                    registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationCallBaseExpCSOperationNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), resolved, proxy);
                    if (proxy != null) {
                    Object value = proxy;
                    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), value);
                    completedElement(value, false);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_43_0_0_0_0_6_0, proxy, true);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, element);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a6, proxy);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1660]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1661]);
                    }

                    }
                    break;
                case 8 :
                    // Ocl.g:7087:2: (a7= SIMPLE_NAME )
                    {
                    // Ocl.g:7087:2: (a7= SIMPLE_NAME )
                    // Ocl.g:7088:4: a7= SIMPLE_NAME
                    {
                    a7=(Token)match(input,SIMPLE_NAME,FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5585); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationCallOnSelfExpCS();
                    startIncompleteElement(element);
                    }
                    if (a7 != null) {
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("SIMPLE_NAME");
                    tokenResolver.setOptions(getOptions());
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    tokenResolver.resolve(a7.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), result);
                    Object resolvedObject = result.getResolvedToken();
                    if (resolvedObject == null) {
                    addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a7).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a7).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a7).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a7).getStopIndex());
                    }
                    String resolved = (String) resolvedObject;
                    tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
                    collectHiddenTokens(element);
                    registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getOperationCallBaseExpCSOperationNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), resolved, proxy);
                    if (proxy != null) {
                    Object value = proxy;
                    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__OPERATION_NAME), value);
                    completedElement(value, false);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_43_0_0_0_0_7_0, proxy, true);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a7, element);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a7, proxy);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1662]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1663]);
                    }

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1664]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1665]);
            }

            // Ocl.g:7135:0: ( ( (a8= IS_MARKED_PRE ) ) )?
            int alt55=2;
            int LA55_0 = input.LA(1);

            if ( (LA55_0==IS_MARKED_PRE) ) {
                alt55=1;
            }
            switch (alt55) {
                case 1 :
                    // Ocl.g:7136:0: ( (a8= IS_MARKED_PRE ) )
                    {
                    // Ocl.g:7136:4: ( (a8= IS_MARKED_PRE ) )
                    // Ocl.g:7137:4: (a8= IS_MARKED_PRE )
                    {
                    // Ocl.g:7137:4: (a8= IS_MARKED_PRE )
                    // Ocl.g:7138:4: a8= IS_MARKED_PRE
                    {
                    a8=(Token)match(input,IS_MARKED_PRE,FOLLOW_IS_MARKED_PRE_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5609); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationCallOnSelfExpCS();
                    startIncompleteElement(element);
                    }
                    if (a8 != null) {
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IS_MARKED_PRE");
                    tokenResolver.setOptions(getOptions());
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    tokenResolver.resolve(a8.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__IS_MARKED_PRE), result);
                    Object resolvedObject = result.getResolvedToken();
                    if (resolvedObject == null) {
                    addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a8).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a8).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a8).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a8).getStopIndex());
                    }
                    java.lang.Boolean resolved = (java.lang.Boolean) resolvedObject;
                    if (resolved != null) {
                    Object value = resolved;
                    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__IS_MARKED_PRE), value);
                    completedElement(value, false);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_43_0_0_2_0_0_0, resolved, true);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a8, element);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1666]);
                    }

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1667]);
            }

            a9=(Token)match(input,28,FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5630); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationCallOnSelfExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_43_0_0_3, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a9, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1668]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1669]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1670]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1671]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1672]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1673]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1674]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1675]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1676]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1677]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1678]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1679]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1680]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1681]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1682]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1683]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1684]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1685]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1686]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1687]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1688]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1689]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1690]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1691]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1692]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1693]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1694]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1695]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1696]);
            }

            // Ocl.g:7222:0: ( ( (a10_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a11= ',' (a12_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* ) )?
            int alt57=2;
            int LA57_0 = input.LA(1);

            if ( ((LA57_0 >= ADDITIVE_OPERATOR && LA57_0 <= IMPLIES_OPERATOR)||LA57_0==INTEGER_LITERAL||(LA57_0 >= NEQUALITY_OPERATOR && LA57_0 <= QUOTED_39_39)||LA57_0==SIMPLE_NAME||(LA57_0 >= XOR_OPERATOR && LA57_0 <= 28)||LA57_0==35||LA57_0==43||LA57_0==47||(LA57_0 >= 49 && LA57_0 <= 50)) ) {
                alt57=1;
            }
            switch (alt57) {
                case 1 :
                    // Ocl.g:7223:0: ( (a10_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a11= ',' (a12_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* )
                    {
                    // Ocl.g:7223:7: ( (a10_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a11= ',' (a12_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* )
                    // Ocl.g:7224:7: (a10_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a11= ',' (a12_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )*
                    {
                    // Ocl.g:7224:7: (a10_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
                    // Ocl.g:7225:7: a10_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5647);
                    a10_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationCallOnSelfExpCS();
                    startIncompleteElement(element);
                    }
                    if (a10_0 != null) {
                    if (a10_0 != null) {
                    Object value = a10_0;
                    addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__ARGUMENTS, value);
                    completedElement(value, true);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_43_0_0_4_0_0_1, a10_0, true);
                    copyLocalizationInfos(a10_0, element);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1697]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1698]);
                    }

                    // Ocl.g:7251:0: ( (a11= ',' (a12_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )*
                    loop56:
                    do {
                        int alt56=2;
                        int LA56_0 = input.LA(1);

                        if ( (LA56_0==30) ) {
                            alt56=1;
                        }


                        switch (alt56) {
                    	case 1 :
                    	    // Ocl.g:7252:0: (a11= ',' (a12_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) )
                    	    {
                    	    // Ocl.g:7252:5: (a11= ',' (a12_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) )
                    	    // Ocl.g:7253:5: a11= ',' (a12_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
                    	    {
                    	    a11=(Token)match(input,30,FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5663); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationCallOnSelfExpCS();
                    	    startIncompleteElement(element);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_43_0_0_4_0_0_2_0_0_0, null, true);
                    	    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a11, element);
                    	    }

                    	    if ( state.backtracking==0 ) {
                    	    // expected elements (follow set)
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1699]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1700]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1701]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1702]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1703]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1704]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1705]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1706]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1707]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1708]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1709]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1710]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1711]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1712]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1713]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1714]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1715]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1716]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1717]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1718]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1719]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1720]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1721]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1722]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1723]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1724]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1725]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationCallOnSelfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1726]);
                    	    }

                    	    // Ocl.g:7294:7: (a12_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
                    	    // Ocl.g:7295:7: a12_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
                    	    {
                    	    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5676);
                    	    a12_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationCallOnSelfExpCS();
                    	    startIncompleteElement(element);
                    	    }
                    	    if (a12_0 != null) {
                    	    if (a12_0 != null) {
                    	    	Object value = a12_0;
                    	    	addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.OPERATION_CALL_ON_SELF_EXP_CS__ARGUMENTS, value);
                    	    	completedElement(value, true);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_43_0_0_4_0_0_2_0_0_1, a12_0, true);
                    	    copyLocalizationInfos(a12_0, element);
                    	    }
                    	    }

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    // expected elements (follow set)
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1727]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1728]);
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop56;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1729]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1730]);
                    }

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1731]);
            }

            a13=(Token)match(input,29,FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5704); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createOperationCallOnSelfExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_43_0_0_6, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a13, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1732]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1733]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1734]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1735]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1736]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1737]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1738]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1739]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1740]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1741]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1742]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1743]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1744]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1745]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1746]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1747]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1748]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1749]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1750]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1751]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1752]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1753]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1754]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1755]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1756]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1757]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1758]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1759]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1760]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1761]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1762]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1763]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1764]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1765]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1766]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1767]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1768]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1769]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1770]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 47, parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS"
    // Ocl.g:7390:1: parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS returns [tudresden.ocl20.pivot.language.ocl.StaticOperationCallExpCS element = null] : (a0_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS ) a1= '::' (a2= SIMPLE_NAME ) a3= '(' ( ( (a4_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* ) )? a7= ')' ;
    public final tudresden.ocl20.pivot.language.ocl.StaticOperationCallExpCS parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.StaticOperationCallExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        Token a7=null;
        tudresden.ocl20.pivot.language.ocl.TypePathNameCS a0_0 =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a4_0 =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a6_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return element; }

            // Ocl.g:7393:6: ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS ) a1= '::' (a2= SIMPLE_NAME ) a3= '(' ( ( (a4_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* ) )? a7= ')' )
            // Ocl.g:7394:6: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS ) a1= '::' (a2= SIMPLE_NAME ) a3= '(' ( ( (a4_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* ) )? a7= ')'
            {
            // Ocl.g:7394:6: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS )
            // Ocl.g:7395:6: a0_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS5732);
            a0_0=parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createStaticOperationCallExpCS();
            startIncompleteElement(element);
            }
            if (a0_0 != null) {
            if (a0_0 != null) {
            Object value = a0_0;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.STATIC_OPERATION_CALL_EXP_CS__TYPE_NAME), value);
            completedElement(value, true);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_44_0_0_0, a0_0, true);
            copyLocalizationInfos(a0_0, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1771]);
            }

            a1=(Token)match(input,33,FOLLOW_33_in_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS5744); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createStaticOperationCallExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_44_0_0_2, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1772]);
            }

            // Ocl.g:7434:4: (a2= SIMPLE_NAME )
            // Ocl.g:7435:4: a2= SIMPLE_NAME
            {
            a2=(Token)match(input,SIMPLE_NAME,FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS5757); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createStaticOperationCallExpCS();
            startIncompleteElement(element);
            }
            if (a2 != null) {
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("SIMPLE_NAME");
            tokenResolver.setOptions(getOptions());
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.STATIC_OPERATION_CALL_EXP_CS__OPERATION_NAME), result);
            Object resolvedObject = result.getResolvedToken();
            if (resolvedObject == null) {
            addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            }
            String resolved = (String) resolvedObject;
            tudresden.ocl20.pivot.pivotmodel.Operation proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createOperation();
            collectHiddenTokens(element);
            registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.StaticOperationCallExpCS, tudresden.ocl20.pivot.pivotmodel.Operation>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getStaticOperationCallExpCSOperationNameReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.STATIC_OPERATION_CALL_EXP_CS__OPERATION_NAME), resolved, proxy);
            if (proxy != null) {
            Object value = proxy;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.STATIC_OPERATION_CALL_EXP_CS__OPERATION_NAME), value);
            completedElement(value, false);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_44_0_0_4, proxy, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1773]);
            }

            a3=(Token)match(input,28,FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS5770); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createStaticOperationCallExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_44_0_0_6, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1774]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1775]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1776]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1777]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1778]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1779]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1780]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1781]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1782]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1783]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1784]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1785]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1786]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1787]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1788]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1789]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1790]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1791]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1792]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1793]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1794]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1795]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1796]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1797]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1798]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1799]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1800]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1801]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1802]);
            }

            // Ocl.g:7516:0: ( ( (a4_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* ) )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( ((LA59_0 >= ADDITIVE_OPERATOR && LA59_0 <= IMPLIES_OPERATOR)||LA59_0==INTEGER_LITERAL||(LA59_0 >= NEQUALITY_OPERATOR && LA59_0 <= QUOTED_39_39)||LA59_0==SIMPLE_NAME||(LA59_0 >= XOR_OPERATOR && LA59_0 <= 28)||LA59_0==35||LA59_0==43||LA59_0==47||(LA59_0 >= 49 && LA59_0 <= 50)) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // Ocl.g:7517:0: ( (a4_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* )
                    {
                    // Ocl.g:7517:6: ( (a4_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )* )
                    // Ocl.g:7518:6: (a4_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ( (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )*
                    {
                    // Ocl.g:7518:6: (a4_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
                    // Ocl.g:7519:6: a4_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS5787);
                    a4_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createStaticOperationCallExpCS();
                    startIncompleteElement(element);
                    }
                    if (a4_0 != null) {
                    if (a4_0 != null) {
                    Object value = a4_0;
                    addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.STATIC_OPERATION_CALL_EXP_CS__ARGUMENTS, value);
                    completedElement(value, true);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_44_0_0_7_0_0_1, a4_0, true);
                    copyLocalizationInfos(a4_0, element);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1803]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1804]);
                    }

                    // Ocl.g:7545:0: ( (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ) )*
                    loop58:
                    do {
                        int alt58=2;
                        int LA58_0 = input.LA(1);

                        if ( (LA58_0==30) ) {
                            alt58=1;
                        }


                        switch (alt58) {
                    	case 1 :
                    	    // Ocl.g:7546:0: (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) )
                    	    {
                    	    // Ocl.g:7546:4: (a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) )
                    	    // Ocl.g:7547:4: a5= ',' (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
                    	    {
                    	    a5=(Token)match(input,30,FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS5803); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createStaticOperationCallExpCS();
                    	    startIncompleteElement(element);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_44_0_0_7_0_0_2_0_0_0, null, true);
                    	    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
                    	    }

                    	    if ( state.backtracking==0 ) {
                    	    // expected elements (follow set)
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1805]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1806]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1807]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1808]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1809]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1810]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1811]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1812]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1813]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1814]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1815]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1816]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1817]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1818]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1819]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1820]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1821]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1822]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1823]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1824]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1825]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1826]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1827]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1828]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1829]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1830]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1831]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getStaticOperationCallExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1832]);
                    	    }

                    	    // Ocl.g:7588:6: (a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
                    	    // Ocl.g:7589:6: a6_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
                    	    {
                    	    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS5816);
                    	    a6_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createStaticOperationCallExpCS();
                    	    startIncompleteElement(element);
                    	    }
                    	    if (a6_0 != null) {
                    	    if (a6_0 != null) {
                    	    	Object value = a6_0;
                    	    	addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.STATIC_OPERATION_CALL_EXP_CS__ARGUMENTS, value);
                    	    	completedElement(value, true);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_44_0_0_7_0_0_2_0_0_1, a6_0, true);
                    	    copyLocalizationInfos(a6_0, element);
                    	    }
                    	    }

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    // expected elements (follow set)
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1833]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1834]);
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop58;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1835]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1836]);
                    }

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1837]);
            }

            a7=(Token)match(input,29,FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS5844); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createStaticOperationCallExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_44_0_0_9, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a7, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1838]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1839]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1840]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1841]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1842]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1843]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1844]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1845]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1846]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1847]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1848]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1849]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1850]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1851]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1852]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1853]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1854]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1855]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1856]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1857]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1858]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1859]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1860]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1861]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1862]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1863]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1864]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1865]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1866]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1867]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1868]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1869]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1870]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1871]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1872]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1873]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1874]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1875]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1876]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 48, parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS"
    // Ocl.g:7684:1: parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS returns [tudresden.ocl20.pivot.language.ocl.EnumLiteralOrStaticPropertyExpCS element = null] : (a0_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS ) a1= '::' (a2= SIMPLE_NAME ) ;
    public final tudresden.ocl20.pivot.language.ocl.EnumLiteralOrStaticPropertyExpCS parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.EnumLiteralOrStaticPropertyExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS_StartIndex = input.index();

        Token a1=null;
        Token a2=null;
        tudresden.ocl20.pivot.language.ocl.TypePathNameCS a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return element; }

            // Ocl.g:7687:6: ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS ) a1= '::' (a2= SIMPLE_NAME ) )
            // Ocl.g:7688:6: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS ) a1= '::' (a2= SIMPLE_NAME )
            {
            // Ocl.g:7688:6: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS )
            // Ocl.g:7689:6: a0_0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS5872);
            a0_0=parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createEnumLiteralOrStaticPropertyExpCS();
            startIncompleteElement(element);
            }
            if (a0_0 != null) {
            if (a0_0 != null) {
            Object value = a0_0;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ENUM_LITERAL_OR_STATIC_PROPERTY_EXP_CS__TYPE_NAME), value);
            completedElement(value, true);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_45_0_0_0, a0_0, true);
            copyLocalizationInfos(a0_0, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1877]);
            }

            a1=(Token)match(input,33,FOLLOW_33_in_parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS5884); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createEnumLiteralOrStaticPropertyExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_45_0_0_1, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1878]);
            }

            // Ocl.g:7728:4: (a2= SIMPLE_NAME )
            // Ocl.g:7729:4: a2= SIMPLE_NAME
            {
            a2=(Token)match(input,SIMPLE_NAME,FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS5897); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createEnumLiteralOrStaticPropertyExpCS();
            startIncompleteElement(element);
            }
            if (a2 != null) {
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("SIMPLE_NAME");
            tokenResolver.setOptions(getOptions());
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ENUM_LITERAL_OR_STATIC_PROPERTY_EXP_CS__ENUM_LITERAL_OR_STATIC_PROPERTY), result);
            Object resolvedObject = result.getResolvedToken();
            if (resolvedObject == null) {
            addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
            }
            String resolved = (String) resolvedObject;
            tudresden.ocl20.pivot.pivotmodel.NamedElement proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createNamespace();
            collectHiddenTokens(element);
            registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.EnumLiteralOrStaticPropertyExpCS, tudresden.ocl20.pivot.pivotmodel.NamedElement>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getEnumLiteralOrStaticPropertyExpCSEnumLiteralOrStaticPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ENUM_LITERAL_OR_STATIC_PROPERTY_EXP_CS__ENUM_LITERAL_OR_STATIC_PROPERTY), resolved, proxy);
            if (proxy != null) {
            Object value = proxy;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.ENUM_LITERAL_OR_STATIC_PROPERTY_EXP_CS__ENUM_LITERAL_OR_STATIC_PROPERTY), value);
            completedElement(value, false);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_45_0_0_2, proxy, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, proxy);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1879]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1880]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1881]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1882]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1883]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1884]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1885]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1886]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1887]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1888]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1889]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1890]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1891]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1892]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1893]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1894]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1895]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1896]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1897]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1898]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1899]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1900]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1901]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1902]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1903]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1904]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1905]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1906]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1907]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1908]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1909]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1910]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1911]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1912]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1913]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1914]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1915]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1916]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1917]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 49, parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS"
    // Ocl.g:7808:1: parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS returns [tudresden.ocl20.pivot.language.ocl.TupleLiteralExpCS element = null] : a0= 'Tuple' a1= '{' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS ) a3= '}' ;
    public final tudresden.ocl20.pivot.language.ocl.TupleLiteralExpCS parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.TupleLiteralExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a3=null;
        tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitListCS a2_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return element; }

            // Ocl.g:7811:4: (a0= 'Tuple' a1= '{' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS ) a3= '}' )
            // Ocl.g:7812:4: a0= 'Tuple' a1= '{' (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS ) a3= '}'
            {
            a0=(Token)match(input,35,FOLLOW_35_in_parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS5925); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createTupleLiteralExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_46_0_0_0, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1918]);
            }

            a1=(Token)match(input,55,FOLLOW_55_in_parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS5936); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createTupleLiteralExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_46_0_0_1, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getTupleLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1919]);
            }

            // Ocl.g:7840:6: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS )
            // Ocl.g:7841:6: a2_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS_in_parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS5949);
            a2_0=parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createTupleLiteralExpCS();
            startIncompleteElement(element);
            }
            if (a2_0 != null) {
            if (a2_0 != null) {
            Object value = a2_0;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.TUPLE_LITERAL_EXP_CS__VARIABLE_DECLARATIONS), value);
            completedElement(value, true);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_46_0_0_2, a2_0, true);
            copyLocalizationInfos(a2_0, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1920]);
            }

            a3=(Token)match(input,57,FOLLOW_57_in_parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS5961); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createTupleLiteralExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_46_0_0_3, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1921]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1922]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1923]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1924]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1925]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1926]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1927]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1928]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1929]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1930]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1931]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1932]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1933]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1934]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1935]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1936]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1937]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1938]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1939]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1940]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1941]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1942]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1943]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1944]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1945]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1946]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1947]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1948]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1949]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1950]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1951]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1952]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1953]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1954]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1955]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1956]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1957]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1958]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1959]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 50, parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_IfExpCS"
    // Ocl.g:7920:1: parse_tudresden_ocl20_pivot_language_ocl_IfExpCS returns [tudresden.ocl20.pivot.language.ocl.IfExpCS element = null] : a0= 'if' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a2= 'then' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a4= 'else' (a5_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a6= 'endif' ;
    public final tudresden.ocl20.pivot.language.ocl.IfExpCS parse_tudresden_ocl20_pivot_language_ocl_IfExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.IfExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_IfExpCS_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a4=null;
        Token a6=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a1_0 =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a3_0 =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return element; }

            // Ocl.g:7923:4: (a0= 'if' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a2= 'then' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a4= 'else' (a5_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a6= 'endif' )
            // Ocl.g:7924:4: a0= 'if' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a2= 'then' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a4= 'else' (a5_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a6= 'endif'
            {
            a0=(Token)match(input,43,FOLLOW_43_in_parse_tudresden_ocl20_pivot_language_ocl_IfExpCS5987); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIfExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_47_0_0_0, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1960]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1961]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1962]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1963]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1964]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1965]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1966]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1967]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1968]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1969]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1970]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1971]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1972]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1973]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1974]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1975]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1976]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1977]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1978]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1979]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1980]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1981]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1982]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1983]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1984]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1985]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1986]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1987]);
            }

            // Ocl.g:7965:6: (a1_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:7966:6: a1_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_IfExpCS6000);
            a1_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIfExpCS();
            startIncompleteElement(element);
            }
            if (a1_0 != null) {
            if (a1_0 != null) {
            Object value = a1_0;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IF_EXP_CS__CONDITION), value);
            completedElement(value, true);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_47_0_0_1, a1_0, true);
            copyLocalizationInfos(a1_0, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1988]);
            }

            a2=(Token)match(input,54,FOLLOW_54_in_parse_tudresden_ocl20_pivot_language_ocl_IfExpCS6012); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIfExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_47_0_0_3, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1989]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1990]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1991]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1992]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1993]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1994]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1995]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1996]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1997]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1998]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[1999]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2000]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2001]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2002]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2003]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2004]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2005]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2006]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2007]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2008]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2009]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2010]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2011]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2012]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2013]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2014]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2015]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2016]);
            }

            // Ocl.g:8032:6: (a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:8033:6: a3_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_IfExpCS6025);
            a3_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIfExpCS();
            startIncompleteElement(element);
            }
            if (a3_0 != null) {
            if (a3_0 != null) {
            Object value = a3_0;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IF_EXP_CS__THEN_BRANCH), value);
            completedElement(value, true);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_47_0_0_5, a3_0, true);
            copyLocalizationInfos(a3_0, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2017]);
            }

            a4=(Token)match(input,40,FOLLOW_40_in_parse_tudresden_ocl20_pivot_language_ocl_IfExpCS6037); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIfExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_47_0_0_7, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2018]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2019]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2020]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2021]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2022]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2023]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2024]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2025]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2026]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2027]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2028]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2029]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2030]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2031]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2032]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2033]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2034]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2035]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2036]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2037]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2038]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2039]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2040]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2041]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2042]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2043]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2044]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getIfExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2045]);
            }

            // Ocl.g:8099:6: (a5_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:8100:6: a5_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_IfExpCS6050);
            a5_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIfExpCS();
            startIncompleteElement(element);
            }
            if (a5_0 != null) {
            if (a5_0 != null) {
            Object value = a5_0;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.IF_EXP_CS__ELSE_BRANCH), value);
            completedElement(value, true);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_47_0_0_9, a5_0, true);
            copyLocalizationInfos(a5_0, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2046]);
            }

            a6=(Token)match(input,41,FOLLOW_41_in_parse_tudresden_ocl20_pivot_language_ocl_IfExpCS6062); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIfExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_47_0_0_11, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a6, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2047]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2048]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2049]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2050]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2051]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2052]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2053]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2054]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2055]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2056]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2057]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2058]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2059]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2060]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2061]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2062]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2063]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2064]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2065]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2066]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2067]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2068]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2069]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2070]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2071]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2072]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2073]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2074]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2075]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2076]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2077]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2078]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2079]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2080]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2081]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2082]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2083]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2084]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2085]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 51, parse_tudresden_ocl20_pivot_language_ocl_IfExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_IfExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS"
    // Ocl.g:8179:1: parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS returns [tudresden.ocl20.pivot.language.ocl.CollectionLiteralExpCS element = null] : (a0_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS ) a1= '{' ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS ) ) )* ) )? a5= '}' ;
    public final tudresden.ocl20.pivot.language.ocl.CollectionLiteralExpCS parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.CollectionLiteralExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS_StartIndex = input.index();

        Token a1=null;
        Token a3=null;
        Token a5=null;
        tudresden.ocl20.pivot.language.ocl.CollectionTypeIdentifierCS a0_0 =null;

        tudresden.ocl20.pivot.language.ocl.CollectionLiteralPartsCS a2_0 =null;

        tudresden.ocl20.pivot.language.ocl.CollectionLiteralPartsCS a4_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return element; }

            // Ocl.g:8182:6: ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS ) a1= '{' ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS ) ) )* ) )? a5= '}' )
            // Ocl.g:8183:6: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS ) a1= '{' ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS ) ) )* ) )? a5= '}'
            {
            // Ocl.g:8183:6: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS )
            // Ocl.g:8184:6: a0_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS6090);
            a0_0=parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createCollectionLiteralExpCS();
            startIncompleteElement(element);
            }
            if (a0_0 != null) {
            if (a0_0 != null) {
            Object value = a0_0;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.COLLECTION_LITERAL_EXP_CS__COLLECTION_TYPE), value);
            completedElement(value, true);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_48_0_0_0, a0_0, true);
            copyLocalizationInfos(a0_0, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2086]);
            }

            a1=(Token)match(input,55,FOLLOW_55_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS6102); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createCollectionLiteralExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_48_0_0_1, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a1, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2087]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2088]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2089]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2090]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2091]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2092]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2093]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2094]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2095]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2096]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2097]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2098]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2099]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2100]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2101]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2102]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2103]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2104]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2105]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2106]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2107]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2108]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2109]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2110]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2111]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2112]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2113]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2114]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2115]);
            }

            // Ocl.g:8251:0: ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS ) ) )* ) )?
            int alt61=2;
            int LA61_0 = input.LA(1);

            if ( ((LA61_0 >= ADDITIVE_OPERATOR && LA61_0 <= IMPLIES_OPERATOR)||LA61_0==INTEGER_LITERAL||(LA61_0 >= NEQUALITY_OPERATOR && LA61_0 <= QUOTED_39_39)||LA61_0==SIMPLE_NAME||(LA61_0 >= XOR_OPERATOR && LA61_0 <= 28)||LA61_0==35||LA61_0==43||LA61_0==47||(LA61_0 >= 49 && LA61_0 <= 50)) ) {
                alt61=1;
            }
            switch (alt61) {
                case 1 :
                    // Ocl.g:8252:0: ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS ) ) )* )
                    {
                    // Ocl.g:8252:6: ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS ) ) )* )
                    // Ocl.g:8253:6: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS ) ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS ) ) )*
                    {
                    // Ocl.g:8253:6: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS )
                    // Ocl.g:8254:6: a2_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS6119);
                    a2_0=parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createCollectionLiteralExpCS();
                    startIncompleteElement(element);
                    }
                    if (a2_0 != null) {
                    if (a2_0 != null) {
                    Object value = a2_0;
                    addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.COLLECTION_LITERAL_EXP_CS__COLLECTION_LITERAL_PARTS, value);
                    completedElement(value, true);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_48_0_0_2_0_0_0, a2_0, true);
                    copyLocalizationInfos(a2_0, element);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2116]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2117]);
                    }

                    // Ocl.g:8280:0: ( (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS ) ) )*
                    loop60:
                    do {
                        int alt60=2;
                        int LA60_0 = input.LA(1);

                        if ( (LA60_0==30) ) {
                            alt60=1;
                        }


                        switch (alt60) {
                    	case 1 :
                    	    // Ocl.g:8281:0: (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS ) )
                    	    {
                    	    // Ocl.g:8281:4: (a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS ) )
                    	    // Ocl.g:8282:4: a3= ',' (a4_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS )
                    	    {
                    	    a3=(Token)match(input,30,FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS6135); if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createCollectionLiteralExpCS();
                    	    startIncompleteElement(element);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_48_0_0_2_0_0_1_0_0_1, null, true);
                    	    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a3, element);
                    	    }

                    	    if ( state.backtracking==0 ) {
                    	    // expected elements (follow set)
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2118]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2119]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2120]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2121]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2122]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2123]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2124]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2125]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2126]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2127]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2128]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2129]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2130]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2131]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2132]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2133]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2134]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2135]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2136]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2137]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2138]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2139]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2140]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2141]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2142]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2143]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2144]);
                    	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getCollectionLiteralExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2145]);
                    	    }

                    	    // Ocl.g:8323:6: (a4_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS )
                    	    // Ocl.g:8324:6: a4_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS
                    	    {
                    	    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS6148);
                    	    a4_0=parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS();

                    	    state._fsp--;
                    	    if (state.failed) return element;

                    	    if ( state.backtracking==0 ) {
                    	    if (terminateParsing) {
                    	    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    	    }
                    	    if (element == null) {
                    	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createCollectionLiteralExpCS();
                    	    startIncompleteElement(element);
                    	    }
                    	    if (a4_0 != null) {
                    	    if (a4_0 != null) {
                    	    	Object value = a4_0;
                    	    	addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.COLLECTION_LITERAL_EXP_CS__COLLECTION_LITERAL_PARTS, value);
                    	    	completedElement(value, true);
                    	    }
                    	    collectHiddenTokens(element);
                    	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_48_0_0_2_0_0_1_0_0_2, a4_0, true);
                    	    copyLocalizationInfos(a4_0, element);
                    	    }
                    	    }

                    	    }


                    	    if ( state.backtracking==0 ) {
                    	    // expected elements (follow set)
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2146]);
                    	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2147]);
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop60;
                        }
                    } while (true);


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2148]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2149]);
                    }

                    }


                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2150]);
            }

            a5=(Token)match(input,57,FOLLOW_57_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS6176); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createCollectionLiteralExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_48_0_0_3, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a5, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2151]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2152]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2153]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2154]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2155]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2156]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2157]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2158]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2159]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2160]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2161]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2162]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2163]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2164]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2165]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2166]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2167]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2168]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2169]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2170]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2171]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2172]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2173]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2174]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2175]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2176]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2177]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2178]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2179]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2180]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2181]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2182]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2183]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2184]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2185]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2186]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2187]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2188]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2189]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 52, parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS"
    // Ocl.g:8419:1: parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS returns [tudresden.ocl20.pivot.language.ocl.CollectionTypeLiteralExpCS element = null] : (a0_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.CollectionTypeLiteralExpCS parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.CollectionTypeLiteralExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS_StartIndex = input.index();

        tudresden.ocl20.pivot.language.ocl.CollectionTypeIdentifierCS a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return element; }

            // Ocl.g:8422:6: ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS ) )
            // Ocl.g:8423:6: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS )
            {
            // Ocl.g:8423:6: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS )
            // Ocl.g:8424:6: a0_0= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS6204);
            a0_0=parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createCollectionTypeLiteralExpCS();
            startIncompleteElement(element);
            }
            if (a0_0 != null) {
            if (a0_0 != null) {
            Object value = a0_0;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.COLLECTION_TYPE_LITERAL_EXP_CS__COLLECTION_TYPE), value);
            completedElement(value, true);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_51_0_0_0, a0_0, true);
            copyLocalizationInfos(a0_0, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2190]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2191]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2192]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2193]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2194]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2195]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2196]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2197]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2198]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2199]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2200]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2201]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2202]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2203]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2204]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2205]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2206]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2207]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2208]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2209]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2210]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2211]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2212]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2213]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2214]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2215]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2216]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2217]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2218]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2219]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2220]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2221]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2222]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2223]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2224]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2225]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2226]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2227]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2228]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 53, parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS"
    // Ocl.g:8489:1: parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS returns [tudresden.ocl20.pivot.language.ocl.TupleTypeLiteralExpCS element = null] : (a0_0= parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.TupleTypeLiteralExpCS parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.TupleTypeLiteralExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS_StartIndex = input.index();

        tudresden.ocl20.pivot.language.ocl.TupleTypeCS a0_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return element; }

            // Ocl.g:8492:6: ( (a0_0= parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS ) )
            // Ocl.g:8493:6: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS )
            {
            // Ocl.g:8493:6: (a0_0= parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS )
            // Ocl.g:8494:6: a0_0= parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS6233);
            a0_0=parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createTupleTypeLiteralExpCS();
            startIncompleteElement(element);
            }
            if (a0_0 != null) {
            if (a0_0 != null) {
            Object value = a0_0;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.TUPLE_TYPE_LITERAL_EXP_CS__TUPLE_TYPE), value);
            completedElement(value, true);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_52_0_0_0, a0_0, true);
            copyLocalizationInfos(a0_0, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2229]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2230]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2231]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2232]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2233]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2234]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2235]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2236]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2237]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2238]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2239]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2240]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2241]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2242]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2243]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2244]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2245]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2246]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2247]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2248]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2249]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2250]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2251]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2252]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2253]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2254]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2255]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2256]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2257]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2258]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2259]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2260]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2261]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2262]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2263]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2264]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2265]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2266]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2267]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 54, parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS"
    // Ocl.g:8559:1: parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS returns [tudresden.ocl20.pivot.language.ocl.PropertyCallOnSelfExpCS element = null] : (a0= SIMPLE_NAME ) (a1= IS_MARKED_PRE ) ;
    public final tudresden.ocl20.pivot.language.ocl.PropertyCallOnSelfExpCS parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.PropertyCallOnSelfExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS_StartIndex = input.index();

        Token a0=null;
        Token a1=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return element; }

            // Ocl.g:8562:4: ( (a0= SIMPLE_NAME ) (a1= IS_MARKED_PRE ) )
            // Ocl.g:8563:4: (a0= SIMPLE_NAME ) (a1= IS_MARKED_PRE )
            {
            // Ocl.g:8563:4: (a0= SIMPLE_NAME )
            // Ocl.g:8564:4: a0= SIMPLE_NAME
            {
            a0=(Token)match(input,SIMPLE_NAME,FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS6262); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPropertyCallOnSelfExpCS();
            startIncompleteElement(element);
            }
            if (a0 != null) {
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("SIMPLE_NAME");
            tokenResolver.setOptions(getOptions());
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.PROPERTY_CALL_ON_SELF_EXP_CS__PROPERTY), result);
            Object resolvedObject = result.getResolvedToken();
            if (resolvedObject == null) {
            addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            }
            String resolved = (String) resolvedObject;
            tudresden.ocl20.pivot.pivotmodel.Property proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createProperty();
            collectHiddenTokens(element);
            registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.PropertyCallBaseExpCS, tudresden.ocl20.pivot.pivotmodel.Property>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getPropertyCallBaseExpCSPropertyReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.PROPERTY_CALL_ON_SELF_EXP_CS__PROPERTY), resolved, proxy);
            if (proxy != null) {
            Object value = proxy;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.PROPERTY_CALL_ON_SELF_EXP_CS__PROPERTY), value);
            completedElement(value, false);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_53_0_0_0, proxy, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2268]);
            }

            // Ocl.g:8603:4: (a1= IS_MARKED_PRE )
            // Ocl.g:8604:4: a1= IS_MARKED_PRE
            {
            a1=(Token)match(input,IS_MARKED_PRE,FOLLOW_IS_MARKED_PRE_in_parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS6277); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createPropertyCallOnSelfExpCS();
            startIncompleteElement(element);
            }
            if (a1 != null) {
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("IS_MARKED_PRE");
            tokenResolver.setOptions(getOptions());
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.PROPERTY_CALL_ON_SELF_EXP_CS__IS_MARKED_PRE), result);
            Object resolvedObject = result.getResolvedToken();
            if (resolvedObject == null) {
            addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            }
            java.lang.Boolean resolved = (java.lang.Boolean) resolvedObject;
            if (resolved != null) {
            Object value = resolved;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.PROPERTY_CALL_ON_SELF_EXP_CS__IS_MARKED_PRE), value);
            completedElement(value, false);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_53_0_0_2, resolved, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2269]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2270]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2271]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2272]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2273]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2274]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2275]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2276]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2277]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2278]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2279]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2280]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2281]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2282]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2283]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2284]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2285]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2286]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2287]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2288]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2289]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2290]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2291]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2292]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2293]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2294]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2295]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2296]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2297]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2298]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2299]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2300]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2301]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2302]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2303]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2304]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2305]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2306]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2307]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 55, parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_LetExpCS"
    // Ocl.g:8679:1: parse_tudresden_ocl20_pivot_language_ocl_LetExpCS returns [tudresden.ocl20.pivot.language.ocl.LetExpCS element = null] : a0= 'let' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) ( (a2= ',' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) ) )* a4= 'in' (a5_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) ;
    public final tudresden.ocl20.pivot.language.ocl.LetExpCS parse_tudresden_ocl20_pivot_language_ocl_LetExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.LetExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_LetExpCS_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        Token a4=null;
        tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitCS a1_0 =null;

        tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitCS a3_0 =null;

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a5_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return element; }

            // Ocl.g:8682:4: (a0= 'let' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) ( (a2= ',' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) ) )* a4= 'in' (a5_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) )
            // Ocl.g:8683:4: a0= 'let' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) ( (a2= ',' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) ) )* a4= 'in' (a5_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            {
            a0=(Token)match(input,49,FOLLOW_49_in_parse_tudresden_ocl20_pivot_language_ocl_LetExpCS6305); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLetExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_54_0_0_0, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2308]);
            }

            // Ocl.g:8697:6: (a1_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS )
            // Ocl.g:8698:6: a1_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS_in_parse_tudresden_ocl20_pivot_language_ocl_LetExpCS6318);
            a1_0=parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLetExpCS();
            startIncompleteElement(element);
            }
            if (a1_0 != null) {
            if (a1_0 != null) {
            Object value = a1_0;
            addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.LET_EXP_CS__VARIABLE_DECLARATIONS, value);
            completedElement(value, true);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_54_0_0_1, a1_0, true);
            copyLocalizationInfos(a1_0, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2309]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2310]);
            }

            // Ocl.g:8724:0: ( (a2= ',' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) ) )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==30) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // Ocl.g:8725:0: (a2= ',' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) )
            	    {
            	    // Ocl.g:8725:4: (a2= ',' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS ) )
            	    // Ocl.g:8726:4: a2= ',' (a3_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS )
            	    {
            	    a2=(Token)match(input,30,FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_LetExpCS6334); if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    if (element == null) {
            	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLetExpCS();
            	    startIncompleteElement(element);
            	    }
            	    collectHiddenTokens(element);
            	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_54_0_0_2_0_0_1, null, true);
            	    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            	    }

            	    if ( state.backtracking==0 ) {
            	    // expected elements (follow set)
            	    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2311]);
            	    }

            	    // Ocl.g:8740:6: (a3_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS )
            	    // Ocl.g:8741:6: a3_0= parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS
            	    {
            	    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS_in_parse_tudresden_ocl20_pivot_language_ocl_LetExpCS6347);
            	    a3_0=parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS();

            	    state._fsp--;
            	    if (state.failed) return element;

            	    if ( state.backtracking==0 ) {
            	    if (terminateParsing) {
            	    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            	    }
            	    if (element == null) {
            	    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLetExpCS();
            	    startIncompleteElement(element);
            	    }
            	    if (a3_0 != null) {
            	    if (a3_0 != null) {
            	    Object value = a3_0;
            	    addObjectToList(element, tudresden.ocl20.pivot.language.ocl.OclPackage.LET_EXP_CS__VARIABLE_DECLARATIONS, value);
            	    completedElement(value, true);
            	    }
            	    collectHiddenTokens(element);
            	    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_54_0_0_2_0_0_2, a3_0, true);
            	    copyLocalizationInfos(a3_0, element);
            	    }
            	    }

            	    }


            	    if ( state.backtracking==0 ) {
            	    // expected elements (follow set)
            	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2312]);
            	    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2313]);
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2314]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2315]);
            }

            a4=(Token)match(input,44,FOLLOW_44_in_parse_tudresden_ocl20_pivot_language_ocl_LetExpCS6367); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLetExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_54_0_0_3, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a4, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2316]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2317]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2318]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2319]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2320]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2321]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2322]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2323]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2324]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2325]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2326]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2327]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2328]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2329]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2330]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2331]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2332]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2333]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2334]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2335]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2336]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2337]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2338]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2339]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2340]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2341]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2342]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getLetExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2343]);
            }

            // Ocl.g:8816:6: (a5_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:8817:6: a5_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_LetExpCS6380);
            a5_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createLetExpCS();
            startIncompleteElement(element);
            }
            if (a5_0 != null) {
            if (a5_0 != null) {
            Object value = a5_0;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.LET_EXP_CS__OCL_EXPRESSION), value);
            completedElement(value, true);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_54_0_0_5, a5_0, true);
            copyLocalizationInfos(a5_0, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2344]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2345]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2346]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2347]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2348]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2349]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2350]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2351]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2352]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2353]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2354]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2355]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2356]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2357]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2358]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2359]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2360]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2361]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2362]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2363]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2364]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2365]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2366]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2367]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2368]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2369]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2370]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2371]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2372]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2373]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2374]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2375]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2376]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2377]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2378]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2379]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2380]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2381]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2382]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 56, parse_tudresden_ocl20_pivot_language_ocl_LetExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_LetExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS"
    // Ocl.g:8882:1: parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS returns [tudresden.ocl20.pivot.language.ocl.RealLiteralExpCS element = null] : (a0= INTEGER_LITERAL ) (a1= NAVIGATION_OPERATOR ) ( (a2= INTEGER_0 ) | (a3= INTEGER_LITERAL ) ) ;
    public final tudresden.ocl20.pivot.language.ocl.RealLiteralExpCS parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.RealLiteralExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS_StartIndex = input.index();

        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return element; }

            // Ocl.g:8885:4: ( (a0= INTEGER_LITERAL ) (a1= NAVIGATION_OPERATOR ) ( (a2= INTEGER_0 ) | (a3= INTEGER_LITERAL ) ) )
            // Ocl.g:8886:4: (a0= INTEGER_LITERAL ) (a1= NAVIGATION_OPERATOR ) ( (a2= INTEGER_0 ) | (a3= INTEGER_LITERAL ) )
            {
            // Ocl.g:8886:4: (a0= INTEGER_LITERAL )
            // Ocl.g:8887:4: a0= INTEGER_LITERAL
            {
            a0=(Token)match(input,INTEGER_LITERAL,FOLLOW_INTEGER_LITERAL_in_parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS6409); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createRealLiteralExpCS();
            startIncompleteElement(element);
            }
            if (a0 != null) {
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER_LITERAL");
            tokenResolver.setOptions(getOptions());
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.REAL_LITERAL_EXP_CS__INT_VALUE), result);
            Object resolvedObject = result.getResolvedToken();
            if (resolvedObject == null) {
            addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            }
            java.lang.Integer resolved = (java.lang.Integer) resolvedObject;
            if (resolved != null) {
            Object value = resolved;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.REAL_LITERAL_EXP_CS__INT_VALUE), value);
            completedElement(value, false);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_55_0_0_0, resolved, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2383]);
            }

            // Ocl.g:8922:4: (a1= NAVIGATION_OPERATOR )
            // Ocl.g:8923:4: a1= NAVIGATION_OPERATOR
            {
            a1=(Token)match(input,NAVIGATION_OPERATOR,FOLLOW_NAVIGATION_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS6424); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createRealLiteralExpCS();
            startIncompleteElement(element);
            }
            if (a1 != null) {
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NAVIGATION_OPERATOR");
            tokenResolver.setOptions(getOptions());
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            tokenResolver.resolve(a1.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.REAL_LITERAL_EXP_CS__NAVIGATION_OPERATOR), result);
            Object resolvedObject = result.getResolvedToken();
            if (resolvedObject == null) {
            addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a1).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a1).getStopIndex());
            }
            java.lang.String resolved = (java.lang.String) resolvedObject;
            if (resolved != null) {
            Object value = resolved;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.REAL_LITERAL_EXP_CS__NAVIGATION_OPERATOR), value);
            completedElement(value, false);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_55_0_0_2, resolved, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a1, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2384]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2385]);
            }

            // Ocl.g:8959:0: ( (a2= INTEGER_0 ) | (a3= INTEGER_LITERAL ) )
            int alt63=2;
            int LA63_0 = input.LA(1);

            if ( (LA63_0==INTEGER_0) ) {
                alt63=1;
            }
            else if ( (LA63_0==INTEGER_LITERAL) ) {
                alt63=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 63, 0, input);

                throw nvae;

            }
            switch (alt63) {
                case 1 :
                    // Ocl.g:8960:0: (a2= INTEGER_0 )
                    {
                    // Ocl.g:8960:4: (a2= INTEGER_0 )
                    // Ocl.g:8961:4: a2= INTEGER_0
                    {
                    a2=(Token)match(input,INTEGER_0,FOLLOW_INTEGER_0_in_parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS6441); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createRealLiteralExpCS();
                    startIncompleteElement(element);
                    }
                    if (a2 != null) {
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER_0");
                    tokenResolver.setOptions(getOptions());
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.REAL_LITERAL_EXP_CS__REAL_VALUE), result);
                    Object resolvedObject = result.getResolvedToken();
                    if (resolvedObject == null) {
                    addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a2).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a2).getStopIndex());
                    }
                    java.lang.String resolved = (java.lang.String) resolvedObject;
                    if (resolved != null) {
                    Object value = resolved;
                    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.REAL_LITERAL_EXP_CS__REAL_VALUE), value);
                    completedElement(value, false);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_55_0_0_4_0_0_0, resolved, true);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a2, element);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2386]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2387]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2388]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2389]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2390]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2391]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2392]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2393]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2394]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2395]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2396]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2397]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2398]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2399]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2400]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2401]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2402]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2403]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2404]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2405]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2406]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2407]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2408]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2409]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2410]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2411]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2412]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2413]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2414]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2415]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2416]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2417]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2418]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2419]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2420]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2421]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2422]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2423]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2424]);
                    }

                    }
                    break;
                case 2 :
                    // Ocl.g:9035:2: (a3= INTEGER_LITERAL )
                    {
                    // Ocl.g:9035:2: (a3= INTEGER_LITERAL )
                    // Ocl.g:9036:4: a3= INTEGER_LITERAL
                    {
                    a3=(Token)match(input,INTEGER_LITERAL,FOLLOW_INTEGER_LITERAL_in_parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS6458); if (state.failed) return element;

                    if ( state.backtracking==0 ) {
                    if (terminateParsing) {
                    throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
                    }
                    if (element == null) {
                    element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createRealLiteralExpCS();
                    startIncompleteElement(element);
                    }
                    if (a3 != null) {
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER_LITERAL");
                    tokenResolver.setOptions(getOptions());
                    tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
                    tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.REAL_LITERAL_EXP_CS__REAL_VALUE), result);
                    Object resolvedObject = result.getResolvedToken();
                    if (resolvedObject == null) {
                    addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a3).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a3).getStopIndex());
                    }
                    java.lang.String resolved = (java.lang.String) resolvedObject;
                    if (resolved != null) {
                    Object value = resolved;
                    element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.REAL_LITERAL_EXP_CS__REAL_VALUE), value);
                    completedElement(value, false);
                    }
                    collectHiddenTokens(element);
                    retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_55_0_0_4_0_1_0, resolved, true);
                    copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a3, element);
                    }
                    }

                    }


                    if ( state.backtracking==0 ) {
                    // expected elements (follow set)
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2425]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2426]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2427]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2428]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2429]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2430]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2431]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2432]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2433]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2434]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2435]);
                    addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2436]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2437]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2438]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2439]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2440]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2441]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2442]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2443]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2444]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2445]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2446]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2447]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2448]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2449]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2450]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2451]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2452]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2453]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2454]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2455]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2456]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2457]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2458]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2459]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2460]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2461]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2462]);
                    addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2463]);
                    }

                    }
                    break;

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2464]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2465]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2466]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2467]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2468]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2469]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2470]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2471]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2472]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2473]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2474]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2475]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2476]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2477]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2478]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2479]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2480]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2481]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2482]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2483]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2484]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2485]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2486]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2487]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2488]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2489]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2490]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2491]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2492]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2493]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2494]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2495]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2496]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2497]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2498]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2499]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2500]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2501]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2502]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 57, parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS"
    // Ocl.g:9155:1: parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS returns [tudresden.ocl20.pivot.language.ocl.IntegerLiteralExpCS element = null] : (a0= INTEGER_LITERAL ) ;
    public final tudresden.ocl20.pivot.language.ocl.IntegerLiteralExpCS parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.IntegerLiteralExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return element; }

            // Ocl.g:9158:4: ( (a0= INTEGER_LITERAL ) )
            // Ocl.g:9159:4: (a0= INTEGER_LITERAL )
            {
            // Ocl.g:9159:4: (a0= INTEGER_LITERAL )
            // Ocl.g:9160:4: a0= INTEGER_LITERAL
            {
            a0=(Token)match(input,INTEGER_LITERAL,FOLLOW_INTEGER_LITERAL_in_parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS6493); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createIntegerLiteralExpCS();
            startIncompleteElement(element);
            }
            if (a0 != null) {
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER_LITERAL");
            tokenResolver.setOptions(getOptions());
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.INTEGER_LITERAL_EXP_CS__INTEGER_LITERAL), result);
            Object resolvedObject = result.getResolvedToken();
            if (resolvedObject == null) {
            addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            }
            java.lang.Integer resolved = (java.lang.Integer) resolvedObject;
            if (resolved != null) {
            Object value = resolved;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.INTEGER_LITERAL_EXP_CS__INTEGER_LITERAL), value);
            completedElement(value, false);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_56_0_0_0, resolved, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2503]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2504]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2505]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2506]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2507]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2508]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2509]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2510]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2511]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2512]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2513]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2514]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2515]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2516]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2517]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2518]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2519]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2520]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2521]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2522]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2523]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2524]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2525]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2526]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2527]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2528]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2529]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2530]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2531]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2532]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2533]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2534]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2535]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2536]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2537]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2538]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2539]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2540]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2541]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 58, parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_BooleanLiteralExpCS"
    // Ocl.g:9235:1: parse_tudresden_ocl20_pivot_language_ocl_BooleanLiteralExpCS returns [tudresden.ocl20.pivot.language.ocl.BooleanLiteralExpCS element = null] : (a0= BOOLEAN_LITERAL ) ;
    public final tudresden.ocl20.pivot.language.ocl.BooleanLiteralExpCS parse_tudresden_ocl20_pivot_language_ocl_BooleanLiteralExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.BooleanLiteralExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_BooleanLiteralExpCS_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return element; }

            // Ocl.g:9238:4: ( (a0= BOOLEAN_LITERAL ) )
            // Ocl.g:9239:4: (a0= BOOLEAN_LITERAL )
            {
            // Ocl.g:9239:4: (a0= BOOLEAN_LITERAL )
            // Ocl.g:9240:4: a0= BOOLEAN_LITERAL
            {
            a0=(Token)match(input,BOOLEAN_LITERAL,FOLLOW_BOOLEAN_LITERAL_in_parse_tudresden_ocl20_pivot_language_ocl_BooleanLiteralExpCS6523); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createBooleanLiteralExpCS();
            startIncompleteElement(element);
            }
            if (a0 != null) {
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("BOOLEAN_LITERAL");
            tokenResolver.setOptions(getOptions());
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.BOOLEAN_LITERAL_EXP_CS__BOOLEAN_LITERAL), result);
            Object resolvedObject = result.getResolvedToken();
            if (resolvedObject == null) {
            addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            }
            java.lang.Boolean resolved = (java.lang.Boolean) resolvedObject;
            if (resolved != null) {
            Object value = resolved;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.BOOLEAN_LITERAL_EXP_CS__BOOLEAN_LITERAL), value);
            completedElement(value, false);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_57_0_0_0, resolved, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2542]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2543]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2544]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2545]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2546]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2547]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2548]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2549]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2550]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2551]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2552]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2553]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2554]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2555]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2556]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2557]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2558]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2559]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2560]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2561]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2562]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2563]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2564]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2565]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2566]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2567]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2568]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2569]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2570]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2571]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2572]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2573]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2574]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2575]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2576]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2577]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2578]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2579]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2580]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 59, parse_tudresden_ocl20_pivot_language_ocl_BooleanLiteralExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_BooleanLiteralExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_StringLiteralExpCS"
    // Ocl.g:9315:1: parse_tudresden_ocl20_pivot_language_ocl_StringLiteralExpCS returns [tudresden.ocl20.pivot.language.ocl.StringLiteralExpCS element = null] : (a0= QUOTED_39_39 ) ;
    public final tudresden.ocl20.pivot.language.ocl.StringLiteralExpCS parse_tudresden_ocl20_pivot_language_ocl_StringLiteralExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.StringLiteralExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_StringLiteralExpCS_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return element; }

            // Ocl.g:9318:4: ( (a0= QUOTED_39_39 ) )
            // Ocl.g:9319:4: (a0= QUOTED_39_39 )
            {
            // Ocl.g:9319:4: (a0= QUOTED_39_39 )
            // Ocl.g:9320:4: a0= QUOTED_39_39
            {
            a0=(Token)match(input,QUOTED_39_39,FOLLOW_QUOTED_39_39_in_parse_tudresden_ocl20_pivot_language_ocl_StringLiteralExpCS6553); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createStringLiteralExpCS();
            startIncompleteElement(element);
            }
            if (a0 != null) {
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("QUOTED_39_39");
            tokenResolver.setOptions(getOptions());
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.STRING_LITERAL_EXP_CS__STRING_LITERAL), result);
            Object resolvedObject = result.getResolvedToken();
            if (resolvedObject == null) {
            addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            }
            java.lang.String resolved = (java.lang.String) resolvedObject;
            if (resolved != null) {
            Object value = resolved;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.STRING_LITERAL_EXP_CS__STRING_LITERAL), value);
            completedElement(value, false);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_58_0_0_0, resolved, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2581]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2582]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2583]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2584]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2585]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2586]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2587]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2588]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2589]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2590]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2591]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2592]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2593]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2594]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2595]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2596]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2597]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2598]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2599]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2600]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2601]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2602]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2603]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2604]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2605]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2606]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2607]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2608]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2609]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2610]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2611]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2612]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2613]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2614]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2615]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2616]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2617]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2618]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2619]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 60, parse_tudresden_ocl20_pivot_language_ocl_StringLiteralExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_StringLiteralExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_InvalidLiteralExpCS"
    // Ocl.g:9395:1: parse_tudresden_ocl20_pivot_language_ocl_InvalidLiteralExpCS returns [tudresden.ocl20.pivot.language.ocl.InvalidLiteralExpCS element = null] : a0= 'invalid' ;
    public final tudresden.ocl20.pivot.language.ocl.InvalidLiteralExpCS parse_tudresden_ocl20_pivot_language_ocl_InvalidLiteralExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.InvalidLiteralExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_InvalidLiteralExpCS_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return element; }

            // Ocl.g:9398:4: (a0= 'invalid' )
            // Ocl.g:9399:4: a0= 'invalid'
            {
            a0=(Token)match(input,47,FOLLOW_47_in_parse_tudresden_ocl20_pivot_language_ocl_InvalidLiteralExpCS6581); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createInvalidLiteralExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_59_0_0_0, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2620]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2621]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2622]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2623]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2624]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2625]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2626]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2627]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2628]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2629]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2630]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2631]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2632]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2633]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2634]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2635]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2636]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2637]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2638]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2639]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2640]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2641]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2642]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2643]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2644]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2645]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2646]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2647]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2648]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2649]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2650]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2651]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2652]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2653]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2654]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2655]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2656]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2657]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2658]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 61, parse_tudresden_ocl20_pivot_language_ocl_InvalidLiteralExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_InvalidLiteralExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_NullLiteralExpCS"
    // Ocl.g:9453:1: parse_tudresden_ocl20_pivot_language_ocl_NullLiteralExpCS returns [tudresden.ocl20.pivot.language.ocl.NullLiteralExpCS element = null] : a0= 'null' ;
    public final tudresden.ocl20.pivot.language.ocl.NullLiteralExpCS parse_tudresden_ocl20_pivot_language_ocl_NullLiteralExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.NullLiteralExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_NullLiteralExpCS_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return element; }

            // Ocl.g:9456:4: (a0= 'null' )
            // Ocl.g:9457:4: a0= 'null'
            {
            a0=(Token)match(input,50,FOLLOW_50_in_parse_tudresden_ocl20_pivot_language_ocl_NullLiteralExpCS6607); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createNullLiteralExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_60_0_0_0, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2659]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2660]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2661]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2662]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2663]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2664]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2665]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2666]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2667]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2668]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2669]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2670]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2671]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2672]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2673]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2674]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2675]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2676]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2677]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2678]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2679]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2680]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2681]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2682]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2683]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2684]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2685]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2686]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2687]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2688]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2689]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2690]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2691]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2692]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2693]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2694]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2695]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2696]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2697]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 62, parse_tudresden_ocl20_pivot_language_ocl_NullLiteralExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_NullLiteralExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS"
    // Ocl.g:9511:1: parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS returns [tudresden.ocl20.pivot.language.ocl.NamedLiteralExpCS element = null] : (a0= SIMPLE_NAME ) ;
    public final tudresden.ocl20.pivot.language.ocl.NamedLiteralExpCS parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.NamedLiteralExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS_StartIndex = input.index();

        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return element; }

            // Ocl.g:9514:4: ( (a0= SIMPLE_NAME ) )
            // Ocl.g:9515:4: (a0= SIMPLE_NAME )
            {
            // Ocl.g:9515:4: (a0= SIMPLE_NAME )
            // Ocl.g:9516:4: a0= SIMPLE_NAME
            {
            a0=(Token)match(input,SIMPLE_NAME,FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS6635); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createNamedLiteralExpCS();
            startIncompleteElement(element);
            }
            if (a0 != null) {
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("SIMPLE_NAME");
            tokenResolver.setOptions(getOptions());
            tudresden.ocl20.pivot.language.ocl.resource.ocl.IOclTokenResolveResult result = getFreshTokenResolveResult();
            tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.NAMED_LITERAL_EXP_CS__NAMED_ELEMENT), result);
            Object resolvedObject = result.getResolvedToken();
            if (resolvedObject == null) {
            addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime3_4_0.CommonToken) a0).getLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStartIndex(), ((org.antlr.runtime3_4_0.CommonToken) a0).getStopIndex());
            }
            String resolved = (String) resolvedObject;
            tudresden.ocl20.pivot.pivotmodel.NamedElement proxy = tudresden.ocl20.pivot.pivotmodel.PivotModelFactory.eINSTANCE.createNamespace();
            collectHiddenTokens(element);
            registerContextDependentProxy(new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclContextDependentURIFragmentFactory<tudresden.ocl20.pivot.language.ocl.NamedLiteralExpCS, tudresden.ocl20.pivot.pivotmodel.NamedElement>(getReferenceResolverSwitch() == null ? null : getReferenceResolverSwitch().getNamedLiteralExpCSNamedElementReferenceResolver()), element, (org.eclipse.emf.ecore.EReference) element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.NAMED_LITERAL_EXP_CS__NAMED_ELEMENT), resolved, proxy);
            if (proxy != null) {
            Object value = proxy;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.NAMED_LITERAL_EXP_CS__NAMED_ELEMENT), value);
            completedElement(value, false);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_61_0_0_0, proxy, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, element);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken) a0, proxy);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2698]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2699]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2700]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2701]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2702]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2703]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2704]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2705]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2706]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2707]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2708]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2709]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2710]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2711]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2712]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2713]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2714]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2715]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2716]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2717]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2718]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2719]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2720]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2721]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2722]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2723]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2724]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2725]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2726]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2727]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2728]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2729]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2730]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2731]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2732]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2733]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2734]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2735]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2736]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 63, parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS"
    // Ocl.g:9595:1: parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS returns [tudresden.ocl20.pivot.language.ocl.BracketExpCS element = null] : a0= '(' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a2= ')' ;
    public final tudresden.ocl20.pivot.language.ocl.BracketExpCS parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.BracketExpCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS_StartIndex = input.index();

        Token a0=null;
        Token a2=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS a1_0 =null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return element; }

            // Ocl.g:9598:4: (a0= '(' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a2= ')' )
            // Ocl.g:9599:4: a0= '(' (a1_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS ) a2= ')'
            {
            a0=(Token)match(input,28,FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS6663); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createBracketExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_62_0_0_0, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a0, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2737]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2738]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2739]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2740]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2741]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2742]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2743]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2744]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2745]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2746]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2747]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2748]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2749]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2750]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2751]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2752]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2753]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2754]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2755]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2756]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2757]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2758]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2759]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2760]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2761]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2762]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2763]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getBracketExpCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2764]);
            }

            // Ocl.g:9640:6: (a1_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS )
            // Ocl.g:9641:6: a1_0= parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS
            {
            pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS6676);
            a1_0=parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (terminateParsing) {
            throw new tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclTerminateParsingException();
            }
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createBracketExpCS();
            startIncompleteElement(element);
            }
            if (a1_0 != null) {
            if (a1_0 != null) {
            Object value = a1_0;
            element.eSet(element.eClass().getEStructuralFeature(tudresden.ocl20.pivot.language.ocl.OclPackage.BRACKET_EXP_CS__OCL_EXPRESSION), value);
            completedElement(value, true);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_62_0_0_2, a1_0, true);
            copyLocalizationInfos(a1_0, element);
            }
            }

            }


            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2765]);
            }

            a2=(Token)match(input,29,FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS6688); if (state.failed) return element;

            if ( state.backtracking==0 ) {
            if (element == null) {
            element = tudresden.ocl20.pivot.language.ocl.OclFactory.eINSTANCE.createBracketExpCS();
            startIncompleteElement(element);
            }
            collectHiddenTokens(element);
            retrieveLayoutInformation(element, tudresden.ocl20.pivot.language.ocl.resource.ocl.grammar.OclGrammarInformationProvider.OCL_62_0_0_4, null, true);
            copyLocalizationInfos((org.antlr.runtime3_4_0.CommonToken)a2, element);
            }

            if ( state.backtracking==0 ) {
            // expected elements (follow set)
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2766]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getAttributeContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2767]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2768]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2769]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getPackageDeclarationWithNamespaceCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2770]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2771]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2772]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2773]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getClassifierContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2774]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2775]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2776]);
            addExpectedElement(tudresden.ocl20.pivot.language.ocl.OclPackage.eINSTANCE.getOperationContextDeclarationCS(), tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2777]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2778]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2779]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2780]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2781]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2782]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2783]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2784]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2785]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2786]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2787]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2788]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2789]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2790]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2791]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2792]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2793]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2794]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2795]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2796]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2797]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2798]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2799]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2800]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2801]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2802]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2803]);
            addExpectedElement(null, tudresden.ocl20.pivot.language.ocl.resource.ocl.mopp.OclExpectationConstants.EXPECTATIONS[2804]);
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 64, parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS"
    // Ocl.g:9720:1: parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS returns [tudresden.ocl20.pivot.language.ocl.ContextDeclarationCS element = null] : (c0= parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS |c1= parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS |c2= parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS );
    public final tudresden.ocl20.pivot.language.ocl.ContextDeclarationCS parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.ContextDeclarationCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS_StartIndex = input.index();

        tudresden.ocl20.pivot.language.ocl.OperationContextDeclarationCS c0 =null;

        tudresden.ocl20.pivot.language.ocl.AttributeContextDeclarationCS c1 =null;

        tudresden.ocl20.pivot.language.ocl.ClassifierContextDeclarationCS c2 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return element; }

            // Ocl.g:9721:0: (c0= parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS |c1= parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS |c2= parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS )
            int alt64=3;
            int LA64_0 = input.LA(1);

            if ( (LA64_0==37) ) {
                int LA64_1 = input.LA(2);

                if ( (synpred93_Ocl()) ) {
                    alt64=1;
                }
                else if ( (synpred94_Ocl()) ) {
                    alt64=2;
                }
                else if ( (true) ) {
                    alt64=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 64, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 64, 0, input);

                throw nvae;

            }
            switch (alt64) {
                case 1 :
                    // Ocl.g:9722:0: c0= parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS6710);
                    c0=parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Ocl.g:9723:2: c1= parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS6718);
                    c1=parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Ocl.g:9724:2: c2= parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS6726);
                    c2=parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 65, parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS"
    // Ocl.g:9728:1: parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS returns [tudresden.ocl20.pivot.language.ocl.PrePostOrBodyDeclarationCS element = null] : (c0= parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS |c1= parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS |c2= parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS );
    public final tudresden.ocl20.pivot.language.ocl.PrePostOrBodyDeclarationCS parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.PrePostOrBodyDeclarationCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS_StartIndex = input.index();

        tudresden.ocl20.pivot.language.ocl.PreConditionDeclarationCS c0 =null;

        tudresden.ocl20.pivot.language.ocl.PostConditionDeclarationCS c1 =null;

        tudresden.ocl20.pivot.language.ocl.BodyDeclarationCS c2 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return element; }

            // Ocl.g:9729:0: (c0= parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS |c1= parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS |c2= parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS )
            int alt65=3;
            switch ( input.LA(1) ) {
            case 53:
                {
                alt65=1;
                }
                break;
            case 52:
                {
                alt65=2;
                }
                break;
            case 36:
                {
                alt65=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 65, 0, input);

                throw nvae;

            }

            switch (alt65) {
                case 1 :
                    // Ocl.g:9730:0: c0= parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS6745);
                    c0=parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Ocl.g:9731:2: c1= parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS6753);
                    c1=parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Ocl.g:9732:2: c2= parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS6761);
                    c2=parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 66, parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS"
    // Ocl.g:9736:1: parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS returns [tudresden.ocl20.pivot.language.ocl.TypePathNameCS element = null] : (c0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS |c1= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS );
    public final tudresden.ocl20.pivot.language.ocl.TypePathNameCS parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.TypePathNameCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS_StartIndex = input.index();

        tudresden.ocl20.pivot.language.ocl.TypePathNameSimpleCS c0 =null;

        tudresden.ocl20.pivot.language.ocl.TypePathNameNestedCS c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return element; }

            // Ocl.g:9737:0: (c0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS |c1= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS )
            int alt66=2;
            int LA66_0 = input.LA(1);

            if ( (LA66_0==SIMPLE_NAME) ) {
                int LA66_1 = input.LA(2);

                if ( (LA66_1==33) ) {
                    int LA66_2 = input.LA(3);

                    if ( (LA66_2==SIMPLE_NAME) ) {
                        int LA66_4 = input.LA(4);

                        if ( (synpred97_Ocl()) ) {
                            alt66=1;
                        }
                        else if ( (true) ) {
                            alt66=2;
                        }
                        else {
                            if (state.backtracking>0) {state.failed=true; return element;}
                            NoViableAltException nvae =
                                new NoViableAltException("", 66, 4, input);

                            throw nvae;

                        }
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 66, 2, input);

                        throw nvae;

                    }
                }
                else if ( (LA66_1==EOF||LA66_1==EQUALITY_OPERATOR||LA66_1==STATIC||(LA66_1 >= 29 && LA66_1 <= 30)||LA66_1==34||LA66_1==36||(LA66_1 >= 38 && LA66_1 <= 39)||(LA66_1 >= 45 && LA66_1 <= 46)||(LA66_1 >= 52 && LA66_1 <= 53)||LA66_1==56) ) {
                    alt66=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 66, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 66, 0, input);

                throw nvae;

            }
            switch (alt66) {
                case 1 :
                    // Ocl.g:9738:0: c0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS_in_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS6780);
                    c0=parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Ocl.g:9739:2: c1= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS_in_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS6788);
                    c1=parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 67, parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_TypeCS"
    // Ocl.g:9743:1: parse_tudresden_ocl20_pivot_language_ocl_TypeCS returns [tudresden.ocl20.pivot.language.ocl.TypeCS element = null] : (c0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS |c1= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS |c2= parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS |c3= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS );
    public final tudresden.ocl20.pivot.language.ocl.TypeCS parse_tudresden_ocl20_pivot_language_ocl_TypeCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.TypeCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_TypeCS_StartIndex = input.index();

        tudresden.ocl20.pivot.language.ocl.TypePathNameSimpleCS c0 =null;

        tudresden.ocl20.pivot.language.ocl.TypePathNameNestedCS c1 =null;

        tudresden.ocl20.pivot.language.ocl.TupleTypeCS c2 =null;

        tudresden.ocl20.pivot.language.ocl.CollectionTypeIdentifierCS c3 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return element; }

            // Ocl.g:9744:0: (c0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS |c1= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS |c2= parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS |c3= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS )
            int alt67=4;
            switch ( input.LA(1) ) {
            case SIMPLE_NAME:
                {
                int LA67_1 = input.LA(2);

                if ( (LA67_1==EOF||LA67_1==EQUALITY_OPERATOR||LA67_1==STATIC||(LA67_1 >= 29 && LA67_1 <= 30)||LA67_1==34||LA67_1==36||(LA67_1 >= 38 && LA67_1 <= 39)||(LA67_1 >= 45 && LA67_1 <= 46)||(LA67_1 >= 52 && LA67_1 <= 53)||LA67_1==56) ) {
                    alt67=1;
                }
                else if ( (LA67_1==33) ) {
                    alt67=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 67, 1, input);

                    throw nvae;

                }
                }
                break;
            case 35:
                {
                alt67=3;
                }
                break;
            case COLLECTION_TYPES:
                {
                alt67=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 67, 0, input);

                throw nvae;

            }

            switch (alt67) {
                case 1 :
                    // Ocl.g:9745:0: c0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS_in_parse_tudresden_ocl20_pivot_language_ocl_TypeCS6807);
                    c0=parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Ocl.g:9746:2: c1= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS_in_parse_tudresden_ocl20_pivot_language_ocl_TypeCS6815);
                    c1=parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Ocl.g:9747:2: c2= parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_TypeCS6823);
                    c2=parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Ocl.g:9748:2: c3= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS_in_parse_tudresden_ocl20_pivot_language_ocl_TypeCS6831);
                    c3=parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 68, parse_tudresden_ocl20_pivot_language_ocl_TypeCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_TypeCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS"
    // Ocl.g:9752:1: parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS returns [tudresden.ocl20.pivot.language.ocl.InitOrDeriveValueCS element = null] : (c0= parse_tudresden_ocl20_pivot_language_ocl_InitValueCS |c1= parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS );
    public final tudresden.ocl20.pivot.language.ocl.InitOrDeriveValueCS parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.InitOrDeriveValueCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS_StartIndex = input.index();

        tudresden.ocl20.pivot.language.ocl.InitValueCS c0 =null;

        tudresden.ocl20.pivot.language.ocl.DeriveValueCS c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return element; }

            // Ocl.g:9753:0: (c0= parse_tudresden_ocl20_pivot_language_ocl_InitValueCS |c1= parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS )
            int alt68=2;
            int LA68_0 = input.LA(1);

            if ( (LA68_0==45) ) {
                alt68=1;
            }
            else if ( (LA68_0==39) ) {
                alt68=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 68, 0, input);

                throw nvae;

            }
            switch (alt68) {
                case 1 :
                    // Ocl.g:9754:0: c0= parse_tudresden_ocl20_pivot_language_ocl_InitValueCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_InitValueCS_in_parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS6850);
                    c0=parse_tudresden_ocl20_pivot_language_ocl_InitValueCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Ocl.g:9755:2: c1= parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS_in_parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS6858);
                    c1=parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 69, parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS"
    // Ocl.g:9759:1: parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS returns [tudresden.ocl20.pivot.language.ocl.InvariantOrDefinitionCS element = null] : (c0= parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS |c1= parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS );
    public final tudresden.ocl20.pivot.language.ocl.InvariantOrDefinitionCS parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.InvariantOrDefinitionCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS_StartIndex = input.index();

        tudresden.ocl20.pivot.language.ocl.InvariantExpCS c0 =null;

        tudresden.ocl20.pivot.language.ocl.DefinitionExpCS c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return element; }

            // Ocl.g:9760:0: (c0= parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS |c1= parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS )
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==46) ) {
                alt69=1;
            }
            else if ( (LA69_0==STATIC||LA69_0==38) ) {
                alt69=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 69, 0, input);

                throw nvae;

            }
            switch (alt69) {
                case 1 :
                    // Ocl.g:9761:0: c0= parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS_in_parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS6877);
                    c0=parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Ocl.g:9762:2: c1= parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS_in_parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS6885);
                    c1=parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 70, parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS"
    // Ocl.g:9766:1: parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS returns [tudresden.ocl20.pivot.language.ocl.OclExpressionCS element = null] : c= parseop_OclExpressionCS_level_4 ;
    public final tudresden.ocl20.pivot.language.ocl.OclExpressionCS parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_StartIndex = input.index();

        tudresden.ocl20.pivot.language.ocl.OclExpressionCS c =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return element; }

            // Ocl.g:9767:3: (c= parseop_OclExpressionCS_level_4 )
            // Ocl.g:9768:3: c= parseop_OclExpressionCS_level_4
            {
            pushFollow(FOLLOW_parseop_OclExpressionCS_level_4_in_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS6904);
            c=parseop_OclExpressionCS_level_4();

            state._fsp--;
            if (state.failed) return element;

            if ( state.backtracking==0 ) { element = c; /* this rule is an expression root */ }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 71, parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS"
    // Ocl.g:9772:1: parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS returns [tudresden.ocl20.pivot.language.ocl.DefinitionExpPartCS element = null] : (c0= parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPropertyCS |c1= parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS );
    public final tudresden.ocl20.pivot.language.ocl.DefinitionExpPartCS parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.DefinitionExpPartCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS_StartIndex = input.index();

        tudresden.ocl20.pivot.language.ocl.DefinitionExpPropertyCS c0 =null;

        tudresden.ocl20.pivot.language.ocl.DefinitionExpOperationCS c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return element; }

            // Ocl.g:9773:0: (c0= parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPropertyCS |c1= parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS )
            int alt70=2;
            int LA70_0 = input.LA(1);

            if ( (LA70_0==SIMPLE_NAME) ) {
                int LA70_1 = input.LA(2);

                if ( (LA70_1==EQUALITY_OPERATOR||LA70_1==32) ) {
                    alt70=1;
                }
                else if ( (LA70_1==28) ) {
                    alt70=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 70, 1, input);

                    throw nvae;

                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 70, 0, input);

                throw nvae;

            }
            switch (alt70) {
                case 1 :
                    // Ocl.g:9774:0: c0= parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPropertyCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPropertyCS_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS6923);
                    c0=parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPropertyCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Ocl.g:9775:2: c1= parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS6931);
                    c1=parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 72, parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS"
    // Ocl.g:9779:1: parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS returns [tudresden.ocl20.pivot.language.ocl.ImplicitFeatureCallCS element = null] : (c0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS |c1= parse_tudresden_ocl20_pivot_language_ocl_ImplicitPropertyCallCS |c2= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS |c3= parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS );
    public final tudresden.ocl20.pivot.language.ocl.ImplicitFeatureCallCS parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.ImplicitFeatureCallCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS_StartIndex = input.index();

        tudresden.ocl20.pivot.language.ocl.ImplicitOperationCallCS c0 =null;

        tudresden.ocl20.pivot.language.ocl.ImplicitPropertyCallCS c1 =null;

        tudresden.ocl20.pivot.language.ocl.IteratorExpCS c2 =null;

        tudresden.ocl20.pivot.language.ocl.IterateExpCS c3 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return element; }

            // Ocl.g:9780:0: (c0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS |c1= parse_tudresden_ocl20_pivot_language_ocl_ImplicitPropertyCallCS |c2= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS |c3= parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS )
            int alt71=4;
            switch ( input.LA(1) ) {
            case AND_OPERATOR:
            case EQUALITY_OPERATOR:
            case IMPLIES_OPERATOR:
            case NEQUALITY_OPERATOR:
            case NOT_OPERATOR:
            case OR_OPERATOR:
            case XOR_OPERATOR:
                {
                alt71=1;
                }
                break;
            case SIMPLE_NAME:
                {
                int LA71_2 = input.LA(2);

                if ( (LA71_2==28) ) {
                    alt71=1;
                }
                else if ( (LA71_2==EOF||(LA71_2 >= ADDITIVE_OPERATOR && LA71_2 <= AND_OPERATOR)||(LA71_2 >= EQUALITY_OPERATOR && LA71_2 <= IMPLIES_OPERATOR)||LA71_2==IS_MARKED_PRE||(LA71_2 >= MULT_OPERATOR && LA71_2 <= NEQUALITY_OPERATOR)||LA71_2==OR_OPERATOR||LA71_2==RELATIONAL_OPERATOR||LA71_2==STATIC||LA71_2==XOR_OPERATOR||(LA71_2 >= 29 && LA71_2 <= 31)||(LA71_2 >= 36 && LA71_2 <= 42)||(LA71_2 >= 44 && LA71_2 <= 46)||(LA71_2 >= 52 && LA71_2 <= 54)||(LA71_2 >= 56 && LA71_2 <= 57)) ) {
                    alt71=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 71, 2, input);

                    throw nvae;

                }
                }
                break;
            case ITERATOR_NAME:
                {
                alt71=3;
                }
                break;
            case 48:
                {
                alt71=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 71, 0, input);

                throw nvae;

            }

            switch (alt71) {
                case 1 :
                    // Ocl.g:9781:0: c0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS6950);
                    c0=parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Ocl.g:9782:2: c1= parse_tudresden_ocl20_pivot_language_ocl_ImplicitPropertyCallCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ImplicitPropertyCallCS_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS6958);
                    c1=parse_tudresden_ocl20_pivot_language_ocl_ImplicitPropertyCallCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 3 :
                    // Ocl.g:9783:2: c2= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS6966);
                    c2=parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c2; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 4 :
                    // Ocl.g:9784:2: c3= parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS6974);
                    c3=parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c3; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 73, parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS"



    // $ANTLR start "parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS"
    // Ocl.g:9788:1: parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS returns [tudresden.ocl20.pivot.language.ocl.CollectionLiteralPartsCS element = null] : (c0= parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS |c1= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsOclExpCS );
    public final tudresden.ocl20.pivot.language.ocl.CollectionLiteralPartsCS parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.CollectionLiteralPartsCS element =  null;

        int parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS_StartIndex = input.index();

        tudresden.ocl20.pivot.language.ocl.CollectionRangeCS c0 =null;

        tudresden.ocl20.pivot.language.ocl.CollectionLiteralPartsOclExpCS c1 =null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return element; }

            // Ocl.g:9789:0: (c0= parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS |c1= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsOclExpCS )
            int alt72=2;
            switch ( input.LA(1) ) {
            case ADDITIVE_OPERATOR:
                {
                int LA72_1 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 1, input);

                    throw nvae;

                }
                }
                break;
            case NOT_OPERATOR:
                {
                int LA72_2 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 2, input);

                    throw nvae;

                }
                }
                break;
            case EQUALITY_OPERATOR:
                {
                int LA72_3 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 3, input);

                    throw nvae;

                }
                }
                break;
            case NEQUALITY_OPERATOR:
                {
                int LA72_4 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 4, input);

                    throw nvae;

                }
                }
                break;
            case AND_OPERATOR:
                {
                int LA72_5 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 5, input);

                    throw nvae;

                }
                }
                break;
            case OR_OPERATOR:
                {
                int LA72_6 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 6, input);

                    throw nvae;

                }
                }
                break;
            case XOR_OPERATOR:
                {
                int LA72_7 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 7, input);

                    throw nvae;

                }
                }
                break;
            case IMPLIES_OPERATOR:
                {
                int LA72_8 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 8, input);

                    throw nvae;

                }
                }
                break;
            case SIMPLE_NAME:
                {
                int LA72_9 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 9, input);

                    throw nvae;

                }
                }
                break;
            case 35:
                {
                int LA72_10 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 10, input);

                    throw nvae;

                }
                }
                break;
            case 43:
                {
                int LA72_11 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 11, input);

                    throw nvae;

                }
                }
                break;
            case COLLECTION_TYPES:
                {
                int LA72_12 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 12, input);

                    throw nvae;

                }
                }
                break;
            case 49:
                {
                int LA72_13 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 13, input);

                    throw nvae;

                }
                }
                break;
            case INTEGER_LITERAL:
                {
                int LA72_14 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 14, input);

                    throw nvae;

                }
                }
                break;
            case BOOLEAN_LITERAL:
                {
                int LA72_15 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 15, input);

                    throw nvae;

                }
                }
                break;
            case QUOTED_39_39:
                {
                int LA72_16 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 16, input);

                    throw nvae;

                }
                }
                break;
            case 47:
                {
                int LA72_17 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 17, input);

                    throw nvae;

                }
                }
                break;
            case 50:
                {
                int LA72_18 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 18, input);

                    throw nvae;

                }
                }
                break;
            case 28:
                {
                int LA72_19 = input.LA(2);

                if ( (synpred107_Ocl()) ) {
                    alt72=1;
                }
                else if ( (true) ) {
                    alt72=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return element;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 72, 19, input);

                    throw nvae;

                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 72, 0, input);

                throw nvae;

            }

            switch (alt72) {
                case 1 :
                    // Ocl.g:9790:0: c0= parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS6993);
                    c0=parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c0; /* this is a subclass or primitive expression choice */ }

                    }
                    break;
                case 2 :
                    // Ocl.g:9791:2: c1= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsOclExpCS
                    {
                    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsOclExpCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS7001);
                    c1=parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsOclExpCS();

                    state._fsp--;
                    if (state.failed) return element;

                    if ( state.backtracking==0 ) { element = c1; /* this is a subclass or primitive expression choice */ }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }

        finally {
        	// do for sure before leaving
            if ( state.backtracking>0 ) { memoize(input, 74, parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS_StartIndex); }

        }
        return element;
    }
    // $ANTLR end "parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS"

    // $ANTLR start synpred32_Ocl
    public final void synpred32_Ocl_fragment() throws RecognitionException {
        Token a3=null;
        tudresden.ocl20.pivot.language.ocl.IteratorExpVariableCS a2_0 =null;


        // Ocl.g:3941:3: ( ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) a3= ';' ) )
        // Ocl.g:3941:3: ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) a3= ';' )
        {
        // Ocl.g:3941:3: ( (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) a3= ';' )
        // Ocl.g:3942:4: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS ) a3= ';'
        {
        // Ocl.g:3942:4: (a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS )
        // Ocl.g:3943:5: a2_0= parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS_in_synpred32_Ocl3353);
        a2_0=parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS();

        state._fsp--;
        if (state.failed) return ;

        }


        a3=(Token)match(input,34,FOLLOW_34_in_synpred32_Ocl3381); if (state.failed) return ;

        }


        }

    }
    // $ANTLR end synpred32_Ocl

    // $ANTLR start synpred39_Ocl
    public final void synpred39_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;


        // Ocl.g:5286:3: ( () (a0= IMPLIES_OPERATOR ) rightArg= parseop_OclExpressionCS_level_5 )
        // Ocl.g:5286:3: () (a0= IMPLIES_OPERATOR ) rightArg= parseop_OclExpressionCS_level_5
        {
        // Ocl.g:5286:3: ()
        // Ocl.g:5286:4: 
        {
        }


        // Ocl.g:5288:3: (a0= IMPLIES_OPERATOR )
        // Ocl.g:5289:4: a0= IMPLIES_OPERATOR
        {
        a0=(Token)match(input,IMPLIES_OPERATOR,FOLLOW_IMPLIES_OPERATOR_in_synpred39_Ocl4552); if (state.failed) return ;

        }


        pushFollow(FOLLOW_parseop_OclExpressionCS_level_5_in_synpred39_Ocl4579);
        rightArg=parseop_OclExpressionCS_level_5();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred39_Ocl

    // $ANTLR start synpred40_Ocl
    public final void synpred40_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;


        // Ocl.g:5285:45: ( ( () (a0= IMPLIES_OPERATOR ) rightArg= parseop_OclExpressionCS_level_5 )+ )
        // Ocl.g:5285:45: ( () (a0= IMPLIES_OPERATOR ) rightArg= parseop_OclExpressionCS_level_5 )+
        {
        // Ocl.g:5285:45: ( () (a0= IMPLIES_OPERATOR ) rightArg= parseop_OclExpressionCS_level_5 )+
        int cnt77=0;
        loop77:
        do {
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==IMPLIES_OPERATOR) ) {
                alt77=1;
            }


            switch (alt77) {
        	case 1 :
        	    // Ocl.g:5286:3: () (a0= IMPLIES_OPERATOR ) rightArg= parseop_OclExpressionCS_level_5
        	    {
        	    // Ocl.g:5286:3: ()
        	    // Ocl.g:5286:4: 
        	    {
        	    }


        	    // Ocl.g:5288:3: (a0= IMPLIES_OPERATOR )
        	    // Ocl.g:5289:4: a0= IMPLIES_OPERATOR
        	    {
        	    a0=(Token)match(input,IMPLIES_OPERATOR,FOLLOW_IMPLIES_OPERATOR_in_synpred40_Ocl4552); if (state.failed) return ;

        	    }


        	    pushFollow(FOLLOW_parseop_OclExpressionCS_level_5_in_synpred40_Ocl4579);
        	    rightArg=parseop_OclExpressionCS_level_5();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt77 >= 1 ) break loop77;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(77, input);
                    throw eee;
            }
            cnt77++;
        } while (true);


        }

    }
    // $ANTLR end synpred40_Ocl

    // $ANTLR start synpred41_Ocl
    public final void synpred41_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;


        // Ocl.g:5400:2: ( () (a0= XOR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_6 )
        // Ocl.g:5400:2: () (a0= XOR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_6
        {
        // Ocl.g:5400:2: ()
        // Ocl.g:5400:3: 
        {
        }


        // Ocl.g:5402:2: (a0= XOR_OPERATOR )
        // Ocl.g:5403:3: a0= XOR_OPERATOR
        {
        a0=(Token)match(input,XOR_OPERATOR,FOLLOW_XOR_OPERATOR_in_synpred41_Ocl4645); if (state.failed) return ;

        }


        pushFollow(FOLLOW_parseop_OclExpressionCS_level_6_in_synpred41_Ocl4666);
        rightArg=parseop_OclExpressionCS_level_6();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred41_Ocl

    // $ANTLR start synpred42_Ocl
    public final void synpred42_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;


        // Ocl.g:5399:43: ( ( () (a0= XOR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_6 )+ )
        // Ocl.g:5399:43: ( () (a0= XOR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_6 )+
        {
        // Ocl.g:5399:43: ( () (a0= XOR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_6 )+
        int cnt78=0;
        loop78:
        do {
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==XOR_OPERATOR) ) {
                alt78=1;
            }


            switch (alt78) {
        	case 1 :
        	    // Ocl.g:5400:2: () (a0= XOR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_6
        	    {
        	    // Ocl.g:5400:2: ()
        	    // Ocl.g:5400:3: 
        	    {
        	    }


        	    // Ocl.g:5402:2: (a0= XOR_OPERATOR )
        	    // Ocl.g:5403:3: a0= XOR_OPERATOR
        	    {
        	    a0=(Token)match(input,XOR_OPERATOR,FOLLOW_XOR_OPERATOR_in_synpred42_Ocl4645); if (state.failed) return ;

        	    }


        	    pushFollow(FOLLOW_parseop_OclExpressionCS_level_6_in_synpred42_Ocl4666);
        	    rightArg=parseop_OclExpressionCS_level_6();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt78 >= 1 ) break loop78;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(78, input);
                    throw eee;
            }
            cnt78++;
        } while (true);


        }

    }
    // $ANTLR end synpred42_Ocl

    // $ANTLR start synpred43_Ocl
    public final void synpred43_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;


        // Ocl.g:5514:2: ( () (a0= OR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_7 )
        // Ocl.g:5514:2: () (a0= OR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_7
        {
        // Ocl.g:5514:2: ()
        // Ocl.g:5514:2: 
        {
        }


        // Ocl.g:5516:2: (a0= OR_OPERATOR )
        // Ocl.g:5517:2: a0= OR_OPERATOR
        {
        a0=(Token)match(input,OR_OPERATOR,FOLLOW_OR_OPERATOR_in_synpred43_Ocl4723); if (state.failed) return ;

        }


        pushFollow(FOLLOW_parseop_OclExpressionCS_level_7_in_synpred43_Ocl4738);
        rightArg=parseop_OclExpressionCS_level_7();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred43_Ocl

    // $ANTLR start synpred44_Ocl
    public final void synpred44_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;


        // Ocl.g:5513:43: ( ( () (a0= OR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_7 )+ )
        // Ocl.g:5513:43: ( () (a0= OR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_7 )+
        {
        // Ocl.g:5513:43: ( () (a0= OR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_7 )+
        int cnt79=0;
        loop79:
        do {
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==OR_OPERATOR) ) {
                alt79=1;
            }


            switch (alt79) {
        	case 1 :
        	    // Ocl.g:5514:0: () (a0= OR_OPERATOR ) rightArg= parseop_OclExpressionCS_level_7
        	    {
        	    // Ocl.g:5514:2: ()
        	    // Ocl.g:5514:2: 
        	    {
        	    }


        	    // Ocl.g:5516:2: (a0= OR_OPERATOR )
        	    // Ocl.g:5517:2: a0= OR_OPERATOR
        	    {
        	    a0=(Token)match(input,OR_OPERATOR,FOLLOW_OR_OPERATOR_in_synpred44_Ocl4723); if (state.failed) return ;

        	    }


        	    pushFollow(FOLLOW_parseop_OclExpressionCS_level_7_in_synpred44_Ocl4738);
        	    rightArg=parseop_OclExpressionCS_level_7();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt79 >= 1 ) break loop79;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(79, input);
                    throw eee;
            }
            cnt79++;
        } while (true);


        }

    }
    // $ANTLR end synpred44_Ocl

    // $ANTLR start synpred45_Ocl
    public final void synpred45_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;


        // Ocl.g:5628:2: ( () (a0= AND_OPERATOR ) rightArg= parseop_OclExpressionCS_level_8 )
        // Ocl.g:5628:2: () (a0= AND_OPERATOR ) rightArg= parseop_OclExpressionCS_level_8
        {
        // Ocl.g:5628:2: ()
        // Ocl.g:5628:2: 
        {
        }


        // Ocl.g:5630:4: (a0= AND_OPERATOR )
        // Ocl.g:5631:4: a0= AND_OPERATOR
        {
        a0=(Token)match(input,AND_OPERATOR,FOLLOW_AND_OPERATOR_in_synpred45_Ocl4791); if (state.failed) return ;

        }


        pushFollow(FOLLOW_parseop_OclExpressionCS_level_8_in_synpred45_Ocl4804);
        rightArg=parseop_OclExpressionCS_level_8();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred45_Ocl

    // $ANTLR start synpred46_Ocl
    public final void synpred46_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;


        // Ocl.g:5627:43: ( ( () (a0= AND_OPERATOR ) rightArg= parseop_OclExpressionCS_level_8 )+ )
        // Ocl.g:5627:43: ( () (a0= AND_OPERATOR ) rightArg= parseop_OclExpressionCS_level_8 )+
        {
        // Ocl.g:5627:43: ( () (a0= AND_OPERATOR ) rightArg= parseop_OclExpressionCS_level_8 )+
        int cnt80=0;
        loop80:
        do {
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==AND_OPERATOR) ) {
                alt80=1;
            }


            switch (alt80) {
        	case 1 :
        	    // Ocl.g:5628:0: () (a0= AND_OPERATOR ) rightArg= parseop_OclExpressionCS_level_8
        	    {
        	    // Ocl.g:5628:2: ()
        	    // Ocl.g:5628:2: 
        	    {
        	    }


        	    // Ocl.g:5630:4: (a0= AND_OPERATOR )
        	    // Ocl.g:5631:4: a0= AND_OPERATOR
        	    {
        	    a0=(Token)match(input,AND_OPERATOR,FOLLOW_AND_OPERATOR_in_synpred46_Ocl4791); if (state.failed) return ;

        	    }


        	    pushFollow(FOLLOW_parseop_OclExpressionCS_level_8_in_synpred46_Ocl4804);
        	    rightArg=parseop_OclExpressionCS_level_8();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt80 >= 1 ) break loop80;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(80, input);
                    throw eee;
            }
            cnt80++;
        } while (true);


        }

    }
    // $ANTLR end synpred46_Ocl

    // $ANTLR start synpred48_Ocl
    public final void synpred48_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        Token a1=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;


        // Ocl.g:5742:2: ( () ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) ) rightArg= parseop_OclExpressionCS_level_9 )
        // Ocl.g:5742:2: () ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) ) rightArg= parseop_OclExpressionCS_level_9
        {
        // Ocl.g:5742:2: ()
        // Ocl.g:5742:2: 
        {
        }


        // Ocl.g:5744:0: ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) )
        int alt81=2;
        int LA81_0 = input.LA(1);

        if ( (LA81_0==EQUALITY_OPERATOR) ) {
            alt81=1;
        }
        else if ( (LA81_0==NEQUALITY_OPERATOR) ) {
            alt81=2;
        }
        else {
            if (state.backtracking>0) {state.failed=true; return ;}
            NoViableAltException nvae =
                new NoViableAltException("", 81, 0, input);

            throw nvae;

        }
        switch (alt81) {
            case 1 :
                // Ocl.g:5745:0: (a0= EQUALITY_OPERATOR )
                {
                // Ocl.g:5745:4: (a0= EQUALITY_OPERATOR )
                // Ocl.g:5746:4: a0= EQUALITY_OPERATOR
                {
                a0=(Token)match(input,EQUALITY_OPERATOR,FOLLOW_EQUALITY_OPERATOR_in_synpred48_Ocl4859); if (state.failed) return ;

                }


                }
                break;
            case 2 :
                // Ocl.g:5809:2: (a1= NEQUALITY_OPERATOR )
                {
                // Ocl.g:5809:2: (a1= NEQUALITY_OPERATOR )
                // Ocl.g:5810:4: a1= NEQUALITY_OPERATOR
                {
                a1=(Token)match(input,NEQUALITY_OPERATOR,FOLLOW_NEQUALITY_OPERATOR_in_synpred48_Ocl4876); if (state.failed) return ;

                }


                }
                break;

        }


        pushFollow(FOLLOW_parseop_OclExpressionCS_level_9_in_synpred48_Ocl4894);
        rightArg=parseop_OclExpressionCS_level_9();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred48_Ocl

    // $ANTLR start synpred49_Ocl
    public final void synpred49_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        Token a1=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;


        // Ocl.g:5741:43: ( ( () ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) ) rightArg= parseop_OclExpressionCS_level_9 )+ )
        // Ocl.g:5741:43: ( () ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) ) rightArg= parseop_OclExpressionCS_level_9 )+
        {
        // Ocl.g:5741:43: ( () ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) ) rightArg= parseop_OclExpressionCS_level_9 )+
        int cnt83=0;
        loop83:
        do {
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==EQUALITY_OPERATOR||LA83_0==NEQUALITY_OPERATOR) ) {
                alt83=1;
            }


            switch (alt83) {
        	case 1 :
        	    // Ocl.g:5742:0: () ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) ) rightArg= parseop_OclExpressionCS_level_9
        	    {
        	    // Ocl.g:5742:2: ()
        	    // Ocl.g:5742:2: 
        	    {
        	    }


        	    // Ocl.g:5744:0: ( (a0= EQUALITY_OPERATOR ) | (a1= NEQUALITY_OPERATOR ) )
        	    int alt82=2;
        	    int LA82_0 = input.LA(1);

        	    if ( (LA82_0==EQUALITY_OPERATOR) ) {
        	        alt82=1;
        	    }
        	    else if ( (LA82_0==NEQUALITY_OPERATOR) ) {
        	        alt82=2;
        	    }
        	    else {
        	        if (state.backtracking>0) {state.failed=true; return ;}
        	        NoViableAltException nvae =
        	            new NoViableAltException("", 82, 0, input);

        	        throw nvae;

        	    }
        	    switch (alt82) {
        	        case 1 :
        	            // Ocl.g:5745:0: (a0= EQUALITY_OPERATOR )
        	            {
        	            // Ocl.g:5745:4: (a0= EQUALITY_OPERATOR )
        	            // Ocl.g:5746:4: a0= EQUALITY_OPERATOR
        	            {
        	            a0=(Token)match(input,EQUALITY_OPERATOR,FOLLOW_EQUALITY_OPERATOR_in_synpred49_Ocl4859); if (state.failed) return ;

        	            }


        	            }
        	            break;
        	        case 2 :
        	            // Ocl.g:5809:2: (a1= NEQUALITY_OPERATOR )
        	            {
        	            // Ocl.g:5809:2: (a1= NEQUALITY_OPERATOR )
        	            // Ocl.g:5810:4: a1= NEQUALITY_OPERATOR
        	            {
        	            a1=(Token)match(input,NEQUALITY_OPERATOR,FOLLOW_NEQUALITY_OPERATOR_in_synpred49_Ocl4876); if (state.failed) return ;

        	            }


        	            }
        	            break;

        	    }


        	    pushFollow(FOLLOW_parseop_OclExpressionCS_level_9_in_synpred49_Ocl4894);
        	    rightArg=parseop_OclExpressionCS_level_9();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt83 >= 1 ) break loop83;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(83, input);
                    throw eee;
            }
            cnt83++;
        } while (true);


        }

    }
    // $ANTLR end synpred49_Ocl

    // $ANTLR start synpred50_Ocl
    public final void synpred50_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;


        // Ocl.g:5954:2: ( () (a0= RELATIONAL_OPERATOR ) rightArg= parseop_OclExpressionCS_level_11 )
        // Ocl.g:5954:2: () (a0= RELATIONAL_OPERATOR ) rightArg= parseop_OclExpressionCS_level_11
        {
        // Ocl.g:5954:2: ()
        // Ocl.g:5954:2: 
        {
        }


        // Ocl.g:5956:4: (a0= RELATIONAL_OPERATOR )
        // Ocl.g:5957:4: a0= RELATIONAL_OPERATOR
        {
        a0=(Token)match(input,RELATIONAL_OPERATOR,FOLLOW_RELATIONAL_OPERATOR_in_synpred50_Ocl4947); if (state.failed) return ;

        }


        pushFollow(FOLLOW_parseop_OclExpressionCS_level_11_in_synpred50_Ocl4960);
        rightArg=parseop_OclExpressionCS_level_11();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred50_Ocl

    // $ANTLR start synpred51_Ocl
    public final void synpred51_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;


        // Ocl.g:5953:44: ( ( () (a0= RELATIONAL_OPERATOR ) rightArg= parseop_OclExpressionCS_level_11 )+ )
        // Ocl.g:5953:44: ( () (a0= RELATIONAL_OPERATOR ) rightArg= parseop_OclExpressionCS_level_11 )+
        {
        // Ocl.g:5953:44: ( () (a0= RELATIONAL_OPERATOR ) rightArg= parseop_OclExpressionCS_level_11 )+
        int cnt84=0;
        loop84:
        do {
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==RELATIONAL_OPERATOR) ) {
                alt84=1;
            }


            switch (alt84) {
        	case 1 :
        	    // Ocl.g:5954:0: () (a0= RELATIONAL_OPERATOR ) rightArg= parseop_OclExpressionCS_level_11
        	    {
        	    // Ocl.g:5954:2: ()
        	    // Ocl.g:5954:2: 
        	    {
        	    }


        	    // Ocl.g:5956:4: (a0= RELATIONAL_OPERATOR )
        	    // Ocl.g:5957:4: a0= RELATIONAL_OPERATOR
        	    {
        	    a0=(Token)match(input,RELATIONAL_OPERATOR,FOLLOW_RELATIONAL_OPERATOR_in_synpred51_Ocl4947); if (state.failed) return ;

        	    }


        	    pushFollow(FOLLOW_parseop_OclExpressionCS_level_11_in_synpred51_Ocl4960);
        	    rightArg=parseop_OclExpressionCS_level_11();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt84 >= 1 ) break loop84;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(84, input);
                    throw eee;
            }
            cnt84++;
        } while (true);


        }

    }
    // $ANTLR end synpred51_Ocl

    // $ANTLR start synpred52_Ocl
    public final void synpred52_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;


        // Ocl.g:6068:2: ( () (a0= ADDITIVE_OPERATOR ) rightArg= parseop_OclExpressionCS_level_12 )
        // Ocl.g:6068:2: () (a0= ADDITIVE_OPERATOR ) rightArg= parseop_OclExpressionCS_level_12
        {
        // Ocl.g:6068:2: ()
        // Ocl.g:6068:2: 
        {
        }


        // Ocl.g:6070:4: (a0= ADDITIVE_OPERATOR )
        // Ocl.g:6071:4: a0= ADDITIVE_OPERATOR
        {
        a0=(Token)match(input,ADDITIVE_OPERATOR,FOLLOW_ADDITIVE_OPERATOR_in_synpred52_Ocl5013); if (state.failed) return ;

        }


        pushFollow(FOLLOW_parseop_OclExpressionCS_level_12_in_synpred52_Ocl5026);
        rightArg=parseop_OclExpressionCS_level_12();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred52_Ocl

    // $ANTLR start synpred53_Ocl
    public final void synpred53_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;


        // Ocl.g:6067:44: ( ( () (a0= ADDITIVE_OPERATOR ) rightArg= parseop_OclExpressionCS_level_12 )+ )
        // Ocl.g:6067:44: ( () (a0= ADDITIVE_OPERATOR ) rightArg= parseop_OclExpressionCS_level_12 )+
        {
        // Ocl.g:6067:44: ( () (a0= ADDITIVE_OPERATOR ) rightArg= parseop_OclExpressionCS_level_12 )+
        int cnt85=0;
        loop85:
        do {
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( (LA85_0==ADDITIVE_OPERATOR) ) {
                alt85=1;
            }


            switch (alt85) {
        	case 1 :
        	    // Ocl.g:6068:0: () (a0= ADDITIVE_OPERATOR ) rightArg= parseop_OclExpressionCS_level_12
        	    {
        	    // Ocl.g:6068:2: ()
        	    // Ocl.g:6068:2: 
        	    {
        	    }


        	    // Ocl.g:6070:4: (a0= ADDITIVE_OPERATOR )
        	    // Ocl.g:6071:4: a0= ADDITIVE_OPERATOR
        	    {
        	    a0=(Token)match(input,ADDITIVE_OPERATOR,FOLLOW_ADDITIVE_OPERATOR_in_synpred53_Ocl5013); if (state.failed) return ;

        	    }


        	    pushFollow(FOLLOW_parseop_OclExpressionCS_level_12_in_synpred53_Ocl5026);
        	    rightArg=parseop_OclExpressionCS_level_12();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt85 >= 1 ) break loop85;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(85, input);
                    throw eee;
            }
            cnt85++;
        } while (true);


        }

    }
    // $ANTLR end synpred53_Ocl

    // $ANTLR start synpred54_Ocl
    public final void synpred54_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;


        // Ocl.g:6182:2: ( () (a0= MULT_OPERATOR ) rightArg= parseop_OclExpressionCS_level_13 )
        // Ocl.g:6182:2: () (a0= MULT_OPERATOR ) rightArg= parseop_OclExpressionCS_level_13
        {
        // Ocl.g:6182:2: ()
        // Ocl.g:6182:2: 
        {
        }


        // Ocl.g:6184:4: (a0= MULT_OPERATOR )
        // Ocl.g:6185:4: a0= MULT_OPERATOR
        {
        a0=(Token)match(input,MULT_OPERATOR,FOLLOW_MULT_OPERATOR_in_synpred54_Ocl5079); if (state.failed) return ;

        }


        pushFollow(FOLLOW_parseop_OclExpressionCS_level_13_in_synpred54_Ocl5092);
        rightArg=parseop_OclExpressionCS_level_13();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred54_Ocl

    // $ANTLR start synpred55_Ocl
    public final void synpred55_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS rightArg =null;


        // Ocl.g:6181:44: ( ( () (a0= MULT_OPERATOR ) rightArg= parseop_OclExpressionCS_level_13 )+ )
        // Ocl.g:6181:44: ( () (a0= MULT_OPERATOR ) rightArg= parseop_OclExpressionCS_level_13 )+
        {
        // Ocl.g:6181:44: ( () (a0= MULT_OPERATOR ) rightArg= parseop_OclExpressionCS_level_13 )+
        int cnt86=0;
        loop86:
        do {
            int alt86=2;
            int LA86_0 = input.LA(1);

            if ( (LA86_0==MULT_OPERATOR) ) {
                alt86=1;
            }


            switch (alt86) {
        	case 1 :
        	    // Ocl.g:6182:0: () (a0= MULT_OPERATOR ) rightArg= parseop_OclExpressionCS_level_13
        	    {
        	    // Ocl.g:6182:2: ()
        	    // Ocl.g:6182:2: 
        	    {
        	    }


        	    // Ocl.g:6184:4: (a0= MULT_OPERATOR )
        	    // Ocl.g:6185:4: a0= MULT_OPERATOR
        	    {
        	    a0=(Token)match(input,MULT_OPERATOR,FOLLOW_MULT_OPERATOR_in_synpred55_Ocl5079); if (state.failed) return ;

        	    }


        	    pushFollow(FOLLOW_parseop_OclExpressionCS_level_13_in_synpred55_Ocl5092);
        	    rightArg=parseop_OclExpressionCS_level_13();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }
        	    break;

        	default :
        	    if ( cnt86 >= 1 ) break loop86;
        	    if (state.backtracking>0) {state.failed=true; return ;}
                    EarlyExitException eee =
                        new EarlyExitException(86, input);
                    throw eee;
            }
            cnt86++;
        } while (true);


        }

    }
    // $ANTLR end synpred55_Ocl

    // $ANTLR start synpred57_Ocl
    public final void synpred57_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        tudresden.ocl20.pivot.language.ocl.OclExpressionCS arg =null;


        // Ocl.g:6378:4: ( (a0= NOT_OPERATOR ) arg= parseop_OclExpressionCS_level_14 )
        // Ocl.g:6378:4: (a0= NOT_OPERATOR ) arg= parseop_OclExpressionCS_level_14
        {
        // Ocl.g:6378:4: (a0= NOT_OPERATOR )
        // Ocl.g:6379:4: a0= NOT_OPERATOR
        {
        a0=(Token)match(input,NOT_OPERATOR,FOLLOW_NOT_OPERATOR_in_synpred57_Ocl5156); if (state.failed) return ;

        }


        pushFollow(FOLLOW_parseop_OclExpressionCS_level_14_in_synpred57_Ocl5169);
        arg=parseop_OclExpressionCS_level_14();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred57_Ocl

    // $ANTLR start synpred58_Ocl
    public final void synpred58_Ocl_fragment() throws RecognitionException {
        Token a2=null;
        tudresden.ocl20.pivot.language.ocl.ImplicitFeatureCallCS a3_0 =null;


        // Ocl.g:6582:4: ( ( (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) ) )
        // Ocl.g:6582:4: ( (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) )
        {
        // Ocl.g:6582:4: ( (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) )
        // Ocl.g:6583:4: (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS )
        {
        // Ocl.g:6583:4: (a2= NAVIGATION_OPERATOR )
        // Ocl.g:6584:4: a2= NAVIGATION_OPERATOR
        {
        a2=(Token)match(input,NAVIGATION_OPERATOR,FOLLOW_NAVIGATION_OPERATOR_in_synpred58_Ocl5243); if (state.failed) return ;

        }


        // Ocl.g:6629:6: (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS )
        // Ocl.g:6630:6: a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS_in_synpred58_Ocl5258);
        a3_0=parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }

    }
    // $ANTLR end synpred58_Ocl

    // $ANTLR start synpred59_Ocl
    public final void synpred59_Ocl_fragment() throws RecognitionException {
        Token a0=null;
        Token a2=null;
        tudresden.ocl20.pivot.language.ocl.ImplicitFeatureCallCS a1_0 =null;

        tudresden.ocl20.pivot.language.ocl.ImplicitFeatureCallCS a3_0 =null;


        // Ocl.g:6470:4: ( (a0= NAVIGATION_OPERATOR ) (a1_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) ( ( (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) ) )* )
        // Ocl.g:6470:4: (a0= NAVIGATION_OPERATOR ) (a1_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) ( ( (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) ) )*
        {
        // Ocl.g:6470:4: (a0= NAVIGATION_OPERATOR )
        // Ocl.g:6471:4: a0= NAVIGATION_OPERATOR
        {
        a0=(Token)match(input,NAVIGATION_OPERATOR,FOLLOW_NAVIGATION_OPERATOR_in_synpred59_Ocl5210); if (state.failed) return ;

        }


        // Ocl.g:6516:6: (a1_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS )
        // Ocl.g:6517:6: a1_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS_in_synpred59_Ocl5225);
        a1_0=parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS();

        state._fsp--;
        if (state.failed) return ;

        }


        // Ocl.g:6581:0: ( ( (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) ) )*
        loop87:
        do {
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( (LA87_0==NAVIGATION_OPERATOR) ) {
                alt87=1;
            }


            switch (alt87) {
        	case 1 :
        	    // Ocl.g:6582:0: ( (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) )
        	    {
        	    // Ocl.g:6582:4: ( (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS ) )
        	    // Ocl.g:6583:4: (a2= NAVIGATION_OPERATOR ) (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS )
        	    {
        	    // Ocl.g:6583:4: (a2= NAVIGATION_OPERATOR )
        	    // Ocl.g:6584:4: a2= NAVIGATION_OPERATOR
        	    {
        	    a2=(Token)match(input,NAVIGATION_OPERATOR,FOLLOW_NAVIGATION_OPERATOR_in_synpred59_Ocl5243); if (state.failed) return ;

        	    }


        	    // Ocl.g:6629:6: (a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS )
        	    // Ocl.g:6630:6: a3_0= parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS
        	    {
        	    pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS_in_synpred59_Ocl5258);
        	    a3_0=parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS();

        	    state._fsp--;
        	    if (state.failed) return ;

        	    }


        	    }


        	    }
        	    break;

        	default :
        	    break loop87;
            }
        } while (true);


        }

    }
    // $ANTLR end synpred59_Ocl

    // $ANTLR start synpred60_Ocl
    public final void synpred60_Ocl_fragment() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OperationCallOnSelfExpCS c0 =null;


        // Ocl.g:6768:4: (c0= parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS )
        // Ocl.g:6768:4: c0= parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS_in_synpred60_Ocl5304);
        c0=parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred60_Ocl

    // $ANTLR start synpred61_Ocl
    public final void synpred61_Ocl_fragment() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.StaticOperationCallExpCS c1 =null;


        // Ocl.g:6769:2: (c1= parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS )
        // Ocl.g:6769:2: c1= parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS_in_synpred61_Ocl5312);
        c1=parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred61_Ocl

    // $ANTLR start synpred62_Ocl
    public final void synpred62_Ocl_fragment() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.EnumLiteralOrStaticPropertyExpCS c2 =null;


        // Ocl.g:6770:2: (c2= parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS )
        // Ocl.g:6770:2: c2= parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS_in_synpred62_Ocl5320);
        c2=parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred62_Ocl

    // $ANTLR start synpred63_Ocl
    public final void synpred63_Ocl_fragment() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.TupleLiteralExpCS c3 =null;


        // Ocl.g:6771:2: (c3= parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS )
        // Ocl.g:6771:2: c3= parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS_in_synpred63_Ocl5328);
        c3=parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred63_Ocl

    // $ANTLR start synpred65_Ocl
    public final void synpred65_Ocl_fragment() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.CollectionLiteralExpCS c5 =null;


        // Ocl.g:6773:2: (c5= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS )
        // Ocl.g:6773:2: c5= parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS_in_synpred65_Ocl5344);
        c5=parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred65_Ocl

    // $ANTLR start synpred66_Ocl
    public final void synpred66_Ocl_fragment() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.CollectionTypeLiteralExpCS c6 =null;


        // Ocl.g:6774:2: (c6= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS )
        // Ocl.g:6774:2: c6= parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS_in_synpred66_Ocl5352);
        c6=parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred66_Ocl

    // $ANTLR start synpred67_Ocl
    public final void synpred67_Ocl_fragment() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.TupleTypeLiteralExpCS c7 =null;


        // Ocl.g:6775:2: (c7= parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS )
        // Ocl.g:6775:2: c7= parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS_in_synpred67_Ocl5360);
        c7=parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred67_Ocl

    // $ANTLR start synpred68_Ocl
    public final void synpred68_Ocl_fragment() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.PropertyCallOnSelfExpCS c8 =null;


        // Ocl.g:6776:2: (c8= parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS )
        // Ocl.g:6776:2: c8= parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS_in_synpred68_Ocl5368);
        c8=parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred68_Ocl

    // $ANTLR start synpred70_Ocl
    public final void synpred70_Ocl_fragment() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.RealLiteralExpCS c10 =null;


        // Ocl.g:6778:2: (c10= parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS )
        // Ocl.g:6778:2: c10= parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS_in_synpred70_Ocl5384);
        c10=parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred70_Ocl

    // $ANTLR start synpred71_Ocl
    public final void synpred71_Ocl_fragment() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.IntegerLiteralExpCS c11 =null;


        // Ocl.g:6779:2: (c11= parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS )
        // Ocl.g:6779:2: c11= parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS_in_synpred71_Ocl5392);
        c11=parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred71_Ocl

    // $ANTLR start synpred76_Ocl
    public final void synpred76_Ocl_fragment() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.NamedLiteralExpCS c16 =null;


        // Ocl.g:6784:2: (c16= parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS )
        // Ocl.g:6784:2: c16= parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS_in_synpred76_Ocl5432);
        c16=parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred76_Ocl

    // $ANTLR start synpred93_Ocl
    public final void synpred93_Ocl_fragment() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.OperationContextDeclarationCS c0 =null;


        // Ocl.g:9722:4: (c0= parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS )
        // Ocl.g:9722:4: c0= parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS_in_synpred93_Ocl6710);
        c0=parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred93_Ocl

    // $ANTLR start synpred94_Ocl
    public final void synpred94_Ocl_fragment() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.AttributeContextDeclarationCS c1 =null;


        // Ocl.g:9723:2: (c1= parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS )
        // Ocl.g:9723:2: c1= parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS_in_synpred94_Ocl6718);
        c1=parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred94_Ocl

    // $ANTLR start synpred97_Ocl
    public final void synpred97_Ocl_fragment() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.TypePathNameSimpleCS c0 =null;


        // Ocl.g:9738:4: (c0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS )
        // Ocl.g:9738:4: c0= parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS_in_synpred97_Ocl6780);
        c0=parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred97_Ocl

    // $ANTLR start synpred107_Ocl
    public final void synpred107_Ocl_fragment() throws RecognitionException {
        tudresden.ocl20.pivot.language.ocl.CollectionRangeCS c0 =null;


        // Ocl.g:9790:4: (c0= parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS )
        // Ocl.g:9790:4: c0= parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS
        {
        pushFollow(FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS_in_synpred107_Ocl6993);
        c0=parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS();

        state._fsp--;
        if (state.failed) return ;

        }

    }
    // $ANTLR end synpred107_Ocl

    // Delegated rules

    public final boolean synpred43_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred43_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred57_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred57_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred58_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred58_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred41_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred41_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred68_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred68_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred49_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred49_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred40_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred40_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred60_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred60_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred76_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred76_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred42_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred42_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred32_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred32_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred93_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred93_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred45_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred45_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred107_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred107_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred53_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred53_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred67_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred67_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred97_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred97_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred54_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred54_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred59_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred59_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred39_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred39_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred51_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred51_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred94_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred94_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred52_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred52_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred55_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred55_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred48_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred48_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred62_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred62_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred71_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred71_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred61_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred61_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred63_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred63_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred46_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred46_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred50_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred50_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred70_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred70_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred65_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred65_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred66_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred66_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred44_Ocl() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred44_Ocl_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


 

    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS_in_start82 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithoutNamespaceCS_in_start96 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_start103 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS169 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS_in_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS187 = new BitSet(new long[]{0x0000042000000000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS220 = new BitSet(new long[]{0x0000042000000000L});
    public static final BitSet FOLLOW_42_in_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithNamespaceCS261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS294 = new BitSet(new long[]{0x0000000200000002L});
    public static final BitSet FOLLOW_33_in_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS324 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS_in_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationNestedNamespaceCS350 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_PackageDeclarationWithoutNamespaceCS415 = new BitSet(new long[]{0x0000002000000002L});
    public static final BitSet FOLLOW_37_in_parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS456 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS474 = new BitSet(new long[]{0x0030001000000000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS501 = new BitSet(new long[]{0x0030001000000002L});
    public static final BitSet FOLLOW_37_in_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS542 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS560 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS578 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS596 = new BitSet(new long[]{0x0000208100000000L});
    public static final BitSet FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS626 = new BitSet(new long[]{0x0000000800800080L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS652 = new BitSet(new long[]{0x0000208000000000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS_in_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS697 = new BitSet(new long[]{0x0000208000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS_in_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS724 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS765 = new BitSet(new long[]{0x0000000800800080L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS783 = new BitSet(new long[]{0x0000404002000000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS_in_parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS810 = new BitSet(new long[]{0x0000404002000002L});
    public static final BitSet FOLLOW_45_in_parse_tudresden_ocl20_pivot_language_ocl_InitValueCS851 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_InitValueCS865 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_InitValueCS883 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS916 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS930 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS948 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS981 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS1004 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS1030 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS1048 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_STATIC_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS1096 = new BitSet(new long[]{0x0000004000000000L});
    public static final BitSet FOLLOW_38_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS1142 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS1156 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS1174 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPropertyCS1211 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS1248 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_EQUALITY_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS1270 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS1295 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS1328 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS1357 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS1398 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS1416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS1449 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS1478 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS1519 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS1537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_36_in_parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS1570 = new BitSet(new long[]{0x0000000100800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS1599 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS1640 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS1658 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1695 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1713 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1731 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1752 = new BitSet(new long[]{0x0000000020800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ParameterCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1781 = new BitSet(new long[]{0x0000000060000000L});
    public static final BitSet FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1822 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ParameterCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1856 = new BitSet(new long[]{0x0000000060000000L});
    public static final BitSet FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1930 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1953 = new BitSet(new long[]{0x0000000800800080L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInContextCS1979 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS2039 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS2060 = new BitSet(new long[]{0x0000000020800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ParameterCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS2089 = new BitSet(new long[]{0x0000000060000000L});
    public static final BitSet FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS2130 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ParameterCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS2164 = new BitSet(new long[]{0x0000000060000000L});
    public static final BitSet FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS2238 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS2261 = new BitSet(new long[]{0x0000000800800080L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationDefinitionInDefCS2287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_ParameterCS2347 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_ParameterCS2368 = new BitSet(new long[]{0x0000000800800080L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_ParameterCS2386 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EQUALITY_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2428 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_NEQUALITY_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2466 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_NOT_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2504 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_AND_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2542 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_OR_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2580 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_XOR_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2618 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_IMPLIES_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2656 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2694 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2728 = new BitSet(new long[]{0x0006880838BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2757 = new BitSet(new long[]{0x0000000060000000L});
    public static final BitSet FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2798 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2832 = new BitSet(new long[]{0x0000000060000000L});
    public static final BitSet FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS2906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitPropertyCallCS2939 = new BitSet(new long[]{0x0000000000001002L});
    public static final BitSet FOLLOW_IS_MARKED_PRE_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitPropertyCallCS2975 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ITERATOR_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS3040 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS3061 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS3090 = new BitSet(new long[]{0x0100000040000000L});
    public static final BitSet FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS3131 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS3165 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_56_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS3226 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS3263 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS3281 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS3310 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS3324 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS_in_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS3353 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS3381 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS_in_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS3418 = new BitSet(new long[]{0x0100000000000000L});
    public static final BitSet FOLLOW_56_in_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS3436 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS3454 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS3472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS3505 = new BitSet(new long[]{0x0000000100000002L});
    public static final BitSet FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS3532 = new BitSet(new long[]{0x0000000800800080L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS3558 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS3618 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS3658 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS3679 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS3697 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS3730 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS3744 = new BitSet(new long[]{0x0000000020800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS_in_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS3767 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS3793 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_COLLECTION_TYPES_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS3826 = new BitSet(new long[]{0x0000000010000002L});
    public static final BitSet FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS3856 = new BitSet(new long[]{0x0000000800800080L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS3882 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS3910 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS3962 = new BitSet(new long[]{0x0000000100000000L});
    public static final BitSet FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS3980 = new BitSet(new long[]{0x0000000800800080L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS3998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS4035 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS4062 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithoutInitListCS4088 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_SimpleNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS4148 = new BitSet(new long[]{0x0000000100000100L});
    public static final BitSet FOLLOW_32_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS4175 = new BitSet(new long[]{0x0000000800800080L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS4201 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_EQUALITY_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS4246 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS4271 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS4308 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS4335 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS_in_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS4361 = new BitSet(new long[]{0x0000000040000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS4421 = new BitSet(new long[]{0x0000000080000000L});
    public static final BitSet FOLLOW_31_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS4439 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS4457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsOclExpCS4494 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_5_in_parseop_OclExpressionCS_level_44527 = new BitSet(new long[]{0x0000000000000202L});
    public static final BitSet FOLLOW_IMPLIES_OPERATOR_in_parseop_OclExpressionCS_level_44552 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_5_in_parseop_OclExpressionCS_level_44579 = new BitSet(new long[]{0x0000000000000202L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_6_in_parseop_OclExpressionCS_level_54625 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_XOR_OPERATOR_in_parseop_OclExpressionCS_level_54645 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_6_in_parseop_OclExpressionCS_level_54666 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_7_in_parseop_OclExpressionCS_level_64707 = new BitSet(new long[]{0x0000000000100002L});
    public static final BitSet FOLLOW_OR_OPERATOR_in_parseop_OclExpressionCS_level_64723 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_7_in_parseop_OclExpressionCS_level_64738 = new BitSet(new long[]{0x0000000000100002L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_8_in_parseop_OclExpressionCS_level_74776 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_AND_OPERATOR_in_parseop_OclExpressionCS_level_74791 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_8_in_parseop_OclExpressionCS_level_74804 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_9_in_parseop_OclExpressionCS_level_84842 = new BitSet(new long[]{0x0000000000040102L});
    public static final BitSet FOLLOW_EQUALITY_OPERATOR_in_parseop_OclExpressionCS_level_84859 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_NEQUALITY_OPERATOR_in_parseop_OclExpressionCS_level_84876 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_9_in_parseop_OclExpressionCS_level_84894 = new BitSet(new long[]{0x0000000000040102L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_11_in_parseop_OclExpressionCS_level_94932 = new BitSet(new long[]{0x0000000000400002L});
    public static final BitSet FOLLOW_RELATIONAL_OPERATOR_in_parseop_OclExpressionCS_level_94947 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_11_in_parseop_OclExpressionCS_level_94960 = new BitSet(new long[]{0x0000000000400002L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_12_in_parseop_OclExpressionCS_level_114998 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_ADDITIVE_OPERATOR_in_parseop_OclExpressionCS_level_115013 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_12_in_parseop_OclExpressionCS_level_115026 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_13_in_parseop_OclExpressionCS_level_125064 = new BitSet(new long[]{0x0000000000010002L});
    public static final BitSet FOLLOW_MULT_OPERATOR_in_parseop_OclExpressionCS_level_125079 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_13_in_parseop_OclExpressionCS_level_125092 = new BitSet(new long[]{0x0000000000010002L});
    public static final BitSet FOLLOW_ADDITIVE_OPERATOR_in_parseop_OclExpressionCS_level_135132 = new BitSet(new long[]{0x0006880818BC0BE0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_14_in_parseop_OclExpressionCS_level_135145 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NOT_OPERATOR_in_parseop_OclExpressionCS_level_135156 = new BitSet(new long[]{0x0006880818BC0BE0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_14_in_parseop_OclExpressionCS_level_135169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_14_in_parseop_OclExpressionCS_level_135179 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_20_in_parseop_OclExpressionCS_level_145201 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_NAVIGATION_OPERATOR_in_parseop_OclExpressionCS_level_145210 = new BitSet(new long[]{0x00010000089C2320L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS_in_parseop_OclExpressionCS_level_145225 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_NAVIGATION_OPERATOR_in_parseop_OclExpressionCS_level_145243 = new BitSet(new long[]{0x00010000089C2320L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS_in_parseop_OclExpressionCS_level_145258 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS_in_parseop_OclExpressionCS_level_205304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS_in_parseop_OclExpressionCS_level_205312 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS_in_parseop_OclExpressionCS_level_205320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS_in_parseop_OclExpressionCS_level_205328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IfExpCS_in_parseop_OclExpressionCS_level_205336 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS_in_parseop_OclExpressionCS_level_205344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS_in_parseop_OclExpressionCS_level_205352 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS_in_parseop_OclExpressionCS_level_205360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS_in_parseop_OclExpressionCS_level_205368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_LetExpCS_in_parseop_OclExpressionCS_level_205376 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS_in_parseop_OclExpressionCS_level_205384 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS_in_parseop_OclExpressionCS_level_205392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_BooleanLiteralExpCS_in_parseop_OclExpressionCS_level_205400 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_StringLiteralExpCS_in_parseop_OclExpressionCS_level_205408 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_InvalidLiteralExpCS_in_parseop_OclExpressionCS_level_205416 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_NullLiteralExpCS_in_parseop_OclExpressionCS_level_205424 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS_in_parseop_OclExpressionCS_level_205432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS_in_parseop_OclExpressionCS_level_205440 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EQUALITY_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5466 = new BitSet(new long[]{0x0000000010001000L});
    public static final BitSet FOLLOW_NEQUALITY_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5483 = new BitSet(new long[]{0x0000000010001000L});
    public static final BitSet FOLLOW_NOT_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5500 = new BitSet(new long[]{0x0000000010001000L});
    public static final BitSet FOLLOW_AND_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5517 = new BitSet(new long[]{0x0000000010001000L});
    public static final BitSet FOLLOW_OR_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5534 = new BitSet(new long[]{0x0000000010001000L});
    public static final BitSet FOLLOW_XOR_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5551 = new BitSet(new long[]{0x0000000010001000L});
    public static final BitSet FOLLOW_IMPLIES_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5568 = new BitSet(new long[]{0x0000000010001000L});
    public static final BitSet FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5585 = new BitSet(new long[]{0x0000000010001000L});
    public static final BitSet FOLLOW_IS_MARKED_PRE_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5609 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5630 = new BitSet(new long[]{0x0006880838BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5647 = new BitSet(new long[]{0x0000000060000000L});
    public static final BitSet FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5663 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5676 = new BitSet(new long[]{0x0000000060000000L});
    public static final BitSet FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS5704 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS5732 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS5744 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS5757 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS5770 = new BitSet(new long[]{0x0006880838BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS5787 = new BitSet(new long[]{0x0000000060000000L});
    public static final BitSet FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS5803 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS5816 = new BitSet(new long[]{0x0000000060000000L});
    public static final BitSet FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS5844 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS_in_parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS5872 = new BitSet(new long[]{0x0000000200000000L});
    public static final BitSet FOLLOW_33_in_parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS5884 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS5897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS5925 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS5936 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitListCS_in_parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS5949 = new BitSet(new long[]{0x0200000000000000L});
    public static final BitSet FOLLOW_57_in_parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS5961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_parse_tudresden_ocl20_pivot_language_ocl_IfExpCS5987 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_IfExpCS6000 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_54_in_parse_tudresden_ocl20_pivot_language_ocl_IfExpCS6012 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_IfExpCS6025 = new BitSet(new long[]{0x0000010000000000L});
    public static final BitSet FOLLOW_40_in_parse_tudresden_ocl20_pivot_language_ocl_IfExpCS6037 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_IfExpCS6050 = new BitSet(new long[]{0x0000020000000000L});
    public static final BitSet FOLLOW_41_in_parse_tudresden_ocl20_pivot_language_ocl_IfExpCS6062 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS6090 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_55_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS6102 = new BitSet(new long[]{0x0206880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS6119 = new BitSet(new long[]{0x0200000040000000L});
    public static final BitSet FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS6135 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS6148 = new BitSet(new long[]{0x0200000040000000L});
    public static final BitSet FOLLOW_57_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS6176 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS6204 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS6233 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS6262 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_IS_MARKED_PRE_in_parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS6277 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_parse_tudresden_ocl20_pivot_language_ocl_LetExpCS6305 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS_in_parse_tudresden_ocl20_pivot_language_ocl_LetExpCS6318 = new BitSet(new long[]{0x0000100040000000L});
    public static final BitSet FOLLOW_30_in_parse_tudresden_ocl20_pivot_language_ocl_LetExpCS6334 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_VariableDeclarationWithInitCS_in_parse_tudresden_ocl20_pivot_language_ocl_LetExpCS6347 = new BitSet(new long[]{0x0000100040000000L});
    public static final BitSet FOLLOW_44_in_parse_tudresden_ocl20_pivot_language_ocl_LetExpCS6367 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_LetExpCS6380 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_LITERAL_in_parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS6409 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_NAVIGATION_OPERATOR_in_parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS6424 = new BitSet(new long[]{0x0000000000000C00L});
    public static final BitSet FOLLOW_INTEGER_0_in_parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS6441 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_LITERAL_in_parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS6458 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_INTEGER_LITERAL_in_parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS6493 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_BOOLEAN_LITERAL_in_parse_tudresden_ocl20_pivot_language_ocl_BooleanLiteralExpCS6523 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_QUOTED_39_39_in_parse_tudresden_ocl20_pivot_language_ocl_StringLiteralExpCS6553 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_parse_tudresden_ocl20_pivot_language_ocl_InvalidLiteralExpCS6581 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_parse_tudresden_ocl20_pivot_language_ocl_NullLiteralExpCS6607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_SIMPLE_NAME_in_parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS6635 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS6663 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS_in_parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS6676 = new BitSet(new long[]{0x0000000020000000L});
    public static final BitSet FOLLOW_29_in_parse_tudresden_ocl20_pivot_language_ocl_BracketExpCS6688 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS6710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS6718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ClassifierContextDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_ContextDeclarationCS6726 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PreConditionDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS6745 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PostConditionDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS6753 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_BodyDeclarationCS_in_parse_tudresden_ocl20_pivot_language_ocl_PrePostOrBodyDeclarationCS6761 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS_in_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS6780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS_in_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameCS6788 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS_in_parse_tudresden_ocl20_pivot_language_ocl_TypeCS6807 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameNestedCS_in_parse_tudresden_ocl20_pivot_language_ocl_TypeCS6815 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeCS_in_parse_tudresden_ocl20_pivot_language_ocl_TypeCS6823 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeIdentifierCS_in_parse_tudresden_ocl20_pivot_language_ocl_TypeCS6831 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_InitValueCS_in_parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS6850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_DeriveValueCS_in_parse_tudresden_ocl20_pivot_language_ocl_InitOrDeriveValueCS6858 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_InvariantExpCS_in_parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS6877 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpCS_in_parse_tudresden_ocl20_pivot_language_ocl_InvariantOrDefinitionCS6885 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_4_in_parse_tudresden_ocl20_pivot_language_ocl_OclExpressionCS6904 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPropertyCS_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS6923 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpOperationCS_in_parse_tudresden_ocl20_pivot_language_ocl_DefinitionExpPartCS6931 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ImplicitOperationCallCS_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS6950 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ImplicitPropertyCallCS_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS6958 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpCS_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS6966 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IterateExpCS_in_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS6974 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS6993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsOclExpCS_in_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralPartsCS7001 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IteratorExpVariableCS_in_synpred32_Ocl3353 = new BitSet(new long[]{0x0000000400000000L});
    public static final BitSet FOLLOW_34_in_synpred32_Ocl3381 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPLIES_OPERATOR_in_synpred39_Ocl4552 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_5_in_synpred39_Ocl4579 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_IMPLIES_OPERATOR_in_synpred40_Ocl4552 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_5_in_synpred40_Ocl4579 = new BitSet(new long[]{0x0000000000000202L});
    public static final BitSet FOLLOW_XOR_OPERATOR_in_synpred41_Ocl4645 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_6_in_synpred41_Ocl4666 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_XOR_OPERATOR_in_synpred42_Ocl4645 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_6_in_synpred42_Ocl4666 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_OR_OPERATOR_in_synpred43_Ocl4723 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_7_in_synpred43_Ocl4738 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_OR_OPERATOR_in_synpred44_Ocl4723 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_7_in_synpred44_Ocl4738 = new BitSet(new long[]{0x0000000000100002L});
    public static final BitSet FOLLOW_AND_OPERATOR_in_synpred45_Ocl4791 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_8_in_synpred45_Ocl4804 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_AND_OPERATOR_in_synpred46_Ocl4791 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_8_in_synpred46_Ocl4804 = new BitSet(new long[]{0x0000000000000022L});
    public static final BitSet FOLLOW_EQUALITY_OPERATOR_in_synpred48_Ocl4859 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_NEQUALITY_OPERATOR_in_synpred48_Ocl4876 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_9_in_synpred48_Ocl4894 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_EQUALITY_OPERATOR_in_synpred49_Ocl4859 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_NEQUALITY_OPERATOR_in_synpred49_Ocl4876 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_9_in_synpred49_Ocl4894 = new BitSet(new long[]{0x0000000000040102L});
    public static final BitSet FOLLOW_RELATIONAL_OPERATOR_in_synpred50_Ocl4947 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_11_in_synpred50_Ocl4960 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_RELATIONAL_OPERATOR_in_synpred51_Ocl4947 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_11_in_synpred51_Ocl4960 = new BitSet(new long[]{0x0000000000400002L});
    public static final BitSet FOLLOW_ADDITIVE_OPERATOR_in_synpred52_Ocl5013 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_12_in_synpred52_Ocl5026 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ADDITIVE_OPERATOR_in_synpred53_Ocl5013 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_12_in_synpred53_Ocl5026 = new BitSet(new long[]{0x0000000000000012L});
    public static final BitSet FOLLOW_MULT_OPERATOR_in_synpred54_Ocl5079 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_13_in_synpred54_Ocl5092 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_MULT_OPERATOR_in_synpred55_Ocl5079 = new BitSet(new long[]{0x0006880818BC0BF0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_13_in_synpred55_Ocl5092 = new BitSet(new long[]{0x0000000000010002L});
    public static final BitSet FOLLOW_NOT_OPERATOR_in_synpred57_Ocl5156 = new BitSet(new long[]{0x0006880818BC0BE0L});
    public static final BitSet FOLLOW_parseop_OclExpressionCS_level_14_in_synpred57_Ocl5169 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAVIGATION_OPERATOR_in_synpred58_Ocl5243 = new BitSet(new long[]{0x00010000089C2320L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS_in_synpred58_Ocl5258 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NAVIGATION_OPERATOR_in_synpred59_Ocl5210 = new BitSet(new long[]{0x00010000089C2320L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS_in_synpred59_Ocl5225 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_NAVIGATION_OPERATOR_in_synpred59_Ocl5243 = new BitSet(new long[]{0x00010000089C2320L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_ImplicitFeatureCallCS_in_synpred59_Ocl5258 = new BitSet(new long[]{0x0000000000020002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OperationCallOnSelfExpCS_in_synpred60_Ocl5304 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_StaticOperationCallExpCS_in_synpred61_Ocl5312 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_EnumLiteralOrStaticPropertyExpCS_in_synpred62_Ocl5320 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TupleLiteralExpCS_in_synpred63_Ocl5328 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionLiteralExpCS_in_synpred65_Ocl5344 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionTypeLiteralExpCS_in_synpred66_Ocl5352 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TupleTypeLiteralExpCS_in_synpred67_Ocl5360 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_PropertyCallOnSelfExpCS_in_synpred68_Ocl5368 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_RealLiteralExpCS_in_synpred70_Ocl5384 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_IntegerLiteralExpCS_in_synpred71_Ocl5392 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_NamedLiteralExpCS_in_synpred76_Ocl5432 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_OperationContextDeclarationCS_in_synpred93_Ocl6710 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_AttributeContextDeclarationCS_in_synpred94_Ocl6718 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_TypePathNameSimpleCS_in_synpred97_Ocl6780 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_tudresden_ocl20_pivot_language_ocl_CollectionRangeCS_in_synpred107_Ocl6993 = new BitSet(new long[]{0x0000000000000002L});

}