\select@language {english}
\contentsline {chapter}{Abstract}{3}{section*.5}
\contentsline {part}{Using Dresden OCL}{11}{section*.7}
\contentsline {chapter}{\numberline {1}About Dresden OCL}{13}{chapter.1}
\contentsline {section}{\numberline {1.1}Supported Version of OCL}{13}{section.1.1}
\contentsline {subsection}{\numberline {1.1.1}Missing Features of OCL 2.2 in DresdenOCL}{13}{subsection.1.1.1}
\contentsline {subsection}{\numberline {1.1.2}Different Semantics of OCL Expressions in DresdenOCL}{13}{subsection.1.1.2}
\contentsline {subsubsection}{Boolean Operators}{14}{section*.8}
\contentsline {subsubsection}{Equality in DresdenOCL}{14}{section*.9}
\contentsline {subsubsection}{Collections}{15}{section*.10}
\contentsline {subsubsection}{Iterators}{15}{section*.11}
\contentsline {subsubsection}{Handling of Null values}{15}{section*.12}
\contentsline {subsubsection}{Handling of Invalid values}{15}{section*.13}
\contentsline {section}{\numberline {1.2}Supported Models In Dresden OCL}{16}{section.1.2}
\contentsline {subsection}{\numberline {1.2.1}EMF Ecore Models}{16}{subsection.1.2.1}
\contentsline {subsection}{\numberline {1.2.2}Java Classes as Models}{16}{subsection.1.2.2}
\contentsline {subsection}{\numberline {1.2.3}MDT UML Class Diagrams}{17}{subsection.1.2.3}
\contentsline {subsection}{\numberline {1.2.4}XML Schemas as Models}{17}{subsection.1.2.4}
\contentsline {section}{\numberline {1.3}Supported Model Instancs In Dresden OCL}{17}{section.1.3}
\contentsline {subsection}{\numberline {1.3.1}EMF Ecore-Based Model Instances}{17}{subsection.1.3.1}
\contentsline {subsection}{\numberline {1.3.2}Java Model Instances}{18}{subsection.1.3.2}
\contentsline {subsection}{\numberline {1.3.3}XML Model Instances}{18}{subsection.1.3.3}
\contentsline {section}{\numberline {1.4}Summary}{19}{section.1.4}
\contentsline {chapter}{\numberline {2}Getting started with Dresden OCL2 for Eclipse}{21}{chapter.2}
\contentsline {section}{\numberline {2.1}How to Install Dresden OCL2 for Eclipse}{21}{section.2.1}
\contentsline {subsection}{\numberline {2.1.1}Installing Dresden OCL2 for Eclipse using the Eclipse Update Site}{22}{subsection.2.1.1}
\contentsline {subsection}{\numberline {2.1.2}Importing Dresden OCL2 for Eclipse from the SVN}{23}{subsection.2.1.2}
\contentsline {subsection}{\numberline {2.1.3}Which Plug-ins do I need at least?}{24}{subsection.2.1.3}
\contentsline {subsection}{\numberline {2.1.4}Building the OCL2 Parser}{25}{subsection.2.1.4}
\contentsline {section}{\numberline {2.2}Loading Models, Model Instances and Constraints}{25}{section.2.2}
\contentsline {subsection}{\numberline {2.2.1}The Simple Example}{25}{subsection.2.2.1}
\contentsline {subsection}{\numberline {2.2.2}Loading a Domain-Specific Model}{27}{subsection.2.2.2}
\contentsline {subsection}{\numberline {2.2.3}Loading a Model Instance}{27}{subsection.2.2.3}
\contentsline {subsection}{\numberline {2.2.4}Parsing OCL expressions}{30}{subsection.2.2.4}
\contentsline {section}{\numberline {2.3}Standalone Application}{32}{section.2.3}
\contentsline {section}{\numberline {2.4}Summary}{32}{section.2.4}
\contentsline {chapter}{\numberline {3}OCL Constraint Interpretation}{33}{chapter.3}
\contentsline {section}{\numberline {3.1}The Simple Example}{33}{section.3.1}
\contentsline {section}{\numberline {3.2}Preparation of the Interpretation}{35}{section.3.2}
\contentsline {section}{\numberline {3.3}OCL Interpretation}{35}{section.3.3}
\contentsline {subsection}{\numberline {3.3.1}Interpretation of Constraints}{35}{subsection.3.3.1}
\contentsline {subsection}{\numberline {3.3.2}Preparation of Constraints}{38}{subsection.3.3.2}
\contentsline {subsection}{\numberline {3.3.3}Adding Variables to the Environment}{39}{subsection.3.3.3}
\contentsline {section}{\numberline {3.4}Summary}{41}{section.3.4}
\contentsline {chapter}{\numberline {4}AspectJ Code Generation}{43}{chapter.4}
\contentsline {section}{\numberline {4.1}Code Generator Preparation}{43}{section.4.1}
\contentsline {section}{\numberline {4.2}Code Generation}{47}{section.4.2}
\contentsline {subsection}{\numberline {4.2.1}Selecting a Model}{47}{subsection.4.2.1}
\contentsline {subsection}{\numberline {4.2.2}Selecting Constraints}{47}{subsection.4.2.2}
\contentsline {subsection}{\numberline {4.2.3}Selecting a Target Directory}{47}{subsection.4.2.3}
\contentsline {subsection}{\numberline {4.2.4}Specifying General Settings}{50}{subsection.4.2.4}
\contentsline {subsection}{\numberline {4.2.5}Constraint-Specific Settings}{52}{subsection.4.2.5}
\contentsline {section}{\numberline {4.3}The Generated Code}{53}{section.4.3}
\contentsline {section}{\numberline {4.4}Summary}{54}{section.4.4}
\contentsline {part}{Development with Dresden OCL}{55}{section*.18}
\contentsline {chapter}{\numberline {5}The Architecture of Dresden OCL2 for Eclipse}{57}{chapter.5}
\contentsline {section}{\numberline {5.1}The Generic Three Layer Metadata Architecture}{57}{section.5.1}
\contentsline {section}{\numberline {5.2}The Toolkit's Package Architecture}{59}{section.5.2}
\contentsline {section}{\numberline {5.3}Dresden OCL2 for Eclipse and the Generic Three La\discretionary {-}{}{}yer Me\discretionary {-}{}{}ta\discretionary {-}{}{}da\discretionary {-}{}{}ta Architecture}{60}{section.5.3}
\contentsline {subsection}{\numberline {5.3.1}The Adaptation of Meta-Models, Models and Model Instances}{60}{subsection.5.3.1}
\contentsline {subsection}{\numberline {5.3.2}How Meta-Models and Models are Adapted}{60}{subsection.5.3.2}
\contentsline {subsection}{\numberline {5.3.3}How Model Instances are Adapted}{62}{subsection.5.3.3}
\contentsline {subsection}{\numberline {5.3.4}Coupling between Models and their Instances}{62}{subsection.5.3.4}
\contentsline {subsection}{\numberline {5.3.5}Essential OCL and OCL Constraints}{62}{subsection.5.3.5}
\contentsline {subsection}{\numberline {5.3.6}The OCL Standard Library}{63}{subsection.5.3.6}
\contentsline {section}{\numberline {5.4}Summary}{63}{section.5.4}
\contentsline {chapter}{\numberline {6}How to integrate Dresden OCL2 for Eclipse}{65}{chapter.6}
\contentsline {section}{\numberline {6.1}The Integration Facade of Dresden OCL2 for Eclipse}{65}{section.6.1}
\contentsline {section}{\numberline {6.2}How to access Meta-Models, Models and Instances}{65}{section.6.2}
\contentsline {subsection}{\numberline {6.2.1}The Meta-Model Registry}{66}{subsection.6.2.1}
\contentsline {subsection}{\numberline {6.2.2}How to load a Model}{66}{subsection.6.2.2}
\contentsline {subsection}{\numberline {6.2.3}The Model Instance Type Registry}{67}{subsection.6.2.3}
\contentsline {subsection}{\numberline {6.2.4}How to load a Model Instance}{67}{subsection.6.2.4}
\contentsline {section}{\numberline {6.3}How to access the OCL2 Parser}{68}{section.6.3}
\contentsline {section}{\numberline {6.4}How to access the OCL2 Interpreter}{68}{section.6.4}
\contentsline {section}{\numberline {6.5}Summary}{69}{section.6.5}
\contentsline {chapter}{\numberline {7}Standalone -- Using Dresden OCL outside of Eclipse}{71}{chapter.7}
\contentsline {section}{\numberline {7.1}The Example Application}{71}{section.7.1}
\contentsline {subsection}{\numberline {7.1.1}Classpath}{71}{subsection.7.1.1}
\contentsline {subsection}{\numberline {7.1.2}Resources}{71}{subsection.7.1.2}
\contentsline {subsection}{\numberline {7.1.3}Logging}{72}{subsection.7.1.3}
\contentsline {subsection}{\numberline {7.1.4}Using the Example}{72}{subsection.7.1.4}
\contentsline {paragraph}{Royals \& Loyals}{72}{section*.20}
\contentsline {paragraph}{PML}{73}{section*.21}
\contentsline {paragraph}{Simple}{73}{section*.22}
\contentsline {section}{\numberline {7.2}The Standalone Facade}{73}{section.7.2}
\contentsline {subsection}{\numberline {7.2.1}Classpath and OCL Standard Library}{73}{subsection.7.2.1}
\contentsline {subsection}{\numberline {7.2.2}Adding and Removing Methods}{73}{subsection.7.2.2}
\contentsline {section}{\numberline {7.3}Summary}{73}{section.7.3}
\contentsline {chapter}{\numberline {8}Adapting a Meta-Model to the Pivot Model}{75}{chapter.8}
\contentsline {section}{\numberline {8.1}The Adapter Code generation}{75}{section.8.1}
\contentsline {section}{\numberline {8.2}Summary}{78}{section.8.2}
\contentsline {chapter}{\numberline {9}Adapting a Model Implementation Type to Dresden OCL2 for Eclipse}{81}{chapter.9}
\contentsline {section}{\numberline {9.1}The different types of Model Instance Elements}{81}{section.9.1}
\contentsline {subsection}{\numberline {9.1.1}The IModelInstanceElement Interface}{81}{subsection.9.1.1}
\contentsline {subsubsection}{asType(Type)}{83}{section*.23}
\contentsline {subsubsection}{copyForAtPre()}{83}{section*.24}
\contentsline {subsubsection}{getName()}{83}{section*.25}
\contentsline {subsubsection}{getType()}{83}{section*.26}
\contentsline {subsubsection}{isKindOf(Type) and isTypeOf(Type)}{83}{section*.27}
\contentsline {subsubsection}{isUndefined()}{83}{section*.28}
\contentsline {subsection}{\numberline {9.1.2}The Adaptation of Model Instance Objects}{84}{subsection.9.1.2}
\contentsline {subsubsection}{getObject()}{84}{section*.29}
\contentsline {subsubsection}{getProperty(Property)}{84}{section*.30}
\contentsline {subsubsection}{invokeOperation(Operation, List<IModelInstanceElement>)}{84}{section*.31}
\contentsline {subsection}{\numberline {9.1.3}The Adaptation of Primitive Type Instances}{84}{subsection.9.1.3}
\contentsline {subsection}{\numberline {9.1.4}The Adaptation of Collections}{85}{subsection.9.1.4}
\contentsline {subsubsection}{getCollection()}{85}{section*.32}
\contentsline {subsubsection}{isMultiple() and isOrdered()}{85}{section*.33}
\contentsline {subsection}{\numberline {9.1.5}IModelInstanceEnumerationLiteral}{85}{subsection.9.1.5}
\contentsline {subsection}{\numberline {9.1.6}IModelInstanceTuple}{85}{subsection.9.1.6}
\contentsline {subsection}{\numberline {9.1.7}IModelInstanceVoid and IModelInstanceInvalid}{85}{subsection.9.1.7}
\contentsline {section}{\numberline {9.2}The IModelInstanceProvider Interface}{86}{section.9.2}
\contentsline {subsection}{\numberline {9.2.1}getModelInstance(URL, IModel)}{86}{subsection.9.2.1}
\contentsline {subsection}{\numberline {9.2.2}createEmptyModelInstance(IModel)}{86}{subsection.9.2.2}
\contentsline {section}{\numberline {9.3}The IModelInstance Interface}{86}{section.9.3}
\contentsline {subsection}{\numberline {9.3.1}The Constructor}{86}{subsection.9.3.1}
\contentsline {subsection}{\numberline {9.3.2}addModelInstanceElement(IModelInstanceElement)}{87}{subsection.9.3.2}
\contentsline {subsection}{\numberline {9.3.3}getStaticProperty(Property)}{87}{subsection.9.3.3}
\contentsline {subsection}{\numberline {9.3.4}invokeStaticOperation(Operation, List<IModelInstanceElement>)}{87}{subsection.9.3.4}
\contentsline {section}{\numberline {9.4}The IModelInstanceFactory Interface}{87}{section.9.4}
\contentsline {section}{\numberline {9.5}Adapting an own Model Implementation Type}{88}{section.9.5}
\contentsline {chapter}{\numberline {10}The Logging Mechanism of Dresden OCL2 for Eclipse}{89}{chapter.10}
\contentsline {chapter}{\numberline {11}The Extensible Test Suite of Dresden OCL2 for Eclipse}{91}{chapter.11}
\contentsline {chapter}{\numberline {12}The Generic Meta-Model Test Suite}{93}{chapter.12}
\contentsline {section}{\numberline {12.1}The Test Suite Plug-in}{93}{section.12.1}
\contentsline {section}{\numberline {12.2}The required Model to test a Meta-Model}{93}{section.12.2}
\contentsline {subsection}{\numberline {12.2.1}TestTypeClass1 and TestTypeClass2}{94}{subsection.12.2.1}
\contentsline {subsection}{\numberline {12.2.2}TestTypeInterface1 and TestTypeInterface2}{94}{subsection.12.2.2}
\contentsline {subsection}{\numberline {12.2.3}TestEnumeration}{94}{subsection.12.2.3}
\contentsline {subsection}{\numberline {12.2.4}TestPrimitiveTypeClass}{96}{subsection.12.2.4}
\contentsline {subsection}{\numberline {12.2.5}TestPropertyClass}{96}{subsection.12.2.5}
\contentsline {subsection}{\numberline {12.2.6}TestOperationAndParameterClass}{96}{subsection.12.2.6}
\contentsline {section}{\numberline {12.3}Instantiating the Generic Test Suite}{96}{section.12.3}
\contentsline {section}{\numberline {12.4}Summary}{97}{section.12.4}
\contentsline {chapter}{\numberline {13}The Generic Model Implementation Type Test Suite}{99}{chapter.13}
\contentsline {section}{\numberline {13.1}The Test Suite Plug-in}{99}{section.13.1}
\contentsline {section}{\numberline {13.2}The required Model Instance to test a Meta-Model}{99}{section.13.2}
\contentsline {subsection}{\numberline {13.2.1}The ContainerClass}{100}{subsection.13.2.1}
\contentsline {subsection}{\numberline {13.2.2}Class1}{100}{subsection.13.2.2}
\contentsline {subsection}{\numberline {13.2.3}Class2}{103}{subsection.13.2.3}
\contentsline {subsection}{\numberline {13.2.4}Interface1, Interface2 and Interface3}{103}{subsection.13.2.4}
\contentsline {subsection}{\numberline {13.2.5}PrimitiveTypeProviderClass, CollectionTypeProviderClass and E\discretionary {-}{}{}nu\discretionary {-}{}{}me\discretionary {-}{}{}ra\discretionary {-}{}{}tion\discretionary {-}{}{}Li\discretionary {-}{}{}te\discretionary {-}{}{}ral\discretionary {-}{}{}ProviderClass}{103}{subsection.13.2.5}
\contentsline {subsection}{\numberline {13.2.6}StaticPropertyAndOperationClass}{103}{subsection.13.2.6}
\contentsline {subsection}{\numberline {13.2.7}Copyable- and NonCopyableClass}{104}{subsection.13.2.7}
\contentsline {section}{\numberline {13.3}Instantiating the Generic Test Suite}{104}{section.13.3}
\contentsline {section}{\numberline {13.4}Summary}{104}{section.13.4}
\contentsline {part}{Appendix}{107}{section*.34}
\contentsline {chapter}{Tables}{109}{section*.35}
\contentsline {chapter}{List of Figures}{113}{section*.37}
\contentsline {chapter}{List of Listings}{117}{section*.39}
\contentsline {chapter}{List of Abbreviations}{119}{section*.41}
\contentsline {chapter}{References}{121}{section*.43}
