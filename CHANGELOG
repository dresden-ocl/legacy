Changes from release 1.1 to current CVS
=======================================


Changes that could break older environments
-------------------------------------------

Other changes
-------------

* [OCL Editor]   Modified OclToolbar to accept any UI instance. For instances 
that no special floating code has been implemented for, the toolbar is set to be 
unfloatable instead of throwing an exception. This should handle issues with 
L&Fs like Aqua on Apple.

Fixed bugs
----------



Changes to release 1.1
======================

Changes that could break older environments
-------------------------------------------

* [Injector]     Enhanced OCLInstrumentor.fillInSignature to modify array types
to sequence types

* [Type Checker] fixed ClassAny.navigateParameterized and OclAnyImpl.findMethod
  [OCL Library]  to also include methods defined by java.lang.Object if the 
original
                 classifier is an interface.

* [Type Checker] fixed ClassAny.navigateParameterized and OclAnyImpl.findMethod
  [OCL Library]  to also include methods defined by interfaces extended by other
                 interfaces.

* [Injector]     Added onFileDocComment to TaskInstrumentor.java .

Other changes
-------------
* [OCL Editor]   Exchanged icons to apply with licencing requirements of an 
opensource system.
* [Java Code Generator]
                 Fixed generation of "->excluding", so that a cast is generated, 

too.

* [Type Checker] Enhanced DefaultTypeFactory to recognize collection types.

* [OCL Editor]   Improved handling of unusable buttons in the OCL Editor.
                 These are now made invisible as opposed to just greying
                 them out. This was asked for by issue #647 as filed
                 against ArgoUML.

* [Type Checker] Improved error reports in Collection.navigateParameterized()

* [Build System] Added this file together with a release policy.
                 Therefore, this section is by no means complete.

* [Type Checker] Introduced Type2


Fixed bugs
----------
* [OCL Editor]   Fixed issue #511143, by hardcoding wrapping at column 50.

* [Injector]     Enhanced OCLInstrumentor.fillInSignature to modify array types 
to sequence types

* [Java Code Generator]
                 Fixed generation of "->excluding", so that a cast is generated, 

too.

* [Type Checker] Enhanced DefaultTypeFactory to recognize collection types.

* [Type Checker] fixed ClassAny.navigateParameterized and OclAnyImpl.findMethod
  [OCL Library]  to also include methods defined by java.lang.Object if the 
original
                 classifier is an interface.

* [Type Checker] fixed ClassAny.navigateParameterized and OclAnyImpl.findMethod
  [OCL Library]  to also include methods defined by interfaces extended by other
                 interfaces.

* [Injector]     fixed small problem when only an @postcondition tag was defined
                 for a method.

* [Injector]     fixed NullPointerException in tudresden.ocl.injection.lib.Check

* [Injector]     #223583 OCL constraints at class level
                 Added onFileDocComment to TaskInstrumentor to allow for 
handling
                 of file level javadoc comments.

* [Injector]     The generated code did not reset Invariant.checking_flag if
                 the code checking contraints raised an exception, and in the
                 same situation Invariant.checkVacantVariants did not reset
                 vacantInvariants.

* [Injector]     #223601 static initializers
  [OCL Library]  replaced Class.forName(name) by
  [Type Checker] Class.forName(name, false, getClass().getClassLoader())
                 This prevents static initializers from being executed
                 which caused trouble for some people.



POLICY FOR CHANGELOG
====================

1) Entries are sorted in reversed temporal order, this means, the lastest
   entry is on top.

2) No tabulators at all.

3) To identify modules use the list of categories from the project's
   bugzilla. Up to now, these are:

     Build System
     Injector
     Java Code Generator
     Java OCL Library
     Normalizers
     Parser
     Type Checker
     Website
     OCL Editor

   Please send proposals for new categories to dresden-ocl-discussion.
