/* This file was generated by SableCC (http://www.sablecc.org/). */

/* Generator for LAttrEvalAdapter written by Ansgar Konermann */
/* (c) 2004, 2005 Ansgar Konermann                            */
/* Contact: <konermann@itikko.net>                            */

package tudresden.ocl20.pivot.ocl2parser.testcasegenerator.gen.testcasegenerator.analysis;

import tudresden.ocl20.pivot.ocl2parser.testcasegenerator.gen.testcasegenerator.node.*;

public class AttrEvalException extends Exception
{
    Token token = null;

    public AttrEvalException(String  message, Token token) {
        super(message);
        this.token = token;
    }

    public AttrEvalException(String message, Throwable cause) {
        super(message, cause);
    }

    public AttrEvalException(String message) {
        super(message);
    }

    public Token getToken() {
        return token;
    }
    public void setToken(Token tk) {
        this.token = token;
    }
    public boolean hasToken() {
        return token != null;
    }

    public String getMessage() {
        if ( ! this.hasToken() ) {
            return super.getMessage();
        } else {
            StringBuffer sb = new StringBuffer(512);
            sb.append(super.getMessage());
            if ( this.hasToken() ) {
                Token tok = this.getToken();
                sb.append(": at position ");
                sb.append(tok.getLine());
                sb.append(',');
                sb.append(tok.getPos());
                sb.append(" (line,col) for token '");
                sb.append(tok.getText());
                sb.append("', token type");
                sb.append(tok.getClass().getName());
            }
            return sb.toString();
        }
    }
}
