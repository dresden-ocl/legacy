/* This file was generated by SableCC (http://www.sablecc.org/). */

package tudresden.ocl20.pivot.ocl2parser.testcasegenerator.gen.testcasegenerator.node;

import java.util.*;
import tudresden.ocl20.pivot.ocl2parser.testcasegenerator.gen.testcasegenerator.analysis.*;

public final class AMultipleParameters extends PParameters
{
    private PParameter _parameter_;
    private TComma _comma_;
    private PParameters _parameters_;

    public AMultipleParameters()
    {
    }

    public AMultipleParameters(
        PParameter _parameter_,
        TComma _comma_,
        PParameters _parameters_)
    {
        setParameter(_parameter_);

        setComma(_comma_);

        setParameters(_parameters_);

    }
    public Object clone()
    {
        return new AMultipleParameters(
            (PParameter) cloneNode(_parameter_),
            (TComma) cloneNode(_comma_),
            (PParameters) cloneNode(_parameters_));
    }

    public void apply(Switch sw) {
        ((Analysis) sw).caseAMultipleParameters(this);
    }

    public Object apply(SwitchWithReturn sw, Object param) throws AttrEvalException {
        return ((AnalysisWithReturn) sw).caseAMultipleParameters(this, param);
    }

    public PParameter getParameter()
    {
        return _parameter_;
    }

    public void setParameter(PParameter node)
    {
        if(_parameter_ != null)
        {
            _parameter_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _parameter_ = node;
    }

    public TComma getComma()
    {
        return _comma_;
    }

    public void setComma(TComma node)
    {
        if(_comma_ != null)
        {
            _comma_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _comma_ = node;
    }

    public PParameters getParameters()
    {
        return _parameters_;
    }

    public void setParameters(PParameters node)
    {
        if(_parameters_ != null)
        {
            _parameters_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _parameters_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_parameter_)
            + toString(_comma_)
            + toString(_parameters_);
    }

    void removeChild(Node child)
    {
        if(_parameter_ == child)
        {
            _parameter_ = null;
            return;
        }

        if(_comma_ == child)
        {
            _comma_ = null;
            return;
        }

        if(_parameters_ == child)
        {
            _parameters_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_parameter_ == oldChild)
        {
            setParameter((PParameter) newChild);
            return;
        }

        if(_comma_ == oldChild)
        {
            setComma((TComma) newChild);
            return;
        }

        if(_parameters_ == oldChild)
        {
            setParameters((PParameters) newChild);
            return;
        }

    }
}
