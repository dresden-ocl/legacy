/* This file was generated by SableCC (http://www.sablecc.org/). */

/* Generator for LAttrEvalAdapter written by Ansgar Konermann */
/* (c) 2004, 2005 Ansgar Konermann                            */
/* Contact: <konermann@itikko.net>                            */


package tudresden.ocl20.pivot.ocl2parser.testcasegenerator.gen.testcasegenerator.analysis;

import tudresden.ocl20.pivot.ocl2parser.testcasegenerator.gen.testcasegenerator.node.*;
/*import tudresden.ocl20.pivot.ocl2parser.testcasegenerator.gen.testcasegenerator.util.*;*/
import tudresden.ocl20.pivot.ocl2parser.testcasegenerator.util.*;
import tudresden.ocl20.pivot.ocl2parser.testcasegenerator.abstractsyntax.*;

import java.util.List;

public interface AnalysisWithReturn extends SwitchWithReturn {
    Object caseStart(Start node, Object param) throws AttrEvalException;
    ITestSuite caseASuiteTestpackage(ASuiteTestpackage node, Object param) throws AttrEvalException;
    ITestcase caseATestcaseTestpackage(ATestcaseTestpackage node, Object param) throws AttrEvalException;
    ITestSuite caseATestsuite(ATestsuite node, Object param) throws AttrEvalException;
    ITokenAS caseANames(ANames node, Object param) throws AttrEvalException;
    ITokenAS caseASuiteElement(ASuiteElement node, Object param) throws AttrEvalException;
    ITestcase caseATestcasefile(ATestcasefile node, Object param) throws AttrEvalException;
    ITokenAS caseAName(AName node, Object param) throws AttrEvalException;
    IPackageDeclaration caseAPackageDeclaration(APackageDeclaration node, Object param) throws AttrEvalException;
    IDeclarationContainer caseAMetamodelModelDeclaration(AMetamodelModelDeclaration node, Object param) throws AttrEvalException;
    IDeclarationContainer caseAModelModelDeclaration(AModelModelDeclaration node, Object param) throws AttrEvalException;
    IMetamodelReference caseAMetamodelDesc(AMetamodelDesc node, Object param) throws AttrEvalException;
    IModelReference caseAModelDesc(AModelDesc node, Object param) throws AttrEvalException;
    ITestcaseElement caseATestcaseElement(ATestcaseElement node, Object param) throws AttrEvalException;
    ITokenAS caseATestcasename(ATestcasename node, Object param) throws AttrEvalException;
    ITokenAS caseAOclExpression(AOclExpression node, Object param) throws AttrEvalException;
    IAbstractModel caseAAbstractmodelResult(AAbstractmodelResult node, Object param) throws AttrEvalException;
    IErrorElement caseAErrorResult(AErrorResult node, Object param) throws AttrEvalException;
    IAbstractModel caseAAbstractModel(AAbstractModel node, Object param) throws AttrEvalException;
    IVariable caseAAssignment(AAssignment node, Object param) throws AttrEvalException;
    IModelExpression caseAModelelementModelExpression(AModelelementModelExpression node, Object param) throws AttrEvalException;
    IVariable caseAIdentModelExpression(AIdentModelExpression node, Object param) throws AttrEvalException;
    INullElement caseANullModelExpression(ANullModelExpression node, Object param) throws AttrEvalException;
    ISimpleElement caseASimpleModelExpression(ASimpleModelExpression node, Object param) throws AttrEvalException;
    IModelExpression caseANewModelExpression(ANewModelExpression node, Object param) throws AttrEvalException;
    IRealElement caseARealSimpleExpression(ARealSimpleExpression node, Object param) throws AttrEvalException;
    IIntegerElement caseAIntegerSimpleExpression(AIntegerSimpleExpression node, Object param) throws AttrEvalException;
    IStringElement caseAStringSimpleExpression(AStringSimpleExpression node, Object param) throws AttrEvalException;
    IModelExpression caseAElementParameter(AElementParameter node, Object param) throws AttrEvalException;
    List caseASingleParameters(ASingleParameters node, Object param) throws AttrEvalException;
    List caseAMultipleParameters(AMultipleParameters node, Object param) throws AttrEvalException;
    IModelExpression caseAExpressionParameter(AExpressionParameter node, Object param) throws AttrEvalException;

    String caseTTick(TTick node, Object param) throws AttrEvalException;
    String caseTNew(TNew node, Object param) throws AttrEvalException;
    ITokenAS caseTNull(TNull node, Object param) throws AttrEvalException;
    String caseTNewLine(TNewLine node, Object param) throws AttrEvalException;
    String caseTBlank(TBlank node, Object param) throws AttrEvalException;
    String caseTPackage(TPackage node, Object param) throws AttrEvalException;
    String caseTMetamodel(TMetamodel node, Object param) throws AttrEvalException;
    String caseTModel(TModel node, Object param) throws AttrEvalException;
    String caseTInclude(TInclude node, Object param) throws AttrEvalException;
    String caseTTestname(TTestname node, Object param) throws AttrEvalException;
    String caseTSuitename(TSuitename node, Object param) throws AttrEvalException;
    String caseTBraceOpen(TBraceOpen node, Object param) throws AttrEvalException;
    String caseTBraceClose(TBraceClose node, Object param) throws AttrEvalException;
    ITokenAS caseTError(TError node, Object param) throws AttrEvalException;
    String caseTAssign(TAssign node, Object param) throws AttrEvalException;
    String caseTComma(TComma node, Object param) throws AttrEvalException;
    ITokenAS caseTFirstName(TFirstName node, Object param) throws AttrEvalException;
    String caseTColon(TColon node, Object param) throws AttrEvalException;
    String caseTOpenparen(TOpenparen node, Object param) throws AttrEvalException;
    String caseTCloseparen(TCloseparen node, Object param) throws AttrEvalException;
    ITokenAS caseTAtpre(TAtpre node, Object param) throws AttrEvalException;
    String caseTTestcase(TTestcase node, Object param) throws AttrEvalException;
    ITokenAS caseTAbstractmodel(TAbstractmodel node, Object param) throws AttrEvalException;
    String caseTOclexpression(TOclexpression node, Object param) throws AttrEvalException;
    ITokenAS caseTRealValue(TRealValue node, Object param) throws AttrEvalException;
    ITokenAS caseTIntegerValue(TIntegerValue node, Object param) throws AttrEvalException;
    ITokenAS caseTIdent(TIdent node, Object param) throws AttrEvalException;
    ITokenAS caseTPackageName(TPackageName node, Object param) throws AttrEvalException;
    String caseTCommentblock(TCommentblock node, Object param) throws AttrEvalException;
    String caseTCommentline(TCommentline node, Object param) throws AttrEvalException;
    ITokenAS caseTOclblock(TOclblock node, Object param) throws AttrEvalException;
    ITokenAS caseTStringLiteral(TStringLiteral node, Object param) throws AttrEvalException;
    Object caseEOF(EOF node, Object param) throws AttrEvalException;
}
