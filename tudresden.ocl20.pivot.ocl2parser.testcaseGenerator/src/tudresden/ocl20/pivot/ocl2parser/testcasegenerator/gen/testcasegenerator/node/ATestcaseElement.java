/* This file was generated by SableCC (http://www.sablecc.org/). */

package tudresden.ocl20.pivot.ocl2parser.testcasegenerator.gen.testcasegenerator.node;

import java.util.*;
import tudresden.ocl20.pivot.ocl2parser.testcasegenerator.gen.testcasegenerator.analysis.*;

public final class ATestcaseElement extends PTestcaseElement
{
    private PTestcasename _testcasename_;
    private TBraceOpen _braceOpen_;
    private POclExpression _oclExpression_;
    private PResult _result_;
    private TBraceClose _braceClose_;

    public ATestcaseElement()
    {
    }

    public ATestcaseElement(
        PTestcasename _testcasename_,
        TBraceOpen _braceOpen_,
        POclExpression _oclExpression_,
        PResult _result_,
        TBraceClose _braceClose_)
    {
        setTestcasename(_testcasename_);

        setBraceOpen(_braceOpen_);

        setOclExpression(_oclExpression_);

        setResult(_result_);

        setBraceClose(_braceClose_);

    }
    public Object clone()
    {
        return new ATestcaseElement(
            (PTestcasename) cloneNode(_testcasename_),
            (TBraceOpen) cloneNode(_braceOpen_),
            (POclExpression) cloneNode(_oclExpression_),
            (PResult) cloneNode(_result_),
            (TBraceClose) cloneNode(_braceClose_));
    }

    public void apply(Switch sw) {
        ((Analysis) sw).caseATestcaseElement(this);
    }

    public Object apply(SwitchWithReturn sw, Object param) throws AttrEvalException {
        return ((AnalysisWithReturn) sw).caseATestcaseElement(this, param);
    }

    public PTestcasename getTestcasename()
    {
        return _testcasename_;
    }

    public void setTestcasename(PTestcasename node)
    {
        if(_testcasename_ != null)
        {
            _testcasename_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _testcasename_ = node;
    }

    public TBraceOpen getBraceOpen()
    {
        return _braceOpen_;
    }

    public void setBraceOpen(TBraceOpen node)
    {
        if(_braceOpen_ != null)
        {
            _braceOpen_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _braceOpen_ = node;
    }

    public POclExpression getOclExpression()
    {
        return _oclExpression_;
    }

    public void setOclExpression(POclExpression node)
    {
        if(_oclExpression_ != null)
        {
            _oclExpression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _oclExpression_ = node;
    }

    public PResult getResult()
    {
        return _result_;
    }

    public void setResult(PResult node)
    {
        if(_result_ != null)
        {
            _result_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _result_ = node;
    }

    public TBraceClose getBraceClose()
    {
        return _braceClose_;
    }

    public void setBraceClose(TBraceClose node)
    {
        if(_braceClose_ != null)
        {
            _braceClose_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _braceClose_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_testcasename_)
            + toString(_braceOpen_)
            + toString(_oclExpression_)
            + toString(_result_)
            + toString(_braceClose_);
    }

    void removeChild(Node child)
    {
        if(_testcasename_ == child)
        {
            _testcasename_ = null;
            return;
        }

        if(_braceOpen_ == child)
        {
            _braceOpen_ = null;
            return;
        }

        if(_oclExpression_ == child)
        {
            _oclExpression_ = null;
            return;
        }

        if(_result_ == child)
        {
            _result_ = null;
            return;
        }

        if(_braceClose_ == child)
        {
            _braceClose_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_testcasename_ == oldChild)
        {
            setTestcasename((PTestcasename) newChild);
            return;
        }

        if(_braceOpen_ == oldChild)
        {
            setBraceOpen((TBraceOpen) newChild);
            return;
        }

        if(_oclExpression_ == oldChild)
        {
            setOclExpression((POclExpression) newChild);
            return;
        }

        if(_result_ == oldChild)
        {
            setResult((PResult) newChild);
            return;
        }

        if(_braceClose_ == oldChild)
        {
            setBraceClose((TBraceClose) newChild);
            return;
        }

    }
}
