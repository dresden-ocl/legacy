/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.sablecc.node;

import java.util.*;

import org.sablecc.sablecc.analysis.*;
import org.sablecc.sablecc.node.APackage;
import org.sablecc.sablecc.node.Node;
import org.sablecc.sablecc.node.PPackage;
import org.sablecc.sablecc.node.PPkgName;
import org.sablecc.sablecc.node.Switch;
import org.sablecc.sablecc.node.TPackage;



public final class APackage extends PPackage
{
    private TPackage _package_;
    private PPkgName _pkgName_;

    public APackage()
    {
    }

    public APackage(
        TPackage _package_,
        PPkgName _pkgName_)
    {
        setPackage(_package_);

        setPkgName(_pkgName_);

    }
    public Object clone()
    {
        return new APackage(
            (TPackage) cloneNode(_package_),
            (PPkgName) cloneNode(_pkgName_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPackage(this);
    }

    public TPackage getPackage()
    {
        return _package_;
    }

    public void setPackage(TPackage node)
    {
        if(_package_ != null)
        {
            _package_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _package_ = node;
    }

    public PPkgName getPkgName()
    {
        return _pkgName_;
    }

    public void setPkgName(PPkgName node)
    {
        if(_pkgName_ != null)
        {
            _pkgName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pkgName_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_package_)
            + toString(_pkgName_);
    }

    void removeChild(Node child)
    {
        if(_package_ == child)
        {
            _package_ = null;
            return;
        }

        if(_pkgName_ == child)
        {
            _pkgName_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_package_ == oldChild)
        {
            setPackage((TPackage) newChild);
            return;
        }

        if(_pkgName_ == oldChild)
        {
            setPkgName((PPkgName) newChild);
            return;
        }

    }
}
