<project name="OCL2Compiler" default="build" basedir=".">

	<!-- package path -->
	<property name="packagePath" value="tudresden/ocl20/pivot/ocl2parser" />

	<!-- package with dots -->
	<property name="packageDot" value="tudresden.ocl20.pivot.ocl2parser" />

	<!-- this is the directory of the binary files with the package path appended. -->
	<property name="binaryFiles" location="bin/${packagePath}" />

	<!-- this is the directory of the binary files that will be created by sablecc. -->
	<property name="binarySableCCFiles" location="${binaryFiles}/sableCCFiles" />

	<!-- this is the directory of the files that will be created by jastadd. -->
	<property name="binaryJastaddFiles" location="${binaryFiles}/jastaddFiles" />

	<!-- this is the directory of the source package -->
	<property name="sourcePackage" location="./src/${packagePath}" />

	<!-- this is the directory of the tools -->
	<property name="tools" location="tools" />

	<!-- in this directory lie the aspectfiles and the abstract grammar file for jastadd -->
	<property name="jastaddFiles" location="${sourcePackage}/gen/ocl2as" />

	<!-- soure path -->
	<property name="sourceDic" location="src" />

	<!-- this denotes the start package of the java file that will be created by jastadd -->
	<property name="jastaddPackage" value="${packageDot}.gen.ocl2as" />

	<!-- this directory will contain the files that will be generated by sablecc -->
	<property name="sableCCFiles" value="${sourcePackage}/gen/parserfiles" />

	<!-- this points to the directory that contains the grammar file -->
	<property name="sableCCSpec" value="${sourceDic}/spec" />

	<!-- this points to the directory that contains the aspect files and the abstract grammar file of jastadd -->
	<property name="jastaddSpec" value="${sourceDic}/spec/jastadd" />



	<!-- "jastadd" is an ant task class in jastadd2.jar -->
	<taskdef classname="jastadd.JastAddTask" name="jastadd" classpath="${tools}/jastadd2.jar" />


	<!-- TARGET build -->
	<target name="build" depends="clean,gen">
		<!-- <javac compiler="javac1.5" debug="true" srcdir="${sourceDic}" destdir="${binaryFiles}" /> -->
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
		<eclipse.refreshLocal resource="tudresden.ocl20.pivot.ocl2parser" depth="infinite" />
		<eclipse.incrementalBuild />
	</target>

	<!-- TARGET compile -->
	<target name="compile">
		<javac compiler="javac1.5" debug="true" srcdir="${sourcePackage}" destdir="${binaryFiles}" />
	</target>

	<!-- TARGET gen generates the ocl parser, first it generates the abstract syntax without weaving the aspects in it, then
		generates the parser with sablecc and finally it generates the abstract syntax again, but with weaving the aspects in it -->
	<target name="gen" depends="jastAdd_without_aspects, sableCC, jastAdd">
		
		
	</target>


	<!-- TARGET SableCC, generate a ocl parser that can parse ocl expressions -->
	<target name="sableCC">
		<echo message="Running SableCC" />
		<javac compiler="javac1.5" debug="true" srcdir="${sourceDic}/org" destdir="./bin" />

		<java classname="org.sablecc.sablecc.SableCC">
			<classpath path="./bin" />
			<arg value="-d" />
			<arg value="${sourceDic}" />
			<arg value="${sableCCSpec}/ocl2.parser" />
		</java>
		<eclipse.refreshLocal resource="tudresden.ocl20.pivot.ocl2parser" depth="infinite" />
		<eclipse.incrementalBuild />
	</target>

	<!-- TARGET clean, removes all files that were generated -->
	<target name="clean">
		<!-- Delete all classfiles in dir and recursively in subdirectories -->
		<delete>
			<fileset dir="." includes="**/*.class" />
		</delete>

		<!-- Delete the directory containing generated files and their class files -->
		<delete dir="${binaryJastaddFiles}" />
		<delete dir="${sableCCFiles}" />
		<delete dir="${jastaddFiles}" />
	</target>

	<!-- TARGET JastAdd, generates the abstract syntax and weaves the aspects in it -->
	<target name="jastAdd">
		<echo message="First delete all generated jastadd files." />
		<delete dir="${jastaddFiles}" />
		<echo message="Running JastAdd" />
		<jastadd package="${jastaddPackage}" rewrite="true" outdir="${sourceDic}">
			<fileset dir="${jastaddSpec}">
				<include name="**/*.ast" />
				<include name="**/*.jrag" />
				<include name="**/*.jadd" />
			</fileset>
		</jastadd>

		<eclipse.refreshLocal resource="tudresden.ocl20.pivot.ocl2parser" depth="infinite" />
		<eclipse.incrementalBuild />

	</target>



	<!-- TARGET JastAdd without aspects, generates the abstract syntax without the aspects-->
	<target name="jastAdd_without_aspects">
		<echo message="Running JastAdd" />
		<jastadd package="${jastaddPackage}" rewrite="true" outdir="${sourceDic}">
			<fileset dir="${jastaddSpec}">
				<include name="**/*.ast" />
			</fileset>
		</jastadd>
		
		<eclipse.refreshLocal resource="tudresden.ocl20.pivot.ocl2parser" depth="infinite" />
		<eclipse.incrementalBuild />

	</target>
	
	<!-- this target is used by eclipse to build the project -->
	<target name="properties" if="eclipse.running">
		<property name="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
	</target>
</project>
