<%@ jet package="tudresden.ocl20.pivot.codegen.adapter.templates.model" class="AdapterFactory" imports="org.eclipse.emf.codegen.ecore.genmodel.* tudresden.ocl20.pivot.codegen.adapter.PivotAdapterGeneratorUtil"%>
<%GenModel genModel = (GenModel)argument;
String modelName = PivotAdapterGeneratorUtil.startWithCapitalLetter(genModel.getModelName());
String className = modelName + "ModelProvider";
String packageName = PivotAdapterGeneratorUtil.getProviderPackage(genModel);
String modelPackageName = PivotAdapterGeneratorUtil.getAdapterPackage(genModel) + "." + modelName + "Model";
String implementThis = PivotAdapterGeneratorUtil.getImplementThis();
%>
package <%=packageName%>;

<%genModel.addImport("org.apache.log4j.Logger");
genModel.addImport("java.net.URL");
genModel.addImport("org.eclipse.emf.common.util.URI");
genModel.addImport(modelPackageName);
genModel.addImport("tudresden.ocl20.pivot.modelbus.IModel");
genModel.addImport("tudresden.ocl20.pivot.modelbus.IModelProvider");
genModel.addImport("tudresden.ocl20.pivot.modelbus.ModelAccessException");
genModel.addImport("tudresden.ocl20.pivot.modelbus.base.AbstractModelProvider");
genModel.addImport("org.eclipse.emf.ecore.resource.Resource");
genModel.addImport("org.eclipse.emf.ecore.resource.ResourceSet");
genModel.addImport("org.eclipse.emf.ecore.resource.impl.ResourceSetImpl");
%>
<%genModel.markImportLocation(stringBuffer);%>

/**
 * Implementation of the {@link IModelProvider} interface for <%=modelName%> models. This implementation will
 * create an {@link <%=modelName%>Model} instance.
 *
 * @generated
 */
public class <%=className%> extends AbstractModelProvider implements IModelProvider {

  // Logger for this class
  private static final Logger logger = Logger.getLogger(<%=className%>.class);
  
  private ResourceSet resourceSet = null;

  /**
   * @see tudresden.ocl20.pivot.modelbus.IModelProvider#getModel(java.net.URL)
	 *
	 * @generated
   */
	public IModel getModel(URL modelURL) throws ModelAccessException {
	  
	  	if (logger.isDebugEnabled()) {
			logger.debug("getModel(modelURL=" + modelURL + ") - enter"); //$NON-NLS-1$ //$NON-NLS-2$
		}
	
		URI modelURI;
		IModel model = null;
		Resource resource;
	
		// try to create a URI
		try {
			modelURI = URI.createURI(modelURL.toString());
		} catch (IllegalArgumentException e) {
			throw new ModelAccessException("Invalid URL: " + modelURL, e); //$NON-NLS-1$
		}
	
		// get the resource
		resource = getResourceSet().getResource(modelURI, false);
	
		if (resource == null) {
			// we only want to create the resource, not load it
			resource = getResourceSet().createResource(modelURI);
		}
	
		model = new <%=modelName%>Model(getResourceSet().getResource(modelURI, false));
	
		if (logger.isDebugEnabled()) {
			logger.debug("getModel() - exit - return value=" + model); //$NON-NLS-1$
		}
	
		return model;
	}
	
	private ResourceSet getResourceSet() {
		if (resourceSet == null)
			return new ResourceSetImpl();
		else
			return resourceSet;
	}

}
<%genModel.emitSortedImports();%>