\BOOKMARK [0][-]{section*.5}{Abstract}{}
\BOOKMARK [-1][-]{section*.7}{Using Dresden OCL}{}
\BOOKMARK [0][-]{chapter.1}{1 About Dresden OCL}{section*.7}
\BOOKMARK [1][-]{section.1.1}{1.1 Supported Version of OCL}{chapter.1}
\BOOKMARK [2][-]{subsection.1.1.1}{1.1.1 Comformance of Dresden OCL to the OCL 2.2 specification}{section.1.1}
\BOOKMARK [2][-]{subsection.1.1.2}{1.1.2 Different Semantics of OCL Expressions in Dresden OCL}{section.1.1}
\BOOKMARK [1][-]{section.1.2}{1.2 Supported Models In Dresden OCL}{chapter.1}
\BOOKMARK [2][-]{subsection.1.2.1}{1.2.1 EMF Ecore Models}{section.1.2}
\BOOKMARK [2][-]{subsection.1.2.2}{1.2.2 Java Classes as Models}{section.1.2}
\BOOKMARK [2][-]{subsection.1.2.3}{1.2.3 MDT UML Class Diagrams}{section.1.2}
\BOOKMARK [2][-]{subsection.1.2.4}{1.2.4 XML Schemas as Models}{section.1.2}
\BOOKMARK [1][-]{section.1.3}{1.3 Supported Model Instances In Dresden OCL}{chapter.1}
\BOOKMARK [2][-]{subsection.1.3.1}{1.3.1 EMF Ecore-Based Model Instances}{section.1.3}
\BOOKMARK [2][-]{subsection.1.3.2}{1.3.2 Java Model Instances}{section.1.3}
\BOOKMARK [2][-]{subsection.1.3.3}{1.3.3 XML Model Instances}{section.1.3}
\BOOKMARK [1][-]{section.1.4}{1.4 Summary}{chapter.1}
\BOOKMARK [0][-]{chapter.2}{2 Getting started with Dresden OCL}{section*.7}
\BOOKMARK [1][-]{section.2.1}{2.1 How to Install Dresden OCL}{chapter.2}
\BOOKMARK [2][-]{subsection.2.1.1}{2.1.1 Installing Dresden OCL using the Eclipse Update Site}{section.2.1}
\BOOKMARK [2][-]{subsection.2.1.2}{2.1.2 Importing Dresden OCL from the SVN}{section.2.1}
\BOOKMARK [2][-]{subsection.2.1.3}{2.1.3 Which Plug-ins do you need at least?}{section.2.1}
\BOOKMARK [2][-]{subsection.2.1.4}{2.1.4 Building the OCL2 Parser}{section.2.1}
\BOOKMARK [1][-]{section.2.2}{2.2 Loading Models, Model Instances and Constraints}{chapter.2}
\BOOKMARK [2][-]{subsection.2.2.1}{2.2.1 The Simple Example}{section.2.2}
\BOOKMARK [2][-]{subsection.2.2.2}{2.2.2 Dresden OCL Perspective}{section.2.2}
\BOOKMARK [2][-]{subsection.2.2.3}{2.2.3 Loading a Model}{section.2.2}
\BOOKMARK [2][-]{subsection.2.2.4}{2.2.4 Loading a Model Instance}{section.2.2}
\BOOKMARK [2][-]{subsection.2.2.5}{2.2.5 Parsing OCL Expressions}{section.2.2}
\BOOKMARK [1][-]{section.2.3}{2.3 Summary}{chapter.2}
\BOOKMARK [0][-]{chapter.3}{3 OCL Interpretation}{section*.7}
\BOOKMARK [1][-]{section.3.1}{3.1 The Simple Example}{chapter.3}
\BOOKMARK [1][-]{section.3.2}{3.2 Preparation of the Interpretation}{chapter.3}
\BOOKMARK [1][-]{section.3.3}{3.3 OCL Interpretation}{chapter.3}
\BOOKMARK [2][-]{subsection.3.3.1}{3.3.1 Interpretation of Constraints}{section.3.3}
\BOOKMARK [2][-]{subsection.3.3.2}{3.3.2 Adding Variables to the Environment}{section.3.3}
\BOOKMARK [2][-]{subsection.3.3.3}{3.3.3 Preparation of Constraints}{section.3.3}
\BOOKMARK [1][-]{section.3.4}{3.4 Summary}{chapter.3}
\BOOKMARK [0][-]{chapter.4}{4 AspectJ Code Generation}{section*.7}
\BOOKMARK [1][-]{section.4.1}{4.1 Code Generator Preparation}{chapter.4}
\BOOKMARK [1][-]{section.4.2}{4.2 Code Generation}{chapter.4}
\BOOKMARK [2][-]{subsection.4.2.1}{4.2.1 Selecting a Model}{section.4.2}
\BOOKMARK [2][-]{subsection.4.2.2}{4.2.2 Selecting Constraints}{section.4.2}
\BOOKMARK [2][-]{subsection.4.2.3}{4.2.3 Selecting a Target Directory}{section.4.2}
\BOOKMARK [2][-]{subsection.4.2.4}{4.2.4 Specifying General Settings}{section.4.2}
\BOOKMARK [2][-]{subsection.4.2.5}{4.2.5 Constraint-Specific Settings}{section.4.2}
\BOOKMARK [1][-]{section.4.3}{4.3 The Generated Code}{chapter.4}
\BOOKMARK [1][-]{section.4.4}{4.4 Summary}{chapter.4}
\BOOKMARK [0][-]{chapter.5}{5 SQL Code Generation}{section*.7}
\BOOKMARK [1][-]{section.5.1}{5.1 Code Generator Preparation}{chapter.5}
\BOOKMARK [1][-]{section.5.2}{5.2 Code Generation}{chapter.5}
\BOOKMARK [2][-]{subsection.5.2.1}{5.2.1 Selecting a Model}{section.5.2}
\BOOKMARK [2][-]{subsection.5.2.2}{5.2.2 Selecting Constraints}{section.5.2}
\BOOKMARK [2][-]{subsection.5.2.3}{5.2.3 Selecting a target directory}{section.5.2}
\BOOKMARK [1][-]{section.5.3}{5.3 The Generated Code}{chapter.5}
\BOOKMARK [1][-]{section.5.4}{5.4 Summary}{chapter.5}
\BOOKMARK [-1][-]{section*.19}{Tool Development using Dresden OCL}{}
\BOOKMARK [0][-]{chapter.6}{6 The Architecture of Dresden OCL}{section*.19}
\BOOKMARK [1][-]{section.6.1}{6.1 The Generic Three Layer Metadata Architecture}{chapter.6}
\BOOKMARK [1][-]{section.6.2}{6.2 Dresden OCL's Package Architecture}{chapter.6}
\BOOKMARK [1][-]{section.6.3}{6.3 Dresden OCL and the Generic Three Layer Metadata Architecture}{chapter.6}
\BOOKMARK [2][-]{subsection.6.3.1}{6.3.1 The Adaptation of Meta-Models, Models and Model Instances}{section.6.3}
\BOOKMARK [2][-]{subsection.6.3.2}{6.3.2 How Meta-Models and Models are Adapted}{section.6.3}
\BOOKMARK [2][-]{subsection.6.3.3}{6.3.3 How Model Instances are Adapted}{section.6.3}
\BOOKMARK [2][-]{subsection.6.3.4}{6.3.4 Coupling between Models and their Instances}{section.6.3}
\BOOKMARK [1][-]{section.6.4}{6.4 Summary}{chapter.6}
\BOOKMARK [0][-]{chapter.7}{7 How to integrate Dresden OCL into Eclipse Projects}{section*.19}
\BOOKMARK [1][-]{section.7.1}{7.1 The Integration Facade of Dresden OCL}{chapter.7}
\BOOKMARK [1][-]{section.7.2}{7.2 How to access Meta-Models, Models and Instances}{chapter.7}
\BOOKMARK [2][-]{subsection.7.2.1}{7.2.1 The Meta-Model Registry}{section.7.2}
\BOOKMARK [2][-]{subsection.7.2.2}{7.2.2 How to load a Model}{section.7.2}
\BOOKMARK [2][-]{subsection.7.2.3}{7.2.3 The Model Instance Type Registry}{section.7.2}
\BOOKMARK [2][-]{subsection.7.2.4}{7.2.4 How to load a Model Instance}{section.7.2}
\BOOKMARK [1][-]{section.7.3}{7.3 How to access the OCL Parser}{chapter.7}
\BOOKMARK [1][-]{section.7.4}{7.4 How to access the OCL Interpreter}{chapter.7}
\BOOKMARK [1][-]{section.7.5}{7.5 Summary}{chapter.7}
\BOOKMARK [0][-]{chapter.8}{8 Standalone \205 Using Dresden OCL outside of Eclipse}{section*.19}
\BOOKMARK [1][-]{section.8.1}{8.1 The Example Application}{chapter.8}
\BOOKMARK [2][-]{subsection.8.1.1}{8.1.1 Classpath}{section.8.1}
\BOOKMARK [2][-]{subsection.8.1.2}{8.1.2 Resources}{section.8.1}
\BOOKMARK [2][-]{subsection.8.1.3}{8.1.3 Logging}{section.8.1}
\BOOKMARK [2][-]{subsection.8.1.4}{8.1.4 Using the Example}{section.8.1}
\BOOKMARK [1][-]{section.8.2}{8.2 The Standalone Facade}{chapter.8}
\BOOKMARK [2][-]{subsection.8.2.1}{8.2.1 Classpath and OCL Standard Library}{section.8.2}
\BOOKMARK [2][-]{subsection.8.2.2}{8.2.2 Adding and Removing Methods}{section.8.2}
\BOOKMARK [1][-]{section.8.3}{8.3 Summary}{chapter.8}
\BOOKMARK [0][-]{chapter.9}{9 Adapting a Meta-Model to the Pivot Model}{section*.19}
\BOOKMARK [1][-]{section.9.1}{9.1 The Adapter Code generation}{chapter.9}
\BOOKMARK [1][-]{section.9.2}{9.2 Summary}{chapter.9}
\BOOKMARK [0][-]{chapter.10}{10 Adapting a Model Instance Type to Dresden OCL}{section*.19}
\BOOKMARK [1][-]{section.10.1}{10.1 The different types of Model Instance Elements}{chapter.10}
\BOOKMARK [2][-]{subsection.10.1.1}{10.1.1 The IModelInstanceElement Interface}{section.10.1}
\BOOKMARK [2][-]{subsection.10.1.2}{10.1.2 The Adaptation of Model Instance Objects}{section.10.1}
\BOOKMARK [2][-]{subsection.10.1.3}{10.1.3 The Adaptation of Primitive Type Instances}{section.10.1}
\BOOKMARK [2][-]{subsection.10.1.4}{10.1.4 The Adaptation of Collections}{section.10.1}
\BOOKMARK [2][-]{subsection.10.1.5}{10.1.5 IModelInstanceEnumerationLiteral}{section.10.1}
\BOOKMARK [2][-]{subsection.10.1.6}{10.1.6 IModelInstanceTuple}{section.10.1}
\BOOKMARK [2][-]{subsection.10.1.7}{10.1.7 IModelInstanceVoid and IModelInstanceInvalid}{section.10.1}
\BOOKMARK [1][-]{section.10.2}{10.2 The IModelInstanceProvider Interface}{chapter.10}
\BOOKMARK [2][-]{subsection.10.2.1}{10.2.1 getModelInstance\(URL, IModel\)}{section.10.2}
\BOOKMARK [2][-]{subsection.10.2.2}{10.2.2 createEmptyModelInstance\(IModel\)}{section.10.2}
\BOOKMARK [1][-]{section.10.3}{10.3 The IModelInstance Interface}{chapter.10}
\BOOKMARK [2][-]{subsection.10.3.1}{10.3.1 The Constructor}{section.10.3}
\BOOKMARK [2][-]{subsection.10.3.2}{10.3.2 addModelInstanceElement\(IModelInstanceElement\)}{section.10.3}
\BOOKMARK [2][-]{subsection.10.3.3}{10.3.3 getStaticProperty\(Property\)}{section.10.3}
\BOOKMARK [2][-]{subsection.10.3.4}{10.3.4 invokeStaticOperation\(Operation, List<IModelInstanceElement>\)}{section.10.3}
\BOOKMARK [1][-]{section.10.4}{10.4 The IModelInstanceFactory Interface}{chapter.10}
\BOOKMARK [1][-]{section.10.5}{10.5 Adapting an own Model Instance Type}{chapter.10}
\BOOKMARK [0][-]{chapter.11}{11 The Logging Mechanism of Dresden OCL}{section*.19}
\BOOKMARK [0][-]{chapter.12}{12 The Extensible Test Suite of Dresden OCL}{section*.19}
\BOOKMARK [0][-]{chapter.13}{13 The Generic Meta-Model Test Suite}{section*.19}
\BOOKMARK [1][-]{section.13.1}{13.1 The Test Suite Plug-in}{chapter.13}
\BOOKMARK [1][-]{section.13.2}{13.2 The required Model to test a Meta-Model}{chapter.13}
\BOOKMARK [2][-]{subsection.13.2.1}{13.2.1 TestTypeClass1 and TestTypeClass2}{section.13.2}
\BOOKMARK [2][-]{subsection.13.2.2}{13.2.2 TestTypeInterface1 and TestTypeInterface2}{section.13.2}
\BOOKMARK [2][-]{subsection.13.2.3}{13.2.3 TestEnumeration}{section.13.2}
\BOOKMARK [2][-]{subsection.13.2.4}{13.2.4 TestPrimitiveTypeClass}{section.13.2}
\BOOKMARK [2][-]{subsection.13.2.5}{13.2.5 TestPropertyClass}{section.13.2}
\BOOKMARK [2][-]{subsection.13.2.6}{13.2.6 TestOperationAndParameterClass}{section.13.2}
\BOOKMARK [1][-]{section.13.3}{13.3 Instantiating the Generic Test Suite}{chapter.13}
\BOOKMARK [1][-]{section.13.4}{13.4 Summary}{chapter.13}
\BOOKMARK [0][-]{chapter.14}{14 The Generic Model Instance Type Test Suite}{section*.19}
\BOOKMARK [1][-]{section.14.1}{14.1 The Test Suite Plug-in}{chapter.14}
\BOOKMARK [1][-]{section.14.2}{14.2 The required Model Instance to test a Model Instance Type}{chapter.14}
\BOOKMARK [2][-]{subsection.14.2.1}{14.2.1 The ContainerClass}{section.14.2}
\BOOKMARK [2][-]{subsection.14.2.2}{14.2.2 Class1}{section.14.2}
\BOOKMARK [2][-]{subsection.14.2.3}{14.2.3 Class2}{section.14.2}
\BOOKMARK [2][-]{subsection.14.2.4}{14.2.4 Interface1, Interface2 and Interface3}{section.14.2}
\BOOKMARK [2][-]{subsection.14.2.5}{14.2.5 PrimitiveTypeProviderClass, CollectionTypeProviderClass and EnumerationLiteralProviderClass}{section.14.2}
\BOOKMARK [2][-]{subsection.14.2.6}{14.2.6 StaticPropertyAndOperationClass}{section.14.2}
\BOOKMARK [2][-]{subsection.14.2.7}{14.2.7 Copyable- and NonCopyableClass}{section.14.2}
\BOOKMARK [1][-]{section.14.3}{14.3 Instantiating the Generic Test Suite}{chapter.14}
\BOOKMARK [1][-]{section.14.4}{14.4 Summary}{chapter.14}
\BOOKMARK [-1][-]{section*.34}{Appendix}{}
\BOOKMARK [0][-]{section*.35}{Tables}{section*.34}
\BOOKMARK [0][-]{section*.37}{List of Figures}{section*.34}
\BOOKMARK [0][-]{section*.39}{List of Tables}{section*.34}
\BOOKMARK [0][-]{section*.41}{List of Listings}{section*.34}
\BOOKMARK [0][-]{section*.43}{List of Abbreviations}{section*.34}
\BOOKMARK [0][-]{section*.45}{References}{section*.34}
\BOOKMARK [0][-]{section*.47}{Acknowledgements}{section*.34}
