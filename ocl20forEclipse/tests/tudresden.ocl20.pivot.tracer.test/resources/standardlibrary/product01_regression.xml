<?xml version="1.0" encoding="UTF-8" standalone="no"?><TracerItems><TracerItem expression="ConstraintImpl[name=testCollectionProduct01,kind=invariant,specification=ExpressionInOclImpl[body=&#13;&#10;inv testCollectionProduct01: &#13;&#10;  let c1: Collection(Integer) =&#13;&#10;    Set { 1 }&#13;&#10;  in&#13;&#10;    let c2: Collection(String) =&#13;&#10;      Set { '2' }&#13;&#10;    in&#13;&#10;      c1 -&gt;product(c2) -&gt;size() = 1&#13;&#10;&#13;&#10;,language=&lt;null&gt;,context=VariableImpl[name=self,type=JavaClass[name=Class1,namespace=JavaPackage[name=package1]],genericType=&lt;null&gt;],result=&lt;null&gt;,parameter=[]],constrainedElement=[JavaClass[name=Class1,namespace=JavaPackage[name=package1]]],definedFeature=&lt;null&gt;]" result="JavaOclBoolean[true]"><TracerItem expression="ExpressionInOclImpl[body=&#13;&#10;inv testCollectionProduct01: &#13;&#10;  let c1: Collection(Integer) =&#13;&#10;    Set { 1 }&#13;&#10;  in&#13;&#10;    let c2: Collection(String) =&#13;&#10;      Set { '2' }&#13;&#10;    in&#13;&#10;      c1 -&gt;product(c2) -&gt;size() = 1&#13;&#10;&#13;&#10;,language=&lt;null&gt;,context=VariableImpl[name=self,type=JavaClass[name=Class1,namespace=JavaPackage[name=package1]],genericType=&lt;null&gt;],result=&lt;null&gt;,parameter=[]]" result="JavaOclBoolean[true]"><TracerItem expression="LetExpImpl[name=,type=PrimitiveTypeImpl[name=Boolean,namespace=&lt;null&gt;,kind=Boolean],genericType=&lt;null&gt;]" result="JavaOclBoolean[true]"><TracerItem expression="LetExpImpl[name=,type=PrimitiveTypeImpl[name=Boolean,namespace=&lt;null&gt;,kind=Boolean],genericType=&lt;null&gt;]" result="JavaOclBoolean[true]"><TracerItem expression="OperationCallExpImpl[name=,type=PrimitiveTypeImpl[name=Boolean,namespace=&lt;null&gt;,kind=Boolean],genericType=&lt;null&gt;,referredOperation=OperationImpl[name==,type=PrimitiveTypeImpl[name=Boolean,namespace=&lt;null&gt;,kind=Boolean],genericType=&lt;null&gt;,static=false]]" result="JavaOclBoolean[true]"><TracerItem expression="OperationCallExpImpl[name=,type=PrimitiveTypeImpl[name=Integer,namespace=&lt;null&gt;,kind=Integer],genericType=&lt;null&gt;,referredOperation=OperationImpl[name=size,type=PrimitiveTypeImpl[name=Integer,namespace=&lt;null&gt;,kind=Integer],genericType=&lt;null&gt;,static=false]]" result="JavaOclInteger[1]"><TracerItem expression="OperationCallExpImpl[name=,type=SetTypeImpl[name=Set(Tuple(first:Integer,second:String)),namespace=&lt;null&gt;,elementType=TupleTypeImpl[name=Tuple(first:Integer,second:String),namespace=&lt;null&gt;],kind=Set],genericType=&lt;null&gt;,referredOperation=OperationImpl[name=product,type=SetTypeImpl[name=Set(Tuple(first:Integer,second:String)),namespace=&lt;null&gt;,elementType=TupleTypeImpl[name=Tuple(first:Integer,second:String),namespace=&lt;null&gt;],kind=Set],genericType=&lt;null&gt;,static=false]]" result="JavaOclSet[JavaOclTuple[tudresden.ocl20.pivot.modelinstancetype.types.base.ModelInstanceTuple@2978c7e9]]"><TracerItem expression="VariableImpl[name=c1,type=CollectionTypeImpl[name=Collection(Integer),namespace=&lt;null&gt;,elementType=PrimitiveTypeImpl[name=Integer,namespace=&lt;null&gt;,kind=Integer],kind=Collection],genericType=&lt;null&gt;]" result="JavaOclSet[JavaOclInteger[1]]"><TracerItem expression="CollectionLiteralExpImpl[name=,type=SetTypeImpl[name=Set(Integer),namespace=&lt;null&gt;,elementType=PrimitiveTypeImpl[name=Integer,namespace=&lt;null&gt;,kind=Integer],kind=Set],genericType=&lt;null&gt;,kind=Set]" result="JavaOclSet[JavaOclInteger[1]]"><TracerItem expression="CollectionItemImpl[name=,type=PrimitiveTypeImpl[name=Integer,namespace=&lt;null&gt;,kind=Integer],genericType=&lt;null&gt;]" result="JavaOclInteger[1]"><TracerItem expression="IntegerLiteralExpImpl[name=,type=PrimitiveTypeImpl[name=Integer,namespace=&lt;null&gt;,kind=Integer],genericType=&lt;null&gt;,integerSymbol=1]" result="JavaOclInteger[1]"/></TracerItem></TracerItem></TracerItem><TracerItem expression="VariableImpl[name=c2,type=CollectionTypeImpl[name=Collection(String),namespace=&lt;null&gt;,elementType=PrimitiveTypeImpl[name=String,namespace=&lt;null&gt;,kind=String],kind=Collection],genericType=&lt;null&gt;]" result="JavaOclSet[JavaOclString[2]]"><TracerItem expression="CollectionLiteralExpImpl[name=,type=SetTypeImpl[name=Set(String),namespace=&lt;null&gt;,elementType=PrimitiveTypeImpl[name=String,namespace=&lt;null&gt;,kind=String],kind=Set],genericType=&lt;null&gt;,kind=Set]" result="JavaOclSet[JavaOclString[2]]"><TracerItem expression="CollectionItemImpl[name=,type=PrimitiveTypeImpl[name=String,namespace=&lt;null&gt;,kind=String],genericType=&lt;null&gt;]" result="JavaOclString[2]"><TracerItem expression="StringLiteralExpImpl[name=,type=PrimitiveTypeImpl[name=String,namespace=&lt;null&gt;,kind=String],genericType=&lt;null&gt;,stringSymbol=2]" result="JavaOclString[2]"/></TracerItem></TracerItem></TracerItem></TracerItem></TracerItem><TracerItem expression="IntegerLiteralExpImpl[name=,type=PrimitiveTypeImpl[name=Integer,namespace=&lt;null&gt;,kind=Integer],genericType=&lt;null&gt;,integerSymbol=1]" result="JavaOclInteger[1]"/></TracerItem></TracerItem></TracerItem></TracerItem></TracerItem></TracerItems>