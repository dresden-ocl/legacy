--------------------------------------------------------------------
-- exported by the SQUAM OCLEditor v0.8.0.x (OCLLib to standard OCL)
--------------------------------------------------------------------
package uml 


-- Library: OCLInvalids

--	A library with examples for OclInvalid.
-- 
--	Author: Joanna Chimiak-Opoka
--	Author: Hannes MÃ¶sl
--------------------------------------------------------
-- tests (queries with boolean result)
--------------------------------------------------------
--	Tests OclInvalid and its only instantiation, i.
-- e. invalid, and operations on it.
context Model

inv tOCLAnyInvalidDefinition_1: let v:OclAny = 1/0 in v.oclIsInvalid()

context Model
inv tOCLAnyInvalidDefinition_2: let v:OclAny = 1/0 in v.oclIsUndefined().oclIsInvalid()

context Model

inv tOCLAnyInvalidDefinition_3: let v:OclAny = 1/0 in v = v

-- oclInvalid compared with 1 --> is false, not OclInvalid
-- --> so this Constraint will FAIL
-- @Options{fail}
context Model
inv tOCLAnyInvalidDefinition_4: let v:OclAny = 1/0 in not (v <> 1)


--	Tests OclInvalid cased by operation calls with null as a parameter.
-- 
context Model
inv tOCLAnyInvalidOperationCalls_1: let v:OclAny = 1 in not  v.div(null).oclIsInvalid()


context Model
inv tOCLAnyInvalidOperationCalls_2: let v:OclAny = 1 in v.div(null).oclIsUndefined()

context Model
inv tOCLAnyInvalidOperationCalls_3: let v:OclAny = 1/0 in null.div(1).oclIsInvalid()

-- @Options{fail}
-- first-call on empty sequence is oclInvalid
context Model
inv tOCLAnyInvalidOperationCalls_4: let v:OclAny = 1/0 in not Sequence{}->first().oclIsInvalid()

-- oclIsUndefined() on first()-call fails, since first()-call is oclInvalid
context Model
inv tOCLAnyInvalidOperationCalls_5: let v:OclAny = 1/0 in Sequence{}->first().oclIsUndefined().oclIsUndefined()

context Model
inv tOCLAnyInvalidOperationCalls_6: let v:OclAny = 1/0 in null->asSet().oclIsInvalid()->forAll(e|e=true)

context Model
inv tOCLAnyInvalidOperationCalls_7: let v:OclAny = 1/0 in not null->size().oclIsInvalid()

-- @Options{fail}
-- compare 1 with OclInvalid --> false
context Model
inv tOCLAnyInvalidOperationCalls_8: let v:OclAny = 1/0 in Set{v}->size() = 1

endpackage