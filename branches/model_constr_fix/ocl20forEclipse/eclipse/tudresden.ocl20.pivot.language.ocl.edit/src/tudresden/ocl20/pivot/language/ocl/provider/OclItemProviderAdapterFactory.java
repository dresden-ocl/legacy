/**
 * <copyright>
 * </copyright>
 *
 * $Id$
 */
package tudresden.ocl20.pivot.language.ocl.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;

import tudresden.ocl20.pivot.language.ocl.util.OclAdapterFactory;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class OclItemProviderAdapterFactory extends OclAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public OclItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.BracketExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BracketExpCSItemProvider bracketExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.BracketExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBracketExpCSAdapter() {
		if (bracketExpCSItemProvider == null) {
			bracketExpCSItemProvider = new BracketExpCSItemProvider(this);
		}

		return bracketExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.NamedLiteralExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NamedLiteralExpCSItemProvider namedLiteralExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.NamedLiteralExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNamedLiteralExpCSAdapter() {
		if (namedLiteralExpCSItemProvider == null) {
			namedLiteralExpCSItemProvider = new NamedLiteralExpCSItemProvider(this);
		}

		return namedLiteralExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.PathNameCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PathNameCSItemProvider pathNameCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.PathNameCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPathNameCSAdapter() {
		if (pathNameCSItemProvider == null) {
			pathNameCSItemProvider = new PathNameCSItemProvider(this);
		}

		return pathNameCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.SimpleNameCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SimpleNameCSItemProvider simpleNameCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.SimpleNameCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSimpleNameCSAdapter() {
		if (simpleNameCSItemProvider == null) {
			simpleNameCSItemProvider = new SimpleNameCSItemProvider(this);
		}

		return simpleNameCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.TypePathNameSimpleCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypePathNameSimpleCSItemProvider typePathNameSimpleCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.TypePathNameSimpleCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypePathNameSimpleCSAdapter() {
		if (typePathNameSimpleCSItemProvider == null) {
			typePathNameSimpleCSItemProvider = new TypePathNameSimpleCSItemProvider(this);
		}

		return typePathNameSimpleCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.TypePathNameNestedCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TypePathNameNestedCSItemProvider typePathNameNestedCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.TypePathNameNestedCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTypePathNameNestedCSAdapter() {
		if (typePathNameNestedCSItemProvider == null) {
			typePathNameNestedCSItemProvider = new TypePathNameNestedCSItemProvider(this);
		}

		return typePathNameNestedCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.TupleTypeCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TupleTypeCSItemProvider tupleTypeCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.TupleTypeCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTupleTypeCSAdapter() {
		if (tupleTypeCSItemProvider == null) {
			tupleTypeCSItemProvider = new TupleTypeCSItemProvider(this);
		}

		return tupleTypeCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.CollectionTypeLiteralExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CollectionTypeLiteralExpCSItemProvider collectionTypeLiteralExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.CollectionTypeLiteralExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCollectionTypeLiteralExpCSAdapter() {
		if (collectionTypeLiteralExpCSItemProvider == null) {
			collectionTypeLiteralExpCSItemProvider = new CollectionTypeLiteralExpCSItemProvider(this);
		}

		return collectionTypeLiteralExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.TupleTypeLiteralExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TupleTypeLiteralExpCSItemProvider tupleTypeLiteralExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.TupleTypeLiteralExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTupleTypeLiteralExpCSAdapter() {
		if (tupleTypeLiteralExpCSItemProvider == null) {
			tupleTypeLiteralExpCSItemProvider = new TupleTypeLiteralExpCSItemProvider(this);
		}

		return tupleTypeLiteralExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableDeclarationWithInitCSItemProvider variableDeclarationWithInitCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableDeclarationWithInitCSAdapter() {
		if (variableDeclarationWithInitCSItemProvider == null) {
			variableDeclarationWithInitCSItemProvider = new VariableDeclarationWithInitCSItemProvider(this);
		}

		return variableDeclarationWithInitCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithoutInitCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableDeclarationWithoutInitCSItemProvider variableDeclarationWithoutInitCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithoutInitCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableDeclarationWithoutInitCSAdapter() {
		if (variableDeclarationWithoutInitCSItemProvider == null) {
			variableDeclarationWithoutInitCSItemProvider = new VariableDeclarationWithoutInitCSItemProvider(this);
		}

		return variableDeclarationWithoutInitCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitListCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableDeclarationWithInitListCSItemProvider variableDeclarationWithInitListCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithInitListCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableDeclarationWithInitListCSAdapter() {
		if (variableDeclarationWithInitListCSItemProvider == null) {
			variableDeclarationWithInitListCSItemProvider = new VariableDeclarationWithInitListCSItemProvider(this);
		}

		return variableDeclarationWithInitListCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithoutInitListCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected VariableDeclarationWithoutInitListCSItemProvider variableDeclarationWithoutInitListCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.VariableDeclarationWithoutInitListCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createVariableDeclarationWithoutInitListCSAdapter() {
		if (variableDeclarationWithoutInitListCSItemProvider == null) {
			variableDeclarationWithoutInitListCSItemProvider = new VariableDeclarationWithoutInitListCSItemProvider(this);
		}

		return variableDeclarationWithoutInitListCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.EnumLiteralOrStaticPropertyExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnumLiteralOrStaticPropertyExpCSItemProvider enumLiteralOrStaticPropertyExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.EnumLiteralOrStaticPropertyExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnumLiteralOrStaticPropertyExpCSAdapter() {
		if (enumLiteralOrStaticPropertyExpCSItemProvider == null) {
			enumLiteralOrStaticPropertyExpCSItemProvider = new EnumLiteralOrStaticPropertyExpCSItemProvider(this);
		}

		return enumLiteralOrStaticPropertyExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.CollectionLiteralExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CollectionLiteralExpCSItemProvider collectionLiteralExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.CollectionLiteralExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCollectionLiteralExpCSAdapter() {
		if (collectionLiteralExpCSItemProvider == null) {
			collectionLiteralExpCSItemProvider = new CollectionLiteralExpCSItemProvider(this);
		}

		return collectionLiteralExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.CollectionTypeIdentifierCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CollectionTypeIdentifierCSItemProvider collectionTypeIdentifierCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.CollectionTypeIdentifierCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCollectionTypeIdentifierCSAdapter() {
		if (collectionTypeIdentifierCSItemProvider == null) {
			collectionTypeIdentifierCSItemProvider = new CollectionTypeIdentifierCSItemProvider(this);
		}

		return collectionTypeIdentifierCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.CollectionLiteralPartsOclExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CollectionLiteralPartsOclExpCSItemProvider collectionLiteralPartsOclExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.CollectionLiteralPartsOclExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCollectionLiteralPartsOclExpCSAdapter() {
		if (collectionLiteralPartsOclExpCSItemProvider == null) {
			collectionLiteralPartsOclExpCSItemProvider = new CollectionLiteralPartsOclExpCSItemProvider(this);
		}

		return collectionLiteralPartsOclExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.CollectionRangeCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CollectionRangeCSItemProvider collectionRangeCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.CollectionRangeCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCollectionRangeCSAdapter() {
		if (collectionRangeCSItemProvider == null) {
			collectionRangeCSItemProvider = new CollectionRangeCSItemProvider(this);
		}

		return collectionRangeCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.IteratorExpVariableCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IteratorExpVariableCSItemProvider iteratorExpVariableCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.IteratorExpVariableCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIteratorExpVariableCSAdapter() {
		if (iteratorExpVariableCSItemProvider == null) {
			iteratorExpVariableCSItemProvider = new IteratorExpVariableCSItemProvider(this);
		}

		return iteratorExpVariableCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.IteratorExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IteratorExpCSItemProvider iteratorExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.IteratorExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIteratorExpCSAdapter() {
		if (iteratorExpCSItemProvider == null) {
			iteratorExpCSItemProvider = new IteratorExpCSItemProvider(this);
		}

		return iteratorExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.IterateExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IterateExpCSItemProvider iterateExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.IterateExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIterateExpCSAdapter() {
		if (iterateExpCSItemProvider == null) {
			iterateExpCSItemProvider = new IterateExpCSItemProvider(this);
		}

		return iterateExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.NavigationCallExp} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NavigationCallExpItemProvider navigationCallExpItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.NavigationCallExp}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNavigationCallExpAdapter() {
		if (navigationCallExpItemProvider == null) {
			navigationCallExpItemProvider = new NavigationCallExpItemProvider(this);
		}

		return navigationCallExpItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationCallBaseExpCSItemProvider operationCallBaseExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.OperationCallBaseExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationCallBaseExpCSAdapter() {
		if (operationCallBaseExpCSItemProvider == null) {
			operationCallBaseExpCSItemProvider = new OperationCallBaseExpCSItemProvider(this);
		}

		return operationCallBaseExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.PropertyCallBaseExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyCallBaseExpCSItemProvider propertyCallBaseExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.PropertyCallBaseExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyCallBaseExpCSAdapter() {
		if (propertyCallBaseExpCSItemProvider == null) {
			propertyCallBaseExpCSItemProvider = new PropertyCallBaseExpCSItemProvider(this);
		}

		return propertyCallBaseExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.ImplicitPropertyCallCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplicitPropertyCallCSItemProvider implicitPropertyCallCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.ImplicitPropertyCallCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplicitPropertyCallCSAdapter() {
		if (implicitPropertyCallCSItemProvider == null) {
			implicitPropertyCallCSItemProvider = new ImplicitPropertyCallCSItemProvider(this);
		}

		return implicitPropertyCallCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.ImplicitOperationCallCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ImplicitOperationCallCSItemProvider implicitOperationCallCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.ImplicitOperationCallCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createImplicitOperationCallCSAdapter() {
		if (implicitOperationCallCSItemProvider == null) {
			implicitOperationCallCSItemProvider = new ImplicitOperationCallCSItemProvider(this);
		}

		return implicitOperationCallCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.PropertyCallOnSelfExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyCallOnSelfExpCSItemProvider propertyCallOnSelfExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.PropertyCallOnSelfExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyCallOnSelfExpCSAdapter() {
		if (propertyCallOnSelfExpCSItemProvider == null) {
			propertyCallOnSelfExpCSItemProvider = new PropertyCallOnSelfExpCSItemProvider(this);
		}

		return propertyCallOnSelfExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.PropertyCallExplicitPathExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyCallExplicitPathExpCSItemProvider propertyCallExplicitPathExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.PropertyCallExplicitPathExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyCallExplicitPathExpCSAdapter() {
		if (propertyCallExplicitPathExpCSItemProvider == null) {
			propertyCallExplicitPathExpCSItemProvider = new PropertyCallExplicitPathExpCSItemProvider(this);
		}

		return propertyCallExplicitPathExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.OperationCallOnSelfExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationCallOnSelfExpCSItemProvider operationCallOnSelfExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.OperationCallOnSelfExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationCallOnSelfExpCSAdapter() {
		if (operationCallOnSelfExpCSItemProvider == null) {
			operationCallOnSelfExpCSItemProvider = new OperationCallOnSelfExpCSItemProvider(this);
		}

		return operationCallOnSelfExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.StaticOperationCallExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StaticOperationCallExpCSItemProvider staticOperationCallExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.StaticOperationCallExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStaticOperationCallExpCSAdapter() {
		if (staticOperationCallExpCSItemProvider == null) {
			staticOperationCallExpCSItemProvider = new StaticOperationCallExpCSItemProvider(this);
		}

		return staticOperationCallExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.UnaryOperationCallExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected UnaryOperationCallExpCSItemProvider unaryOperationCallExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.UnaryOperationCallExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createUnaryOperationCallExpCSAdapter() {
		if (unaryOperationCallExpCSItemProvider == null) {
			unaryOperationCallExpCSItemProvider = new UnaryOperationCallExpCSItemProvider(this);
		}

		return unaryOperationCallExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.LogicalNotOperationCallExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogicalNotOperationCallExpCSItemProvider logicalNotOperationCallExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.LogicalNotOperationCallExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLogicalNotOperationCallExpCSAdapter() {
		if (logicalNotOperationCallExpCSItemProvider == null) {
			logicalNotOperationCallExpCSItemProvider = new LogicalNotOperationCallExpCSItemProvider(this);
		}

		return logicalNotOperationCallExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.OperationCallWithSourceExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationCallWithSourceExpCSItemProvider operationCallWithSourceExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.OperationCallWithSourceExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationCallWithSourceExpCSAdapter() {
		if (operationCallWithSourceExpCSItemProvider == null) {
			operationCallWithSourceExpCSItemProvider = new OperationCallWithSourceExpCSItemProvider(this);
		}

		return operationCallWithSourceExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.AdditiveOperationCallExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AdditiveOperationCallExpCSItemProvider additiveOperationCallExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.AdditiveOperationCallExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAdditiveOperationCallExpCSAdapter() {
		if (additiveOperationCallExpCSItemProvider == null) {
			additiveOperationCallExpCSItemProvider = new AdditiveOperationCallExpCSItemProvider(this);
		}

		return additiveOperationCallExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.MultOperationCallExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MultOperationCallExpCSItemProvider multOperationCallExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.MultOperationCallExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMultOperationCallExpCSAdapter() {
		if (multOperationCallExpCSItemProvider == null) {
			multOperationCallExpCSItemProvider = new MultOperationCallExpCSItemProvider(this);
		}

		return multOperationCallExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.RelationalOperationCallExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RelationalOperationCallExpCSItemProvider relationalOperationCallExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.RelationalOperationCallExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRelationalOperationCallExpCSAdapter() {
		if (relationalOperationCallExpCSItemProvider == null) {
			relationalOperationCallExpCSItemProvider = new RelationalOperationCallExpCSItemProvider(this);
		}

		return relationalOperationCallExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.EqualityOperationCallExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EqualityOperationCallExpCSItemProvider equalityOperationCallExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.EqualityOperationCallExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEqualityOperationCallExpCSAdapter() {
		if (equalityOperationCallExpCSItemProvider == null) {
			equalityOperationCallExpCSItemProvider = new EqualityOperationCallExpCSItemProvider(this);
		}

		return equalityOperationCallExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.LogicalAndOperationCallExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogicalAndOperationCallExpCSItemProvider logicalAndOperationCallExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.LogicalAndOperationCallExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLogicalAndOperationCallExpCSAdapter() {
		if (logicalAndOperationCallExpCSItemProvider == null) {
			logicalAndOperationCallExpCSItemProvider = new LogicalAndOperationCallExpCSItemProvider(this);
		}

		return logicalAndOperationCallExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.LogicalOrOperationCallExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogicalOrOperationCallExpCSItemProvider logicalOrOperationCallExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.LogicalOrOperationCallExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLogicalOrOperationCallExpCSAdapter() {
		if (logicalOrOperationCallExpCSItemProvider == null) {
			logicalOrOperationCallExpCSItemProvider = new LogicalOrOperationCallExpCSItemProvider(this);
		}

		return logicalOrOperationCallExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.LogicalXorOperationCallExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogicalXorOperationCallExpCSItemProvider logicalXorOperationCallExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.LogicalXorOperationCallExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLogicalXorOperationCallExpCSAdapter() {
		if (logicalXorOperationCallExpCSItemProvider == null) {
			logicalXorOperationCallExpCSItemProvider = new LogicalXorOperationCallExpCSItemProvider(this);
		}

		return logicalXorOperationCallExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.LogicalImpliesOperationCallExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogicalImpliesOperationCallExpCSItemProvider logicalImpliesOperationCallExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.LogicalImpliesOperationCallExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLogicalImpliesOperationCallExpCSAdapter() {
		if (logicalImpliesOperationCallExpCSItemProvider == null) {
			logicalImpliesOperationCallExpCSItemProvider = new LogicalImpliesOperationCallExpCSItemProvider(this);
		}

		return logicalImpliesOperationCallExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.OperationCallWithImlicitSourceExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationCallWithImlicitSourceExpCSItemProvider operationCallWithImlicitSourceExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.OperationCallWithImlicitSourceExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationCallWithImlicitSourceExpCSAdapter() {
		if (operationCallWithImlicitSourceExpCSItemProvider == null) {
			operationCallWithImlicitSourceExpCSItemProvider = new OperationCallWithImlicitSourceExpCSItemProvider(this);
		}

		return operationCallWithImlicitSourceExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.TupleLiteralExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TupleLiteralExpCSItemProvider tupleLiteralExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.TupleLiteralExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTupleLiteralExpCSAdapter() {
		if (tupleLiteralExpCSItemProvider == null) {
			tupleLiteralExpCSItemProvider = new TupleLiteralExpCSItemProvider(this);
		}

		return tupleLiteralExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.IntegerLiteralExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IntegerLiteralExpCSItemProvider integerLiteralExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.IntegerLiteralExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIntegerLiteralExpCSAdapter() {
		if (integerLiteralExpCSItemProvider == null) {
			integerLiteralExpCSItemProvider = new IntegerLiteralExpCSItemProvider(this);
		}

		return integerLiteralExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.RealLiteralExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RealLiteralExpCSItemProvider realLiteralExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.RealLiteralExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRealLiteralExpCSAdapter() {
		if (realLiteralExpCSItemProvider == null) {
			realLiteralExpCSItemProvider = new RealLiteralExpCSItemProvider(this);
		}

		return realLiteralExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.BooleanLiteralExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BooleanLiteralExpCSItemProvider booleanLiteralExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.BooleanLiteralExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBooleanLiteralExpCSAdapter() {
		if (booleanLiteralExpCSItemProvider == null) {
			booleanLiteralExpCSItemProvider = new BooleanLiteralExpCSItemProvider(this);
		}

		return booleanLiteralExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.StringLiteralExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected StringLiteralExpCSItemProvider stringLiteralExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.StringLiteralExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createStringLiteralExpCSAdapter() {
		if (stringLiteralExpCSItemProvider == null) {
			stringLiteralExpCSItemProvider = new StringLiteralExpCSItemProvider(this);
		}

		return stringLiteralExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.InvalidLiteralExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InvalidLiteralExpCSItemProvider invalidLiteralExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.InvalidLiteralExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInvalidLiteralExpCSAdapter() {
		if (invalidLiteralExpCSItemProvider == null) {
			invalidLiteralExpCSItemProvider = new InvalidLiteralExpCSItemProvider(this);
		}

		return invalidLiteralExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.NullLiteralExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected NullLiteralExpCSItemProvider nullLiteralExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.NullLiteralExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createNullLiteralExpCSAdapter() {
		if (nullLiteralExpCSItemProvider == null) {
			nullLiteralExpCSItemProvider = new NullLiteralExpCSItemProvider(this);
		}

		return nullLiteralExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.LetExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LetExpCSItemProvider letExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.LetExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLetExpCSAdapter() {
		if (letExpCSItemProvider == null) {
			letExpCSItemProvider = new LetExpCSItemProvider(this);
		}

		return letExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.IfExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IfExpCSItemProvider ifExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.IfExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIfExpCSAdapter() {
		if (ifExpCSItemProvider == null) {
			ifExpCSItemProvider = new IfExpCSItemProvider(this);
		}

		return ifExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.PackageDeclarationWithNamespaceCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PackageDeclarationWithNamespaceCSItemProvider packageDeclarationWithNamespaceCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.PackageDeclarationWithNamespaceCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPackageDeclarationWithNamespaceCSAdapter() {
		if (packageDeclarationWithNamespaceCSItemProvider == null) {
			packageDeclarationWithNamespaceCSItemProvider = new PackageDeclarationWithNamespaceCSItemProvider(this);
		}

		return packageDeclarationWithNamespaceCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.PackageDeclarationNestedNamespaceCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PackageDeclarationNestedNamespaceCSItemProvider packageDeclarationNestedNamespaceCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.PackageDeclarationNestedNamespaceCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPackageDeclarationNestedNamespaceCSAdapter() {
		if (packageDeclarationNestedNamespaceCSItemProvider == null) {
			packageDeclarationNestedNamespaceCSItemProvider = new PackageDeclarationNestedNamespaceCSItemProvider(this);
		}

		return packageDeclarationNestedNamespaceCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.PackageDeclarationWithoutNamespaceCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PackageDeclarationWithoutNamespaceCSItemProvider packageDeclarationWithoutNamespaceCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.PackageDeclarationWithoutNamespaceCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPackageDeclarationWithoutNamespaceCSAdapter() {
		if (packageDeclarationWithoutNamespaceCSItemProvider == null) {
			packageDeclarationWithoutNamespaceCSItemProvider = new PackageDeclarationWithoutNamespaceCSItemProvider(this);
		}

		return packageDeclarationWithoutNamespaceCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.AttributeContextDeclarationCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AttributeContextDeclarationCSItemProvider attributeContextDeclarationCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.AttributeContextDeclarationCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAttributeContextDeclarationCSAdapter() {
		if (attributeContextDeclarationCSItemProvider == null) {
			attributeContextDeclarationCSItemProvider = new AttributeContextDeclarationCSItemProvider(this);
		}

		return attributeContextDeclarationCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.ClassifierContextDeclarationCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassifierContextDeclarationCSItemProvider classifierContextDeclarationCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.ClassifierContextDeclarationCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassifierContextDeclarationCSAdapter() {
		if (classifierContextDeclarationCSItemProvider == null) {
			classifierContextDeclarationCSItemProvider = new ClassifierContextDeclarationCSItemProvider(this);
		}

		return classifierContextDeclarationCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.OperationContextDeclarationCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationContextDeclarationCSItemProvider operationContextDeclarationCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.OperationContextDeclarationCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationContextDeclarationCSAdapter() {
		if (operationContextDeclarationCSItemProvider == null) {
			operationContextDeclarationCSItemProvider = new OperationContextDeclarationCSItemProvider(this);
		}

		return operationContextDeclarationCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.InitValueCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InitValueCSItemProvider initValueCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.InitValueCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInitValueCSAdapter() {
		if (initValueCSItemProvider == null) {
			initValueCSItemProvider = new InitValueCSItemProvider(this);
		}

		return initValueCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.DeriveValueCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DeriveValueCSItemProvider deriveValueCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.DeriveValueCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDeriveValueCSAdapter() {
		if (deriveValueCSItemProvider == null) {
			deriveValueCSItemProvider = new DeriveValueCSItemProvider(this);
		}

		return deriveValueCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.InvariantExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InvariantExpCSItemProvider invariantExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.InvariantExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInvariantExpCSAdapter() {
		if (invariantExpCSItemProvider == null) {
			invariantExpCSItemProvider = new InvariantExpCSItemProvider(this);
		}

		return invariantExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.DefinitionExpCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefinitionExpCSItemProvider definitionExpCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.DefinitionExpCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefinitionExpCSAdapter() {
		if (definitionExpCSItemProvider == null) {
			definitionExpCSItemProvider = new DefinitionExpCSItemProvider(this);
		}

		return definitionExpCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.DefinitionExpPropertyCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefinitionExpPropertyCSItemProvider definitionExpPropertyCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.DefinitionExpPropertyCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefinitionExpPropertyCSAdapter() {
		if (definitionExpPropertyCSItemProvider == null) {
			definitionExpPropertyCSItemProvider = new DefinitionExpPropertyCSItemProvider(this);
		}

		return definitionExpPropertyCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.DefinitionExpOperationCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DefinitionExpOperationCSItemProvider definitionExpOperationCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.DefinitionExpOperationCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDefinitionExpOperationCSAdapter() {
		if (definitionExpOperationCSItemProvider == null) {
			definitionExpOperationCSItemProvider = new DefinitionExpOperationCSItemProvider(this);
		}

		return definitionExpOperationCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.PreConditionDeclarationCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PreConditionDeclarationCSItemProvider preConditionDeclarationCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.PreConditionDeclarationCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPreConditionDeclarationCSAdapter() {
		if (preConditionDeclarationCSItemProvider == null) {
			preConditionDeclarationCSItemProvider = new PreConditionDeclarationCSItemProvider(this);
		}

		return preConditionDeclarationCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.PostConditionDeclarationCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PostConditionDeclarationCSItemProvider postConditionDeclarationCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.PostConditionDeclarationCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPostConditionDeclarationCSAdapter() {
		if (postConditionDeclarationCSItemProvider == null) {
			postConditionDeclarationCSItemProvider = new PostConditionDeclarationCSItemProvider(this);
		}

		return postConditionDeclarationCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.BodyDeclarationCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BodyDeclarationCSItemProvider bodyDeclarationCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.BodyDeclarationCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBodyDeclarationCSAdapter() {
		if (bodyDeclarationCSItemProvider == null) {
			bodyDeclarationCSItemProvider = new BodyDeclarationCSItemProvider(this);
		}

		return bodyDeclarationCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.OperationDefinitionInContextCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationDefinitionInContextCSItemProvider operationDefinitionInContextCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.OperationDefinitionInContextCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationDefinitionInContextCSAdapter() {
		if (operationDefinitionInContextCSItemProvider == null) {
			operationDefinitionInContextCSItemProvider = new OperationDefinitionInContextCSItemProvider(this);
		}

		return operationDefinitionInContextCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.OperationDefinitionInDefCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OperationDefinitionInDefCSItemProvider operationDefinitionInDefCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.OperationDefinitionInDefCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOperationDefinitionInDefCSAdapter() {
		if (operationDefinitionInDefCSItemProvider == null) {
			operationDefinitionInDefCSItemProvider = new OperationDefinitionInDefCSItemProvider(this);
		}

		return operationDefinitionInDefCSItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link tudresden.ocl20.pivot.language.ocl.ParameterCS} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ParameterCSItemProvider parameterCSItemProvider;

	/**
	 * This creates an adapter for a {@link tudresden.ocl20.pivot.language.ocl.ParameterCS}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createParameterCSAdapter() {
		if (parameterCSItemProvider == null) {
			parameterCSItemProvider = new ParameterCSItemProvider(this);
		}

		return parameterCSItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (bracketExpCSItemProvider != null) bracketExpCSItemProvider.dispose();
		if (namedLiteralExpCSItemProvider != null) namedLiteralExpCSItemProvider.dispose();
		if (pathNameCSItemProvider != null) pathNameCSItemProvider.dispose();
		if (simpleNameCSItemProvider != null) simpleNameCSItemProvider.dispose();
		if (typePathNameSimpleCSItemProvider != null) typePathNameSimpleCSItemProvider.dispose();
		if (typePathNameNestedCSItemProvider != null) typePathNameNestedCSItemProvider.dispose();
		if (tupleTypeCSItemProvider != null) tupleTypeCSItemProvider.dispose();
		if (collectionTypeLiteralExpCSItemProvider != null) collectionTypeLiteralExpCSItemProvider.dispose();
		if (tupleTypeLiteralExpCSItemProvider != null) tupleTypeLiteralExpCSItemProvider.dispose();
		if (variableDeclarationWithInitCSItemProvider != null) variableDeclarationWithInitCSItemProvider.dispose();
		if (variableDeclarationWithoutInitCSItemProvider != null) variableDeclarationWithoutInitCSItemProvider.dispose();
		if (variableDeclarationWithInitListCSItemProvider != null) variableDeclarationWithInitListCSItemProvider.dispose();
		if (variableDeclarationWithoutInitListCSItemProvider != null) variableDeclarationWithoutInitListCSItemProvider.dispose();
		if (enumLiteralOrStaticPropertyExpCSItemProvider != null) enumLiteralOrStaticPropertyExpCSItemProvider.dispose();
		if (collectionLiteralExpCSItemProvider != null) collectionLiteralExpCSItemProvider.dispose();
		if (collectionTypeIdentifierCSItemProvider != null) collectionTypeIdentifierCSItemProvider.dispose();
		if (collectionLiteralPartsOclExpCSItemProvider != null) collectionLiteralPartsOclExpCSItemProvider.dispose();
		if (collectionRangeCSItemProvider != null) collectionRangeCSItemProvider.dispose();
		if (iteratorExpVariableCSItemProvider != null) iteratorExpVariableCSItemProvider.dispose();
		if (iteratorExpCSItemProvider != null) iteratorExpCSItemProvider.dispose();
		if (iterateExpCSItemProvider != null) iterateExpCSItemProvider.dispose();
		if (navigationCallExpItemProvider != null) navigationCallExpItemProvider.dispose();
		if (operationCallBaseExpCSItemProvider != null) operationCallBaseExpCSItemProvider.dispose();
		if (propertyCallBaseExpCSItemProvider != null) propertyCallBaseExpCSItemProvider.dispose();
		if (implicitPropertyCallCSItemProvider != null) implicitPropertyCallCSItemProvider.dispose();
		if (implicitOperationCallCSItemProvider != null) implicitOperationCallCSItemProvider.dispose();
		if (propertyCallOnSelfExpCSItemProvider != null) propertyCallOnSelfExpCSItemProvider.dispose();
		if (propertyCallExplicitPathExpCSItemProvider != null) propertyCallExplicitPathExpCSItemProvider.dispose();
		if (operationCallOnSelfExpCSItemProvider != null) operationCallOnSelfExpCSItemProvider.dispose();
		if (staticOperationCallExpCSItemProvider != null) staticOperationCallExpCSItemProvider.dispose();
		if (unaryOperationCallExpCSItemProvider != null) unaryOperationCallExpCSItemProvider.dispose();
		if (logicalNotOperationCallExpCSItemProvider != null) logicalNotOperationCallExpCSItemProvider.dispose();
		if (operationCallWithSourceExpCSItemProvider != null) operationCallWithSourceExpCSItemProvider.dispose();
		if (additiveOperationCallExpCSItemProvider != null) additiveOperationCallExpCSItemProvider.dispose();
		if (multOperationCallExpCSItemProvider != null) multOperationCallExpCSItemProvider.dispose();
		if (relationalOperationCallExpCSItemProvider != null) relationalOperationCallExpCSItemProvider.dispose();
		if (equalityOperationCallExpCSItemProvider != null) equalityOperationCallExpCSItemProvider.dispose();
		if (logicalAndOperationCallExpCSItemProvider != null) logicalAndOperationCallExpCSItemProvider.dispose();
		if (logicalOrOperationCallExpCSItemProvider != null) logicalOrOperationCallExpCSItemProvider.dispose();
		if (logicalXorOperationCallExpCSItemProvider != null) logicalXorOperationCallExpCSItemProvider.dispose();
		if (logicalImpliesOperationCallExpCSItemProvider != null) logicalImpliesOperationCallExpCSItemProvider.dispose();
		if (operationCallWithImlicitSourceExpCSItemProvider != null) operationCallWithImlicitSourceExpCSItemProvider.dispose();
		if (tupleLiteralExpCSItemProvider != null) tupleLiteralExpCSItemProvider.dispose();
		if (integerLiteralExpCSItemProvider != null) integerLiteralExpCSItemProvider.dispose();
		if (realLiteralExpCSItemProvider != null) realLiteralExpCSItemProvider.dispose();
		if (booleanLiteralExpCSItemProvider != null) booleanLiteralExpCSItemProvider.dispose();
		if (stringLiteralExpCSItemProvider != null) stringLiteralExpCSItemProvider.dispose();
		if (invalidLiteralExpCSItemProvider != null) invalidLiteralExpCSItemProvider.dispose();
		if (nullLiteralExpCSItemProvider != null) nullLiteralExpCSItemProvider.dispose();
		if (letExpCSItemProvider != null) letExpCSItemProvider.dispose();
		if (ifExpCSItemProvider != null) ifExpCSItemProvider.dispose();
		if (packageDeclarationWithNamespaceCSItemProvider != null) packageDeclarationWithNamespaceCSItemProvider.dispose();
		if (packageDeclarationNestedNamespaceCSItemProvider != null) packageDeclarationNestedNamespaceCSItemProvider.dispose();
		if (packageDeclarationWithoutNamespaceCSItemProvider != null) packageDeclarationWithoutNamespaceCSItemProvider.dispose();
		if (attributeContextDeclarationCSItemProvider != null) attributeContextDeclarationCSItemProvider.dispose();
		if (classifierContextDeclarationCSItemProvider != null) classifierContextDeclarationCSItemProvider.dispose();
		if (operationContextDeclarationCSItemProvider != null) operationContextDeclarationCSItemProvider.dispose();
		if (initValueCSItemProvider != null) initValueCSItemProvider.dispose();
		if (deriveValueCSItemProvider != null) deriveValueCSItemProvider.dispose();
		if (invariantExpCSItemProvider != null) invariantExpCSItemProvider.dispose();
		if (definitionExpCSItemProvider != null) definitionExpCSItemProvider.dispose();
		if (definitionExpPropertyCSItemProvider != null) definitionExpPropertyCSItemProvider.dispose();
		if (definitionExpOperationCSItemProvider != null) definitionExpOperationCSItemProvider.dispose();
		if (preConditionDeclarationCSItemProvider != null) preConditionDeclarationCSItemProvider.dispose();
		if (postConditionDeclarationCSItemProvider != null) postConditionDeclarationCSItemProvider.dispose();
		if (bodyDeclarationCSItemProvider != null) bodyDeclarationCSItemProvider.dispose();
		if (operationDefinitionInContextCSItemProvider != null) operationDefinitionInContextCSItemProvider.dispose();
		if (operationDefinitionInDefCSItemProvider != null) operationDefinitionInDefCSItemProvider.dispose();
		if (parameterCSItemProvider != null) parameterCSItemProvider.dispose();
	}

}
