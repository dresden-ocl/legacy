/* This file was generated by SableCC (http://www.sablecc.org/). */

package tudresden.ocl.codegen.decl.treegen.node;

import java.util.*;
import tudresden.ocl.codegen.decl.treegen.analysis.*;

public final class AFunctionSelectList extends PSelectList
{
    private TIdentifier _functionName_;
    private PSelectList _parameter_;

    public AFunctionSelectList()
    {
    }

    public AFunctionSelectList(
        TIdentifier _functionName_,
        PSelectList _parameter_)
    {
        setFunctionName(_functionName_);

        setParameter(_parameter_);

    }
    public Object clone()
    {
        return new AFunctionSelectList(
            (TIdentifier) cloneNode(_functionName_),
            (PSelectList) cloneNode(_parameter_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFunctionSelectList(this);
    }

    public TIdentifier getFunctionName()
    {
        return _functionName_;
    }

    public void setFunctionName(TIdentifier node)
    {
        if(_functionName_ != null)
        {
            _functionName_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _functionName_ = node;
    }

    public PSelectList getParameter()
    {
        return _parameter_;
    }

    public void setParameter(PSelectList node)
    {
        if(_parameter_ != null)
        {
            _parameter_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _parameter_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_functionName_)
            + toString(_parameter_);
    }

    void removeChild(Node child)
    {
        if(_functionName_ == child)
        {
            _functionName_ = null;
            return;
        }

        if(_parameter_ == child)
        {
            _parameter_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_functionName_ == oldChild)
        {
            setFunctionName((TIdentifier) newChild);
            return;
        }

        if(_parameter_ == oldChild)
        {
            setParameter((PSelectList) newChild);
            return;
        }

    }
}
