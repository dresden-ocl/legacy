/* This file was generated by SableCC (http://www.sablecc.org/). */

package tudresden.ocl.codegen.decl.treegen.node;

import tudresden.ocl.codegen.decl.treegen.analysis.*;

public final class X1PUnaryExpression extends XPUnaryExpression
{
    private XPUnaryExpression _xPUnaryExpression_;
    private PUnaryExpression _pUnaryExpression_;

    public X1PUnaryExpression()
    {
    }

    public X1PUnaryExpression(
        XPUnaryExpression _xPUnaryExpression_,
        PUnaryExpression _pUnaryExpression_)
    {
        setXPUnaryExpression(_xPUnaryExpression_);
        setPUnaryExpression(_pUnaryExpression_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPUnaryExpression getXPUnaryExpression()
    {
        return _xPUnaryExpression_;
    }

    public void setXPUnaryExpression(XPUnaryExpression node)
    {
        if(_xPUnaryExpression_ != null)
        {
            _xPUnaryExpression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPUnaryExpression_ = node;
    }

    public PUnaryExpression getPUnaryExpression()
    {
        return _pUnaryExpression_;
    }

    public void setPUnaryExpression(PUnaryExpression node)
    {
        if(_pUnaryExpression_ != null)
        {
            _pUnaryExpression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pUnaryExpression_ = node;
    }

    void removeChild(Node child)
    {
        if(_xPUnaryExpression_ == child)
        {
            _xPUnaryExpression_ = null;
        }

        if(_pUnaryExpression_ == child)
        {
            _pUnaryExpression_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPUnaryExpression_) +
            toString(_pUnaryExpression_);
    }
}
