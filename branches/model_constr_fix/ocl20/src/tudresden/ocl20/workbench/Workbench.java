/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
 * OCL 2 Compiler                                                    *
 * Copyright (C) 2002, 2003 Stefan Ocke (stefan.ocke@gmx.de).        *
 * All rights reserved.                                              *
 *                                                                   *
 * This work was done as a diploma project at the Chair for Software *
 * Technology, Dresden University Of Technology, Germany             *
 * (http://www-st.inf.tu-dresden.de).  It is understood that any     *
 * modification not identified as such is not covered by the         *
 * preceding statement.                                              *
 *                                                                   *
 * This work is free software; you can redistribute it and/or        *
 * modify it under the terms of the GNU Library General Public       *
 * License as published by the Free Software Foundation; either      *
 * version 2 of the License, or (at your option) any later version.  *
 *                                                                   *
 * This work is distributed in the hope that it will be useful,      *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of    *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU *
 * Library General Public License for more details.                  *
 *                                                                   *
 * You should have received a copy of the GNU Library General Public *
 * License along with this library; if not, write to the             *
 * Free Software Foundation, Inc., 59 Temple Place - Suite 330,      *
 * Boston, MA  02111-1307, USA.                                      *
 *                                                                   *
 * To submit a bug report, send a comment, or get the latest news on *
 * this project and other projects, please visit the web site:       *
 * http://www-st.inf.tu-dresden.de/ (Chair home page) or             *
 * http://www-st.inf.tu-dresden.de/ocl/ (project home page)          *
 * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * */

package tudresden.ocl20.workbench;

import javax.swing.*;

/**
 *A GUI for loading metamodels, creating OCL constraints for those
 *metamodels, generate code for them and evaluating them for models.
 * @author  Stefan Ocke
 */
public class Workbench extends javax.swing.JFrame {
    
    /** Creates new form Workbench */
    public Workbench() {

        
        initComponents();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jSplitPane3 = new javax.swing.JSplitPane();
        jPanel13 = new javax.swing.JPanel();
        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        classifierList = new javax.swing.JList();
        jPanel3 = new javax.swing.JPanel();
        runOclScriptButton = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jSplitPane2 = new javax.swing.JSplitPane();
        jPanel8 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        expInOclList = new javax.swing.JList();
        jPanel24 = new javax.swing.JPanel();
        deleteExpressionButton = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        expBodyTextArea = new javax.swing.JTextArea();
        jPanel11 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jPanel15 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        metaModelList = new javax.swing.JList();
        jPanel16 = new javax.swing.JPanel();
        loadMMButton = new javax.swing.JButton();
        deleteMMButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        cgClassifierLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        generateCodeButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        codePane = new javax.swing.JTextPane();
        jPanel4 = new javax.swing.JPanel();
        jSplitPane4 = new javax.swing.JSplitPane();
        jPanel17 = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        modelList = new javax.swing.JList();
        jPanel19 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        metaModelNameLabel = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        loadModelButton = new javax.swing.JButton();
        deleteModelButton = new javax.swing.JButton();
        jPanel18 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        resultsTable = new javax.swing.JTable();
        jPanel22 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        evalClassifierLabel = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        evalJavaClassLabel = new javax.swing.JLabel();
        jPanel23 = new javax.swing.JPanel();
        evaluateButton = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("OCL Workbench");
        setFont(new java.awt.Font("Arial", 0, 14));
        setUndecorated(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setToolTipText("Metamodel");
        jSplitPane3.setResizeWeight(0.04);
        jPanel13.setLayout(new java.awt.BorderLayout());

        jSplitPane1.setResizeWeight(0.1);
        jPanel6.setLayout(new java.awt.GridBagLayout());

        jLabel3.setText("Classifiers with Expressions in OCL");
        jPanel5.add(jLabel3);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel6.add(jPanel5, gridBagConstraints);

        classifierList.setModel(wbModel.getClassifiers());
        classifierList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        classifierList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                classifierListValueChanged(evt);
            }
        });

        jScrollPane1.setViewportView(classifierList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel6.add(jScrollPane1, gridBagConstraints);

        runOclScriptButton.setText("Run OCL Script ...");
        runOclScriptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runOclScriptButtonActionPerformed(evt);
            }
        });

        jPanel3.add(runOclScriptButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        jPanel6.add(jPanel3, gridBagConstraints);

        jSplitPane1.setLeftComponent(jPanel6);

        jPanel7.setLayout(new java.awt.GridLayout(1, 0));

        jSplitPane2.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane2.setResizeWeight(0.5);
        jPanel8.setLayout(new java.awt.BorderLayout());

        jLabel4.setText("Expressions in OCL");
        jPanel9.add(jLabel4);

        jPanel8.add(jPanel9, java.awt.BorderLayout.NORTH);

        expInOclList.setModel(wbModel.getExpressions());
        expInOclList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                expInOclListValueChanged(evt);
            }
        });

        jScrollPane2.setViewportView(expInOclList);

        jPanel8.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        deleteExpressionButton.setText("Delete");
        deleteExpressionButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteExpressionButtonActionPerformed(evt);
            }
        });

        jPanel24.add(deleteExpressionButton);

        jPanel8.add(jPanel24, java.awt.BorderLayout.EAST);

        jSplitPane2.setTopComponent(jPanel8);

        jPanel10.setLayout(new java.awt.BorderLayout());

        expBodyTextArea.setEditable(false);
        expBodyTextArea.setLineWrap(true);
        expBodyTextArea.setRows(10);
        jScrollPane3.setViewportView(expBodyTextArea);

        jPanel10.add(jScrollPane3, java.awt.BorderLayout.CENTER);

        jLabel2.setText("Expression Body");
        jPanel11.add(jLabel2);

        jPanel10.add(jPanel11, java.awt.BorderLayout.NORTH);

        jSplitPane2.setRightComponent(jPanel10);

        jPanel7.add(jSplitPane2);

        jSplitPane1.setRightComponent(jPanel7);

        jPanel13.add(jSplitPane1, java.awt.BorderLayout.CENTER);

        jSplitPane3.setRightComponent(jPanel13);

        jPanel14.setLayout(new java.awt.GridBagLayout());

        jLabel7.setText("Metamodels");
        jPanel15.add(jLabel7);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel14.add(jPanel15, gridBagConstraints);

        metaModelList.setModel(wbModel.getMetaModels());
        metaModelList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                metaModelListValueChanged(evt);
            }
        });

        jScrollPane5.setViewportView(metaModelList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel14.add(jScrollPane5, gridBagConstraints);

        loadMMButton.setText("Install ...");
        loadMMButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadMMButtonActionPerformed(evt);
            }
        });

        jPanel16.add(loadMMButton);

        deleteMMButton.setText("Uninstall");
        deleteMMButton.setEnabled(false);
        deleteMMButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteMMButtonActionPerformed(evt);
            }
        });

        jPanel16.add(deleteMMButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel14.add(jPanel16, gridBagConstraints);

        jSplitPane3.setLeftComponent(jPanel14);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(jSplitPane3, gridBagConstraints);

        jTabbedPane1.addTab("Metamodel", jPanel1);

        jPanel2.setLayout(new java.awt.GridBagLayout());

        jPanel12.setLayout(new java.awt.GridBagLayout());

        jLabel5.setText("Contextual Classifier:   ");
        jPanel12.add(jLabel5, new java.awt.GridBagConstraints());

        cgClassifierLabel.setText("<none>");
        jPanel12.add(cgClassifierLabel, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.weightx = 1.0;
        jPanel12.add(jLabel6, gridBagConstraints);

        generateCodeButton.setText("Generate Code");
        generateCodeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generateCodeButtonActionPerformed(evt);
            }
        });

        jPanel12.add(generateCodeButton, new java.awt.GridBagConstraints());

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel2.add(jPanel12, gridBagConstraints);

        codePane.setEditable(false);
        jScrollPane4.setViewportView(codePane);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel2.add(jScrollPane4, gridBagConstraints);

        jTabbedPane1.addTab("Code Generator", jPanel2);

        jPanel4.setLayout(new java.awt.BorderLayout());

        jSplitPane4.setResizeWeight(0.5);
        jPanel17.setLayout(new java.awt.GridBagLayout());

        modelList.setModel(wbModel.getModels());
        modelList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                modelListValueChanged(evt);
            }
        });

        jScrollPane6.setViewportView(modelList);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel17.add(jScrollPane6, gridBagConstraints);

        jLabel1.setText("Models for Metamodel ");
        jPanel19.add(jLabel1);

        metaModelNameLabel.setText("<none>");
        jPanel19.add(metaModelNameLabel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel17.add(jPanel19, gridBagConstraints);

        loadModelButton.setText("Load ...");
        loadModelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadModelButtonActionPerformed(evt);
            }
        });

        jPanel20.add(loadModelButton);

        deleteModelButton.setText("Delete");
        deleteModelButton.setEnabled(false);
        deleteModelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteModelButtonActionPerformed(evt);
            }
        });

        jPanel20.add(deleteModelButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        jPanel17.add(jPanel20, gridBagConstraints);

        jSplitPane4.setLeftComponent(jPanel17);

        jPanel18.setLayout(new java.awt.GridBagLayout());

        jLabel8.setText("Evaluation Results");
        jPanel21.add(jLabel8);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        jPanel18.add(jPanel21, gridBagConstraints);

        resultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        resultsTable.setModel(wbModel.getResults());
        jScrollPane7.setViewportView(resultsTable);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPanel18.add(jScrollPane7, gridBagConstraints);

        jPanel22.setLayout(new java.awt.GridBagLayout());

        jLabel9.setText("Contextual Classifier:   ");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel22.add(jLabel9, gridBagConstraints);

        evalClassifierLabel.setText("<none>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel22.add(evalClassifierLabel, gridBagConstraints);

        jLabel10.setText("Java Class to run:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        jPanel22.add(jLabel10, gridBagConstraints);

        evalJavaClassLabel.setText("<none>");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        jPanel22.add(evalJavaClassLabel, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.ipady = 9;
        gridBagConstraints.insets = new java.awt.Insets(0, 5, 0, 5);
        jPanel18.add(jPanel22, gridBagConstraints);

        evaluateButton.setText("Evaluate");
        evaluateButton.setEnabled(false);
        evaluateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evaluateButtonActionPerformed(evt);
            }
        });

        jPanel23.add(evaluateButton);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        jPanel18.add(jPanel23, gridBagConstraints);

        jSplitPane4.setRightComponent(jPanel18);

        jPanel4.add(jSplitPane4, java.awt.BorderLayout.CENTER);

        jTabbedPane1.addTab("Models", jPanel4);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jTabbedPane1, gridBagConstraints);

        pack();
    }//GEN-END:initComponents

    private void deleteExpressionButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteExpressionButtonActionPerformed
        // Add your handling code here:
        wbModel.deleteExpression(this.expInOclList.getSelectedIndex());
    }//GEN-LAST:event_deleteExpressionButtonActionPerformed

    private void deleteModelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteModelButtonActionPerformed
        // Add your handling code here:
        wbModel.deleteSelectedModel();
    }//GEN-LAST:event_deleteModelButtonActionPerformed

    private void modelListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_modelListValueChanged
        // Add your handling code here:
        wbModel.setSelectedModel(this.modelList.getSelectedIndex());
        this.evaluateButton.setEnabled(classifierList.getSelectedIndex()>=0 && modelList.getSelectedIndex()>=0 && wbModel.isJavaClassAvailable());
        this.deleteModelButton.setEnabled(modelList.getSelectedIndex()>=0);
    }//GEN-LAST:event_modelListValueChanged

    private void evaluateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evaluateButtonActionPerformed
        // Add your handling code here:
        wbModel.evaluate();
    }//GEN-LAST:event_evaluateButtonActionPerformed

    private void loadModelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadModelButtonActionPerformed
        // Add your handling code here:
        JFileChooser fc = new JFileChooser();
        
        java.net.URL dir = ClassLoader.getSystemClassLoader().getResource("Models/");
        
        fc.setCurrentDirectory(new java.io.File(java.net.URLDecoder.decode(dir.getPath())));
        
        int returnVal = fc.showOpenDialog(this);
        
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            
            java.io.File file = fc.getSelectedFile();
            
            try{
                wbModel.loadModel(file);
                //metaModelName.setText(file.getName());
            } catch (Exception e){
                JOptionPane.showMessageDialog(this,e.getMessage(),"Could not load metamodel",JOptionPane.ERROR_MESSAGE);
                //metaModelName.setText("none");
            }
            
        }
    }//GEN-LAST:event_loadModelButtonActionPerformed

    private void metaModelListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_metaModelListValueChanged
        int i = this.metaModelList.getSelectedIndex();
        wbModel.setSelectedMetamodel(i);
        this.metaModelNameLabel.setText(wbModel.getSelectedMetamodelName());
        this.deleteMMButton.setEnabled(i>=0);
    }//GEN-LAST:event_metaModelListValueChanged

    private void deleteMMButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteMMButtonActionPerformed
        wbModel.deleteSelectedMetamodel(this.metaModelList.getSelectedIndex());
    }//GEN-LAST:event_deleteMMButtonActionPerformed

    private void generateCodeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generateCodeButtonActionPerformed
        // Add your handling code here:
        codePane.setText(wbModel.getCode());
        this.evalJavaClassLabel.setText(wbModel.getJavaClassName());
    }//GEN-LAST:event_generateCodeButtonActionPerformed

    private void expInOclListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_expInOclListValueChanged
        // Add your handling code here:
        expBodyTextArea.setText(wbModel.getExpressionBody(expInOclList.getSelectedIndex()));
        this.deleteExpressionButton.setEnabled(expInOclList.getSelectedIndex()>=0);
    }//GEN-LAST:event_expInOclListValueChanged
    
    private void classifierListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_classifierListValueChanged
        // Add your handling code here:
        wbModel.setSelectedClassifier(classifierList.getSelectedIndex());
        
        this.cgClassifierLabel.setText(wbModel.getSelectedClassifierName());
        this.evalClassifierLabel.setText(wbModel.getSelectedClassifierName());
        this.evalJavaClassLabel.setText(wbModel.getJavaClassName());
        this.codePane.setText("");
        this.evaluateButton.setEnabled(classifierList.getSelectedIndex()>=0 && modelList.getSelectedIndex()>=0 && wbModel.isJavaClassAvailable());
        
    }//GEN-LAST:event_classifierListValueChanged
    
    private void runOclScriptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runOclScriptButtonActionPerformed
        // Add your handling code here:
        JFileChooser fc = new JFileChooser();
        
        java.net.URL dir = ClassLoader.getSystemClassLoader().getResource("OclScript/");
        fc.setCurrentDirectory(new java.io.File(java.net.URLDecoder.decode(dir.getPath())));
        int returnVal = fc.showOpenDialog(this);
        
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            
            java.io.File file = fc.getSelectedFile();
            
            try{
                wbModel.runOclScript(file);
                
                
            } catch (Exception e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(this,e,"Error while running script",JOptionPane.ERROR_MESSAGE);
                
            }
            
        }
    }//GEN-LAST:event_runOclScriptButtonActionPerformed
    
    private void loadMMButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadMMButtonActionPerformed
        // Add your handling code here:
        JFileChooser fc = new JFileChooser();
        
        java.net.URL dir = ClassLoader.getSystemClassLoader().getResource("MetamodelsWithOcl/");
        
        fc.setCurrentDirectory(new java.io.File(java.net.URLDecoder.decode(dir.getPath())));
        
        int returnVal = fc.showOpenDialog(this);
        
        if(returnVal == JFileChooser.APPROVE_OPTION) {
            
            java.io.File file = fc.getSelectedFile();
            
            try{
                wbModel.loadMetamodel(file);
                //metaModelName.setText(file.getName());
            } catch (Exception e){
                e.printStackTrace();
                JOptionPane.showMessageDialog(this,e.getMessage(),"Could not load metamodel",JOptionPane.ERROR_MESSAGE);
                //metaModelName.setText("none");
            }
            
        }
        
    }//GEN-LAST:event_loadMMButtonActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        wbModel.exit();
        System.exit(0);
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new Workbench().show();
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cgClassifierLabel;
    private javax.swing.JList classifierList;
    private javax.swing.JTextPane codePane;
    private javax.swing.JButton deleteExpressionButton;
    private javax.swing.JButton deleteMMButton;
    private javax.swing.JButton deleteModelButton;
    private javax.swing.JLabel evalClassifierLabel;
    private javax.swing.JLabel evalJavaClassLabel;
    private javax.swing.JButton evaluateButton;
    private javax.swing.JTextArea expBodyTextArea;
    private javax.swing.JList expInOclList;
    private javax.swing.JButton generateCodeButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JSplitPane jSplitPane2;
    private javax.swing.JSplitPane jSplitPane3;
    private javax.swing.JSplitPane jSplitPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JButton loadMMButton;
    private javax.swing.JButton loadModelButton;
    private javax.swing.JList metaModelList;
    private javax.swing.JLabel metaModelNameLabel;
    private javax.swing.JList modelList;
    private javax.swing.JTable resultsTable;
    private javax.swing.JButton runOclScriptButton;
    // End of variables declaration//GEN-END:variables
    
    private WorkbenchModel wbModel = new WorkbenchModel();
}
