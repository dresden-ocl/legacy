/* This file was generated by SableCC (http://www.sablecc.org/). */

package org.sablecc.sablecc.node;

import org.sablecc.sablecc.analysis.*;
import org.sablecc.sablecc.node.Node;
import org.sablecc.sablecc.node.PRegExpTail;
import org.sablecc.sablecc.node.Switch;
import org.sablecc.sablecc.node.XPRegExpTail;

public final class X1PRegExpTail extends XPRegExpTail
{
    private XPRegExpTail _xPRegExpTail_;
    private PRegExpTail _pRegExpTail_;

    public X1PRegExpTail()
    {
    }

    public X1PRegExpTail(
        XPRegExpTail _xPRegExpTail_,
        PRegExpTail _pRegExpTail_)
    {
        setXPRegExpTail(_xPRegExpTail_);
        setPRegExpTail(_pRegExpTail_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPRegExpTail getXPRegExpTail()
    {
        return _xPRegExpTail_;
    }

    public void setXPRegExpTail(XPRegExpTail node)
    {
        if(_xPRegExpTail_ != null)
        {
            _xPRegExpTail_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPRegExpTail_ = node;
    }

    public PRegExpTail getPRegExpTail()
    {
        return _pRegExpTail_;
    }

    public void setPRegExpTail(PRegExpTail node)
    {
        if(_pRegExpTail_ != null)
        {
            _pRegExpTail_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pRegExpTail_ = node;
    }

    void removeChild(Node child)
    {
        if(_xPRegExpTail_ == child)
        {
            _xPRegExpTail_ = null;
        }

        if(_pRegExpTail_ == child)
        {
            _pRegExpTail_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPRegExpTail_) +
            toString(_pRegExpTail_);
    }
}
