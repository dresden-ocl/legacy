/* This file was generated by SableCC (http://www.sablecc.org/). */

package tudresden.ocl.codegen.decl.treegen.node;

import java.util.*;
import tudresden.ocl.codegen.decl.treegen.analysis.*;

public final class ASelectClause extends PSelectClause
{
    private PSetQuantifier _setQuantifier_;
    private PSelectList _selectList_;

    public ASelectClause()
    {
    }

    public ASelectClause(
        PSetQuantifier _setQuantifier_,
        PSelectList _selectList_)
    {
        setSetQuantifier(_setQuantifier_);

        setSelectList(_selectList_);

    }
    public Object clone()
    {
        return new ASelectClause(
            (PSetQuantifier) cloneNode(_setQuantifier_),
            (PSelectList) cloneNode(_selectList_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASelectClause(this);
    }

    public PSetQuantifier getSetQuantifier()
    {
        return _setQuantifier_;
    }

    public void setSetQuantifier(PSetQuantifier node)
    {
        if(_setQuantifier_ != null)
        {
            _setQuantifier_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _setQuantifier_ = node;
    }

    public PSelectList getSelectList()
    {
        return _selectList_;
    }

    public void setSelectList(PSelectList node)
    {
        if(_selectList_ != null)
        {
            _selectList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _selectList_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_setQuantifier_)
            + toString(_selectList_);
    }

    void removeChild(Node child)
    {
        if(_setQuantifier_ == child)
        {
            _setQuantifier_ = null;
            return;
        }

        if(_selectList_ == child)
        {
            _selectList_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_setQuantifier_ == oldChild)
        {
            setSetQuantifier((PSetQuantifier) newChild);
            return;
        }

        if(_selectList_ == oldChild)
        {
            setSelectList((PSelectList) newChild);
            return;
        }

    }
}
