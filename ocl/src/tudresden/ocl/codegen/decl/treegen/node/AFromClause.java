/* This file was generated by SableCC (http://www.sablecc.org/). */

package tudresden.ocl.codegen.decl.treegen.node;

import java.util.*;
import tudresden.ocl.codegen.decl.treegen.analysis.*;

public final class AFromClause extends PFromClause
{
    private final LinkedList _tableReference_ = new TypedLinkedList(new TableReference_Cast());

    public AFromClause()
    {
    }

    public AFromClause(
        List _tableReference_)
    {
        {
            this._tableReference_.clear();
            this._tableReference_.addAll(_tableReference_);
        }

    }

    public AFromClause(
        XPTableReference _tableReference_)
    {
        if(_tableReference_ != null)
        {
            while(_tableReference_ instanceof X1PTableReference)
            {
                this._tableReference_.addFirst(((X1PTableReference) _tableReference_).getPTableReference());
                _tableReference_ = ((X1PTableReference) _tableReference_).getXPTableReference();
            }
            this._tableReference_.addFirst(((X2PTableReference) _tableReference_).getPTableReference());
        }

    }
    public Object clone()
    {
        return new AFromClause(
            cloneList(_tableReference_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAFromClause(this);
    }

    public LinkedList getTableReference()
    {
        return _tableReference_;
    }

    public void setTableReference(List list)
    {
        _tableReference_.clear();
        _tableReference_.addAll(list);
    }

    public String toString()
    {
        return ""
            + toString(_tableReference_);
    }

    void removeChild(Node child)
    {
        if(_tableReference_.remove(child))
        {
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        for(ListIterator i = _tableReference_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

    }

    private class TableReference_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PTableReference node = (PTableReference) o;

            if((node.parent() != null) &&
                (node.parent() != AFromClause.this))
            {
                node.parent().removeChild(node);
            }

            if((node.parent() == null) ||
                (node.parent() != AFromClause.this))
            {
                node.parent(AFromClause.this);
            }

            return node;
        }
    }
}
