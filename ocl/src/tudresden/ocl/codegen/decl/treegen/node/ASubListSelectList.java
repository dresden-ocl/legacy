/* This file was generated by SableCC (http://www.sablecc.org/). */

package tudresden.ocl.codegen.decl.treegen.node;

import java.util.*;
import tudresden.ocl.codegen.decl.treegen.analysis.*;

public final class ASubListSelectList extends PSelectList
{
    private final LinkedList _selectSubListItem_ = new TypedLinkedList(new SelectSubListItem_Cast());

    public ASubListSelectList()
    {
    }

    public ASubListSelectList(
        List _selectSubListItem_)
    {
        {
            this._selectSubListItem_.clear();
            this._selectSubListItem_.addAll(_selectSubListItem_);
        }

    }

    public ASubListSelectList(
        XPSelectSubListItem _selectSubListItem_)
    {
        if(_selectSubListItem_ != null)
        {
            while(_selectSubListItem_ instanceof X1PSelectSubListItem)
            {
                this._selectSubListItem_.addFirst(((X1PSelectSubListItem) _selectSubListItem_).getPSelectSubListItem());
                _selectSubListItem_ = ((X1PSelectSubListItem) _selectSubListItem_).getXPSelectSubListItem();
            }
            this._selectSubListItem_.addFirst(((X2PSelectSubListItem) _selectSubListItem_).getPSelectSubListItem());
        }

    }
    public Object clone()
    {
        return new ASubListSelectList(
            cloneList(_selectSubListItem_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseASubListSelectList(this);
    }

    public LinkedList getSelectSubListItem()
    {
        return _selectSubListItem_;
    }

    public void setSelectSubListItem(List list)
    {
        _selectSubListItem_.clear();
        _selectSubListItem_.addAll(list);
    }

    public String toString()
    {
        return ""
            + toString(_selectSubListItem_);
    }

    void removeChild(Node child)
    {
        if(_selectSubListItem_.remove(child))
        {
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        for(ListIterator i = _selectSubListItem_.listIterator(); i.hasNext();)
        {
            if(i.next() == oldChild)
            {
                if(newChild != null)
                {
                    i.set(newChild);
                    oldChild.parent(null);
                    return;
                }

                i.remove();
                oldChild.parent(null);
                return;
            }
        }

    }

    private class SelectSubListItem_Cast implements Cast
    {
        public Object cast(Object o)
        {
            PSelectSubListItem node = (PSelectSubListItem) o;

            if((node.parent() != null) &&
                (node.parent() != ASubListSelectList.this))
            {
                node.parent().removeChild(node);
            }

            if((node.parent() == null) ||
                (node.parent() != ASubListSelectList.this))
            {
                node.parent(ASubListSelectList.this);
            }

            return node;
        }
    }
}
