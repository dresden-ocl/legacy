/* This file was generated by SableCC (http://www.sable.mcgill.ca/sablecc/). */

package tudresden.ocl.parser.node;

import java.util.*;
import tudresden.ocl.parser.analysis.*;

public final class ANEqualRelationalOperator extends PRelationalOperator
{
    private TNEqual _nEqual_;

    public ANEqualRelationalOperator()
    {
    }

    public ANEqualRelationalOperator(
        TNEqual _nEqual_)
    {
        setNEqual(_nEqual_);

    }
    public Object clone()
    {
        return new ANEqualRelationalOperator(
            (TNEqual) cloneNode(_nEqual_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANEqualRelationalOperator(this);
    }

    public TNEqual getNEqual()
    {
        return _nEqual_;
    }

    public void setNEqual(TNEqual node)
    {
        if(_nEqual_ != null)
        {
            _nEqual_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _nEqual_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_nEqual_);
    }

    void removeChild(Node child)
    {
        if(_nEqual_ == child)
        {
            _nEqual_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_nEqual_ == oldChild)
        {
            setNEqual((TNEqual) newChild);
            return;
        }

    }
}
