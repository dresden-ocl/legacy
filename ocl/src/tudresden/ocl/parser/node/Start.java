/* This file was generated by SableCC (http://www.sable.mcgill.ca/sablecc/). */

package tudresden.ocl.parser.node;

import tudresden.ocl.parser.analysis.*;

public final class Start extends Node
{
    private PConstraint _pConstraint_;
    private EOF _eof_;

    public Start()
    {
    }

    public Start(
        PConstraint _pConstraint_,
        EOF _eof_)
    {
        setPConstraint(_pConstraint_);
        setEOF(_eof_);
    }

    public Object clone()
    {
        return new Start(
            (PConstraint) cloneNode(_pConstraint_),
            (EOF) cloneNode(_eof_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseStart(this);
    }

    public PConstraint getPConstraint()
    {
        return _pConstraint_;
    }

    public void setPConstraint(PConstraint node)
    {
        if(_pConstraint_ != null)
        {
            _pConstraint_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pConstraint_ = node;
    }

    public EOF getEOF()
    {
        return _eof_;
    }

    public void setEOF(EOF node)
    {
        if(_eof_ != null)
        {
            _eof_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _eof_ = node;
    }

    void removeChild(Node child)
    {
        if(_pConstraint_ == child)
        {
            _pConstraint_ = null;
            return;
        }

        if(_eof_ == child)
        {
            _eof_ = null;
            return;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_pConstraint_ == oldChild)
        {
            setPConstraint((PConstraint) newChild);
            return;
        }

        if(_eof_ == oldChild)
        {
            setEOF((EOF) newChild);
            return;
        }
    }

    public String toString()
    {
        return "" +
            toString(_pConstraint_) +
            toString(_eof_);
    }
}

