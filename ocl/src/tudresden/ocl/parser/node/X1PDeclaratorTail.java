/* This file was generated by SableCC (http://www.sable.mcgill.ca/sablecc/). */

package tudresden.ocl.parser.node;

import tudresden.ocl.parser.analysis.*;

public final class X1PDeclaratorTail extends XPDeclaratorTail
{
    private XPDeclaratorTail _xPDeclaratorTail_;
    private PDeclaratorTail _pDeclaratorTail_;

    public X1PDeclaratorTail()
    {
    }

    public X1PDeclaratorTail(
        XPDeclaratorTail _xPDeclaratorTail_,
        PDeclaratorTail _pDeclaratorTail_)
    {
        setXPDeclaratorTail(_xPDeclaratorTail_);
        setPDeclaratorTail(_pDeclaratorTail_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPDeclaratorTail getXPDeclaratorTail()
    {
        return _xPDeclaratorTail_;
    }

    public void setXPDeclaratorTail(XPDeclaratorTail node)
    {
        if(_xPDeclaratorTail_ != null)
        {
            _xPDeclaratorTail_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPDeclaratorTail_ = node;
    }

    public PDeclaratorTail getPDeclaratorTail()
    {
        return _pDeclaratorTail_;
    }

    public void setPDeclaratorTail(PDeclaratorTail node)
    {
        if(_pDeclaratorTail_ != null)
        {
            _pDeclaratorTail_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pDeclaratorTail_ = node;
    }

    void removeChild(Node child)
    {
        if(_xPDeclaratorTail_ == child)
        {
            _xPDeclaratorTail_ = null;
        }

        if(_pDeclaratorTail_ == child)
        {
            _pDeclaratorTail_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPDeclaratorTail_) +
            toString(_pDeclaratorTail_);
    }
}
