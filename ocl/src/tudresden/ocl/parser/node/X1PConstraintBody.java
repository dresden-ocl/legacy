/* This file was generated by SableCC (http://www.sable.mcgill.ca/sablecc/). */

package tudresden.ocl.parser.node;

import tudresden.ocl.parser.analysis.*;

public final class X1PConstraintBody extends XPConstraintBody
{
    private XPConstraintBody _xPConstraintBody_;
    private PConstraintBody _pConstraintBody_;

    public X1PConstraintBody()
    {
    }

    public X1PConstraintBody(
        XPConstraintBody _xPConstraintBody_,
        PConstraintBody _pConstraintBody_)
    {
        setXPConstraintBody(_xPConstraintBody_);
        setPConstraintBody(_pConstraintBody_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPConstraintBody getXPConstraintBody()
    {
        return _xPConstraintBody_;
    }

    public void setXPConstraintBody(XPConstraintBody node)
    {
        if(_xPConstraintBody_ != null)
        {
            _xPConstraintBody_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPConstraintBody_ = node;
    }

    public PConstraintBody getPConstraintBody()
    {
        return _pConstraintBody_;
    }

    public void setPConstraintBody(PConstraintBody node)
    {
        if(_pConstraintBody_ != null)
        {
            _pConstraintBody_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pConstraintBody_ = node;
    }

    void removeChild(Node child)
    {
        if(_xPConstraintBody_ == child)
        {
            _xPConstraintBody_ = null;
        }

        if(_pConstraintBody_ == child)
        {
            _pConstraintBody_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPConstraintBody_) +
            toString(_pConstraintBody_);
    }
}
