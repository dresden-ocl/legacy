/* This file was generated by SableCC (http://www.sable.mcgill.ca/sablecc/). */

package tudresden.ocl.parser.node;

import tudresden.ocl.parser.analysis.*;

public final class X1PLogicalExpressionTail extends XPLogicalExpressionTail
{
    private XPLogicalExpressionTail _xPLogicalExpressionTail_;
    private PLogicalExpressionTail _pLogicalExpressionTail_;

    public X1PLogicalExpressionTail()
    {
    }

    public X1PLogicalExpressionTail(
        XPLogicalExpressionTail _xPLogicalExpressionTail_,
        PLogicalExpressionTail _pLogicalExpressionTail_)
    {
        setXPLogicalExpressionTail(_xPLogicalExpressionTail_);
        setPLogicalExpressionTail(_pLogicalExpressionTail_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPLogicalExpressionTail getXPLogicalExpressionTail()
    {
        return _xPLogicalExpressionTail_;
    }

    public void setXPLogicalExpressionTail(XPLogicalExpressionTail node)
    {
        if(_xPLogicalExpressionTail_ != null)
        {
            _xPLogicalExpressionTail_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPLogicalExpressionTail_ = node;
    }

    public PLogicalExpressionTail getPLogicalExpressionTail()
    {
        return _pLogicalExpressionTail_;
    }

    public void setPLogicalExpressionTail(PLogicalExpressionTail node)
    {
        if(_pLogicalExpressionTail_ != null)
        {
            _pLogicalExpressionTail_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pLogicalExpressionTail_ = node;
    }

    void removeChild(Node child)
    {
        if(_xPLogicalExpressionTail_ == child)
        {
            _xPLogicalExpressionTail_ = null;
        }

        if(_pLogicalExpressionTail_ == child)
        {
            _pLogicalExpressionTail_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPLogicalExpressionTail_) +
            toString(_pLogicalExpressionTail_);
    }
}

